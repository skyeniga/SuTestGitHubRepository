
#pragma warning disable 162

namespace Application_Import_Logic
{

    [System.SerializableAttribute]
    sealed public class __Application_Import_Definition_HomeDisasterLoanApplication__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Application_Import_Definition.HomeDisasterLoanApplication _schema = new Application_Import_Definition.HomeDisasterLoanApplication();

        public __Application_Import_Definition_HomeDisasterLoanApplication__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Application_Import_Definition.HomeDisasterLoanApplication)
        },
        new string[]{
            "Application"
        },
        new System.Type[]{
            typeof(__Application_Import_Definition_HomeDisasterLoanApplication__)
        },
        0,
        @"Application"
    )]
    [System.SerializableAttribute]
    sealed internal class ApplicationMsgType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Application_Import_Definition_HomeDisasterLoanApplication__ Application;

        private void __CreatePartWrappers()
        {
            Application = new __Application_Import_Definition_HomeDisasterLoanApplication__(this, "Application", 0);
            this.AddPart("Application", 0, Application);
        }

        public ApplicationMsgType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_Update__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.Update _schema = new Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.Update();

        public __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_Update__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.Update)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_Update__)
        },
        0,
        @"http://Microsoft.LobServices.OracleDB/2007/03/DCMS_INT/View/SUBMITTED_APPLICATIONS#Update"
    )]
    [System.SerializableAttribute]
    sealed internal class OracleUpdateSubmittedApplicationsStatusRequestType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_Update__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_Update__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public OracleUpdateSubmittedApplicationsStatusRequestType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_UpdateResponse__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.UpdateResponse _schema = new Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.UpdateResponse();

        public __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_UpdateResponse__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.UpdateResponse)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_UpdateResponse__)
        },
        0,
        @"http://Microsoft.LobServices.OracleDB/2007/03/DCMS_INT/View/SUBMITTED_APPLICATIONS#UpdateResponse"
    )]
    [System.SerializableAttribute]
    sealed internal class OracleUpdateSubmittedApplicationsStatusResponseType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_UpdateResponse__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Oracle_Application_Import_Definition_DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2_UpdateResponse__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public OracleUpdateSubmittedApplicationsStatusResponseType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_Request__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.Request _schema = new Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.Request();

        public __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_Request__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.Request)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_Request__)
        },
        0,
        @"http://SBA.gov/DLAPApplicationImport/REST/Query/Application#Request"
    )]
    [System.SerializableAttribute]
    sealed internal class RestApplicationQueryRequestType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_Request__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_Request__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestApplicationQueryRequestType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_QueryResult__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.QueryResult _schema = new Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.QueryResult();

        public __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_QueryResult__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.QueryResult)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_QueryResult__)
        },
        0,
        @"http://SBA.gov/DLAPApplicationImport/REST/Query/Application#QueryResult"
    )]
    [System.SerializableAttribute]
    sealed internal class RestApplicationQueryResponseType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_QueryResult__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Application__c_RestApplication__c_RestApplicationQuery_QueryResult__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestApplicationQueryResponseType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_Request__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.Request _schema = new Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.Request();

        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_Request__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.Request)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_Request__)
        },
        0,
        @"http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest#Request"
    )]
    [System.SerializableAttribute]
    sealed internal class RestEventRequestQueryRequestType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_Request__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_Request__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestEventRequestQueryRequestType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_QueryResult__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.QueryResult _schema = new Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.QueryResult();

        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_QueryResult__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.QueryResult)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_QueryResult__)
        },
        0,
        @"http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest#QueryResult"
    )]
    [System.SerializableAttribute]
    sealed internal class RestEventRequestQueryResponseType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_QueryResult__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequestQuery_QueryResult__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestEventRequestQueryResponseType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Account.CDataServiceAccount.table _schema = new Salesforce_Application_Import_Definition.Account.CDataServiceAccount.table();

        public __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Account.CDataServiceAccount.table)
        },
        new string[]{
            "table"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Account_CDataServiceAccount_table__)
        },
        0,
        @"http://sba-oda/DLAP/Account#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseAccount : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_table__ table;

        private void __CreatePartWrappers()
        {
            table = new __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_table__(this, "table", 0);
            this.AddPart("table", 0, table);
        }

        public StatementResponseAccount(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Account.CDataServiceAccount.parameters _schema = new Salesforce_Application_Import_Definition.Account.CDataServiceAccount.parameters();

        public __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Account.CDataServiceAccount.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Account_CDataServiceAccount_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Account#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestAccount : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_Account_CDataServiceAccount_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestAccount(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_table__)
        },
        0,
        @"http://sba-oda/DLAP/RecordType#table"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementResponseRecordType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseRecordType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/RecordType#parameters"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementRequestRecordType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataService_RecordType_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestRecordType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Applicant__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseApplicant__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseApplicant__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Applicant__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestApplicant__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceApplicant__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestApplicant__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.parameters _schema = new Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.parameters();

        public __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/UpdateApplicant__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementRequestUpdateApplicant__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestUpdateApplicant__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.table _schema = new Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.table();

        public __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/UpdateApplicant__c#table"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementResponseUpdateApplicant__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataServiceUpdateApplicant__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseUpdateApplicant__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/DisasterLookup#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestDisasterLookup : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestDisasterLookup(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_table__)
        },
        0,
        @"http://sba-oda/DLAP/DisasterLookup#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseDisasterLookup : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceDisasterLookup_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseDisasterLookup(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Application__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseApplication__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseApplication__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Application__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestApplication__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceApplication__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestApplication__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupRequest__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupRequest _schema = new Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupRequest();

        public __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupRequest__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupRequest)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupRequest__)
        },
        0,
        @"https://SBA.gov/REST/Query/DLAPApplicationImport/RestDisasterLookupRequest#RestDisasterLookupRequest"
    )]
    [System.SerializableAttribute]
    sealed internal class RestStatementDisasterLookupRequest : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupRequest__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupRequest__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestStatementDisasterLookupRequest(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupResponse__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupResponse _schema = new Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupResponse();

        public __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupResponse__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupResponse)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupResponse__)
        },
        0,
        @"https://SBA.gov/REST/Query/DLAPApplicationImport/RestDisasterLookupResponse#QueryResult"
    )]
    [System.SerializableAttribute]
    sealed internal class RestStatementDisasterLookupResponse : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupResponse__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Application__c_RestDisaster__c_RestDisasterLookupResponse__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestStatementDisasterLookupResponse(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceContact.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceContact.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceContact.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceContact_table__)
        },
        0,
        @"http://sba-oda/DLAP/Contact#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseContact : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseContact(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceContact.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceContact.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceContact.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceContact_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Contact#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestContact : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceContact_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestContact(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Insurance__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseInsurance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseInsurance__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Insurance__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestInsurance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceInsurance__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestInsurance__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/DamagedProperty__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseProperty__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseProperty__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/DamagedProperty__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestProperty__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceDamaged_Property__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestProperty__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/IRS_Transcripts__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseIRS_Transcripts__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseIRS_Transcripts__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/IRS_Transcripts__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestIRS_Transcripts__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceIRS_Transcripts__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestIRS_Transcripts__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.table _schema = new Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.table();

        public __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Asset_Incomes__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseAsset_Incomes__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseAsset_Incomes__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.parameters _schema = new Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.parameters();

        public __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Asset_Incomes__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestAsset_Incomes__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataService_Asset_Incomes__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestAsset_Incomes__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Mortgage__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseMortgage__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseMortgage__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Mortgage__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestMortgage__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceMortgage__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestMortgage__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Debts_Expenses__c#table"
    )]
    [System.SerializableAttribute]
    sealed public class StatementResponseDebts_Expenses__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseDebts_Expenses__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Debts_Expenses__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed public class StatementRequestDebts_Expenses__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataServiceDebts_Expenses__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestDebts_Expenses__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Application_Import_Definition_OraclePollingMultipleApplications_POLLINGSTMT__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Application_Import_Definition.OraclePollingMultipleApplications.POLLINGSTMT _schema = new Application_Import_Definition.OraclePollingMultipleApplications.POLLINGSTMT();

        public __Application_Import_Definition_OraclePollingMultipleApplications_POLLINGSTMT__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Application_Import_Definition.OraclePollingMultipleApplications.POLLINGSTMT)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Application_Import_Definition_OraclePollingMultipleApplications_POLLINGSTMT__)
        },
        0,
        @"http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer#POLLINGSTMT"
    )]
    [System.SerializableAttribute]
    sealed internal class OraclePollingMultipleApplicationsType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Application_Import_Definition_OraclePollingMultipleApplications_POLLINGSTMT__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Application_Import_Definition_OraclePollingMultipleApplications_POLLINGSTMT__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public OraclePollingMultipleApplicationsType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequest__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequest _schema = new Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequest();

        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequest__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequest)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequest__)
        },
        0,
        @"http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventRequest#SaveRequest"
    )]
    [System.SerializableAttribute]
    sealed internal class RestEventRequestType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequest__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Event_Request__c_RestEventRequest__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestEventRequestType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_Event_Request__c_RestEventResponse__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.Event_Request__c.RestEventResponse _schema = new Salesforce_Application_Import_Definition.Event_Request__c.RestEventResponse();

        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventResponse__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.Event_Request__c.RestEventResponse)
        },
        new string[]{
            "MessagePart"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_Event_Request__c_RestEventResponse__)
        },
        0,
        @"http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse#results"
    )]
    [System.SerializableAttribute]
    sealed internal class RestEventResponseType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_Event_Request__c_RestEventResponse__ MessagePart;

        private void __CreatePartWrappers()
        {
            MessagePart = new __Salesforce_Application_Import_Definition_Event_Request__c_RestEventResponse__(this, "MessagePart", 0);
            this.AddPart("MessagePart", 0, MessagePart);
        }

        public RestEventResponseType(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.parameters _schema = new Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.parameters();

        public __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Other_Assistance__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementRequestOther_Assistance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestOther_Assistance__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.table _schema = new Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.table();

        public __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Other_Assistance__c#table"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementResponseOther_Assistance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataServiceOther_Assistance__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseOther_Assistance__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.parameters _schema = new Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.parameters();

        public __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Additional_Contact__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementRequestAdditional_Contact__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestAdditional_Contact__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.table _schema = new Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.table();

        public __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Additional_Contact__c#table"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementResponseAdditional_Contact__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_CDataService_Additional_Contact__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseAdditional_Contact__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_parameters__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.parameters _schema = new Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.parameters();

        public __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_parameters__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.parameters)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_parameters__)
        },
        0,
        @"http://sba-oda/DLAP/Decline_Withdrawal_Code__c#parameters"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementRequestUpdateDecline_Withdrawal_Code__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_parameters__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_parameters__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementRequestUpdateDecline_Withdrawal_Code__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [System.SerializableAttribute]
    sealed public class __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_table__ : Microsoft.XLANGs.Core.XSDPart
    {
        private static Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.table _schema = new Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.table();

        public __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_table__(Microsoft.XLANGs.Core.XMessage msg, string name, int index) : base(msg, name, index) { }

        
        #region part reflection support
        public static Microsoft.XLANGs.BaseTypes.SchemaBase PartSchema { get { return (Microsoft.XLANGs.BaseTypes.SchemaBase)_schema; } }
        #endregion // part reflection support
    }

    [Microsoft.XLANGs.BaseTypes.MessageTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSMessageInfo.eNone,
        "",
        new System.Type[]{
            typeof(Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.table)
        },
        new string[]{
            "parameters"
        },
        new System.Type[]{
            typeof(__Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_table__)
        },
        0,
        @"http://sba-oda/DLAP/Decline_Withdrawal_Code__c#table"
    )]
    [System.SerializableAttribute]
    sealed internal class StatementResponseUpdateDecline_Withdrawal_Code__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXMessage
    {
        public __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_table__ parameters;

        private void __CreatePartWrappers()
        {
            parameters = new __Salesforce_Application_Import_Definition_XSD_CDataService_Decline_Withdrawal_Code__c_table__(this, "parameters", 0);
            this.AddPart("parameters", 0, parameters);
        }

        public StatementResponseUpdateDecline_Withdrawal_Code__c(string msgName, Microsoft.XLANGs.Core.Context ctx) : base(msgName, ctx)
        {
            __CreatePartWrappers();
        }
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusRequestType), 
            typeof(Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusResponseType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class OracleUpdateSubmittedApplicationsStatusPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public OracleUpdateSubmittedApplicationsStatusPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public OracleUpdateSubmittedApplicationsStatusPortType(OracleUpdateSubmittedApplicationsStatusPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            OracleUpdateSubmittedApplicationsStatusPortType p = new OracleUpdateSubmittedApplicationsStatusPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(OracleUpdateSubmittedApplicationsStatusPortType),
            typeof(OracleUpdateSubmittedApplicationsStatusRequestType),
            typeof(OracleUpdateSubmittedApplicationsStatusResponseType),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Notify",
        new System.Type[]{
            typeof(Application_Import_Logic.ApplicationMsgType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class ReceiveApplicationPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public ReceiveApplicationPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public ReceiveApplicationPortType(ReceiveApplicationPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            ReceiveApplicationPortType p = new ReceiveApplicationPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Notify = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Notify",
            System.Web.Services.Description.OperationFlow.OneWay,
            typeof(ReceiveApplicationPortType),
            typeof(ApplicationMsgType),
            null,
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Notify" ] = Notify;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "DocumentUploadSendTrigger",
        new System.Type[]{
            typeof(Application_Import_Logic.__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class DocumentUploadPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public DocumentUploadPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public DocumentUploadPortType(DocumentUploadPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            DocumentUploadPortType p = new DocumentUploadPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo DocumentUploadSendTrigger = new Microsoft.XLANGs.Core.OperationInfo
        (
            "DocumentUploadSendTrigger",
            System.Web.Services.Description.OperationFlow.OneWay,
            typeof(DocumentUploadPortType),
            typeof(__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical),
            null,
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "DocumentUploadSendTrigger" ] = DocumentUploadSendTrigger;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation_1",
        new System.Type[]{
            typeof(Application_Import_Logic.__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class DebugSendInflightFromCallerPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public DebugSendInflightFromCallerPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public DebugSendInflightFromCallerPortType(DebugSendInflightFromCallerPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            DebugSendInflightFromCallerPortType p = new DebugSendInflightFromCallerPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation_1 = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation_1",
            System.Web.Services.Description.OperationFlow.OneWay,
            typeof(DebugSendInflightFromCallerPortType),
            typeof(__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical),
            null,
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation_1" ] = Operation_1;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.RestApplicationQueryRequestType), 
            typeof(Application_Import_Logic.RestApplicationQueryResponseType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class RestApplicationQueryPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public RestApplicationQueryPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public RestApplicationQueryPortType(RestApplicationQueryPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            RestApplicationQueryPortType p = new RestApplicationQueryPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(RestApplicationQueryPortType),
            typeof(RestApplicationQueryRequestType),
            typeof(RestApplicationQueryResponseType),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.RestEventRequestQueryRequestType), 
            typeof(Application_Import_Logic.RestEventRequestQueryResponseType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class RestEventRequestInfoPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public RestEventRequestInfoPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public RestEventRequestInfoPortType(RestEventRequestInfoPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            RestEventRequestInfoPortType p = new RestEventRequestInfoPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(RestEventRequestInfoPortType),
            typeof(RestEventRequestQueryRequestType),
            typeof(RestEventRequestQueryResponseType),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }
    [Microsoft.XLANGs.BaseTypes.CorrelationTypeAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        new string[] {
            "Application_Import_Definition.DocumentUpload"
        }
    )]
    sealed internal class DocumentUploadCorrelationType : Microsoft.XLANGs.Core.CorrelationType
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        private static Microsoft.XLANGs.BaseTypes.PropertyBase[] _properties = new Microsoft.XLANGs.BaseTypes.PropertyBase[] {
            new Application_Import_Definition.DocumentUpload()
         };
        public override Microsoft.XLANGs.BaseTypes.PropertyBase[] Properties { get { return _properties; } }
        public static Microsoft.XLANGs.BaseTypes.PropertyBase[] PropertiesList { get { return _properties; } }
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestAccount), 
            typeof(Application_Import_Logic.StatementResponseAccount)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectAccount : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectAccount(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectAccount(CDataServiceSelectAccount p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectAccount p = new CDataServiceSelectAccount(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectAccount),
            typeof(StatementRequestAccount),
            typeof(StatementResponseAccount),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestRecordType), 
            typeof(Application_Import_Logic.StatementResponseRecordType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class CDataServiceSelectRecordType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectRecordType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectRecordType(CDataServiceSelectRecordType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectRecordType p = new CDataServiceSelectRecordType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectRecordType),
            typeof(StatementRequestRecordType),
            typeof(StatementResponseRecordType),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestApplicant__c), 
            typeof(Application_Import_Logic.StatementResponseApplicant__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectApplicant__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectApplicant__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectApplicant__c(CDataServiceSelectApplicant__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectApplicant__c p = new CDataServiceSelectApplicant__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectApplicant__c),
            typeof(StatementRequestApplicant__c),
            typeof(StatementResponseApplicant__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestUpdateApplicant__c), 
            typeof(Application_Import_Logic.StatementResponseUpdateApplicant__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class CDataServiceSelectUpdateApplicant__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectUpdateApplicant__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectUpdateApplicant__c(CDataServiceSelectUpdateApplicant__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectUpdateApplicant__c p = new CDataServiceSelectUpdateApplicant__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectUpdateApplicant__c),
            typeof(StatementRequestUpdateApplicant__c),
            typeof(StatementResponseUpdateApplicant__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.RestStatementDisasterLookupRequest), 
            typeof(Application_Import_Logic.RestStatementDisasterLookupResponse)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class RestDisasterLookupPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public RestDisasterLookupPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public RestDisasterLookupPortType(RestDisasterLookupPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            RestDisasterLookupPortType p = new RestDisasterLookupPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(RestDisasterLookupPortType),
            typeof(RestStatementDisasterLookupRequest),
            typeof(RestStatementDisasterLookupResponse),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestApplication__c), 
            typeof(Application_Import_Logic.StatementResponseApplication__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectApplication__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectApplication__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectApplication__c(CDataServiceSelectApplication__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectApplication__c p = new CDataServiceSelectApplication__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectApplication__c),
            typeof(StatementRequestApplication__c),
            typeof(StatementResponseApplication__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestContact), 
            typeof(Application_Import_Logic.StatementResponseContact)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectContact : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectContact(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectContact(CDataServiceSelectContact p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectContact p = new CDataServiceSelectContact(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectContact),
            typeof(StatementRequestContact),
            typeof(StatementResponseContact),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestInsurance__c), 
            typeof(Application_Import_Logic.StatementResponseInsurance__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectInsurance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectInsurance__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectInsurance__c(CDataServiceSelectInsurance__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectInsurance__c p = new CDataServiceSelectInsurance__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectInsurance__c),
            typeof(StatementRequestInsurance__c),
            typeof(StatementResponseInsurance__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestProperty__c), 
            typeof(Application_Import_Logic.StatementResponseProperty__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectProperty__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectProperty__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectProperty__c(CDataServiceSelectProperty__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectProperty__c p = new CDataServiceSelectProperty__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectProperty__c),
            typeof(StatementRequestProperty__c),
            typeof(StatementResponseProperty__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestIRS_Transcripts__c), 
            typeof(Application_Import_Logic.StatementResponseIRS_Transcripts__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectIRS_Transcripts__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectIRS_Transcripts__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectIRS_Transcripts__c(CDataServiceSelectIRS_Transcripts__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectIRS_Transcripts__c p = new CDataServiceSelectIRS_Transcripts__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectIRS_Transcripts__c),
            typeof(StatementRequestIRS_Transcripts__c),
            typeof(StatementResponseIRS_Transcripts__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestAsset_Incomes__c), 
            typeof(Application_Import_Logic.StatementResponseAsset_Incomes__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectAsset_Incomes__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectAsset_Incomes__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectAsset_Incomes__c(CDataServiceSelectAsset_Incomes__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectAsset_Incomes__c p = new CDataServiceSelectAsset_Incomes__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectAsset_Incomes__c),
            typeof(StatementRequestAsset_Incomes__c),
            typeof(StatementResponseAsset_Incomes__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestMortgage__c), 
            typeof(Application_Import_Logic.StatementResponseMortgage__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectMortgage__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectMortgage__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectMortgage__c(CDataServiceSelectMortgage__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectMortgage__c p = new CDataServiceSelectMortgage__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectMortgage__c),
            typeof(StatementRequestMortgage__c),
            typeof(StatementResponseMortgage__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestDebts_Expenses__c), 
            typeof(Application_Import_Logic.StatementResponseDebts_Expenses__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic, "")]
    [System.SerializableAttribute]
    sealed public class CDataServiceSelectDebts_Expenses__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectDebts_Expenses__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectDebts_Expenses__c(CDataServiceSelectDebts_Expenses__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectDebts_Expenses__c p = new CDataServiceSelectDebts_Expenses__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectDebts_Expenses__c),
            typeof(StatementRequestDebts_Expenses__c),
            typeof(StatementResponseDebts_Expenses__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.OraclePollingMultipleApplicationsType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class OraclePollingPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public OraclePollingPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public OraclePollingPortType(OraclePollingPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            OraclePollingPortType p = new OraclePollingPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.OneWay,
            typeof(OraclePollingPortType),
            typeof(OraclePollingMultipleApplicationsType),
            null,
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.ApplicationMsgType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class DLAPSingleApplicationImportPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public DLAPSingleApplicationImportPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public DLAPSingleApplicationImportPortType(DLAPSingleApplicationImportPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            DLAPSingleApplicationImportPortType p = new DLAPSingleApplicationImportPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.OneWay,
            typeof(DLAPSingleApplicationImportPortType),
            typeof(ApplicationMsgType),
            null,
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.RestEventRequestType), 
            typeof(Application_Import_Logic.RestEventResponseType)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class RestEventPortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public RestEventPortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public RestEventPortType(RestEventPortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            RestEventPortType p = new RestEventPortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(RestEventPortType),
            typeof(RestEventRequestType),
            typeof(RestEventResponseType),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestOther_Assistance__c), 
            typeof(Application_Import_Logic.StatementResponseOther_Assistance__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class CDataServiceSelectOther_Assistance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectOther_Assistance__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectOther_Assistance__c(CDataServiceSelectOther_Assistance__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectOther_Assistance__c p = new CDataServiceSelectOther_Assistance__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectOther_Assistance__c),
            typeof(StatementRequestOther_Assistance__c),
            typeof(StatementResponseOther_Assistance__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "statement",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestAdditional_Contact__c), 
            typeof(Application_Import_Logic.StatementResponseAdditional_Contact__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class CDataServiceSelectAddtional_Contact__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceSelectAddtional_Contact__c(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceSelectAddtional_Contact__c(CDataServiceSelectAddtional_Contact__c p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceSelectAddtional_Contact__c p = new CDataServiceSelectAddtional_Contact__c(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo statement = new Microsoft.XLANGs.Core.OperationInfo
        (
            "statement",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceSelectAddtional_Contact__c),
            typeof(StatementRequestAdditional_Contact__c),
            typeof(StatementResponseAdditional_Contact__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "statement" ] = statement;
                return h;
            }
        }
        #endregion // port reflection support
    }

    [Microsoft.XLANGs.BaseTypes.PortTypeOperationAttribute(
        "Operation",
        new System.Type[]{
            typeof(Application_Import_Logic.StatementRequestUpdateDecline_Withdrawal_Code__c), 
            typeof(Application_Import_Logic.StatementResponseUpdateDecline_Withdrawal_Code__c)
        },
        new string[]{
        }
    )]
    [Microsoft.XLANGs.BaseTypes.PortTypeAttribute(Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal, "")]
    [System.SerializableAttribute]
    sealed internal class CDataServiceDeclineWithdrawalCodePortType : Microsoft.BizTalk.XLANGs.BTXEngine.BTXPortBase
    {
        public CDataServiceDeclineWithdrawalCodePortType(int portInfo, Microsoft.XLANGs.Core.IServiceProxy s)
            : base(portInfo, s)
        { }
        public CDataServiceDeclineWithdrawalCodePortType(CDataServiceDeclineWithdrawalCodePortType p)
            : base(p)
        { }

        public override Microsoft.XLANGs.Core.PortBase Clone()
        {
            CDataServiceDeclineWithdrawalCodePortType p = new CDataServiceDeclineWithdrawalCodePortType(this);
            return p;
        }

        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        #region port reflection support
        static public Microsoft.XLANGs.Core.OperationInfo Operation = new Microsoft.XLANGs.Core.OperationInfo
        (
            "Operation",
            System.Web.Services.Description.OperationFlow.RequestResponse,
            typeof(CDataServiceDeclineWithdrawalCodePortType),
            typeof(StatementRequestUpdateDecline_Withdrawal_Code__c),
            typeof(StatementResponseUpdateDecline_Withdrawal_Code__c),
            new System.Type[]{},
            new string[]{}
        );
        static public System.Collections.Hashtable OperationsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[ "Operation" ] = Operation;
                return h;
            }
        }
        #endregion // port reflection support
    }
    //#line 1796 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\DLAP Application Import.odx"
    [Microsoft.XLANGs.BaseTypes.StaticSubscriptionAttribute(
        0, "DLAPApplicationImport", "Operation", -1, -1, true
    )]
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eImplements,
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses,
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses,
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.DLAPSingleApplicationImportPortType),
            typeof(Application_Import_Logic.RestApplicationQueryPortType),
            typeof(Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusPortType),
            typeof(Application_Import_Logic.RestEventRequestInfoPortType)
        },
        new System.String[] {
            "DLAPApplicationImport",
            "RestApplicationQueryPort",
            "OracleUpdateSubmittedApplicationsStatusPort",
            "RestEventRequestInfoPort"
        },
        new System.Type[] {
            null,
            null,
            null,
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
            typeof(Application_Import_Logic.CallSalesForceApplication__c),
            typeof(Application_Import_Logic.CallAddtionalContact),
            typeof(Application_Import_Logic.CallSalesforceAccount),
            typeof(Application_Import_Logic.CallSalesForceProperty__c),
            typeof(Application_Import_Logic.CallSalesForceContact),
            typeof(Application_Import_Logic.CallSalesForceApplicant),
            typeof(Application_Import_Logic.CallSalesForceInsurance),
            typeof(Application_Import_Logic.CallSalesforceOther_Assistance__c),
            typeof(Application_Import_Logic.CallSalesForceAssetIncomes),
            typeof(Application_Import_Logic.CallSalesForceDebts_Expenses__c),
            typeof(Application_Import_Logic.CallSalesForceMortgage__c),
            typeof(Application_Import_Logic.CallSalesForceIRS_Transcripts__c),
            typeof(Application_Import_Logic.CallSalesForceDecline_Withdrawal_Code__c),
            typeof(Application_Import_Logic.DocumentCoordinatorLogic),
            typeof(Application_Import_Logic.Call_Event_Request__c),
            typeof(Application_Import_Logic.Error_Analyzer),
            typeof(Application_Import_Logic.Call_Event_Request__c)
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eNone
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class DLAP_Application_Import : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
                "Application_Import_Logic.CallSalesForceApplication__c",
                "Application_Import_Logic.CallAddtionalContact",
                "Application_Import_Logic.CallSalesforceAccount",
                "Application_Import_Logic.CallSalesForceProperty__c",
                "Application_Import_Logic.CallSalesForceContact",
                "Application_Import_Logic.CallSalesForceApplicant",
                "Application_Import_Logic.CallSalesForceInsurance",
                "Application_Import_Logic.CallSalesforceOther_Assistance__c",
                "Application_Import_Logic.CallSalesForceAssetIncomes",
                "Application_Import_Logic.CallSalesForceDebts_Expenses__c",
                "Application_Import_Logic.CallSalesForceMortgage__c",
                "Application_Import_Logic.CallSalesForceIRS_Transcripts__c",
                "Application_Import_Logic.CallSalesForceDecline_Withdrawal_Code__c",
                "Application_Import_Logic.DocumentCoordinatorLogic",
                "Application_Import_Logic.Call_Event_Request__c",
                "Application_Import_Logic.Error_Analyzer",
                "Application_Import_Logic.Call_Event_Request__c"
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy()
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(DLAP_Application_Import));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return true; } }

        internal bool IsExeced = false;

        static DLAP_Application_Import()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment2), 1, 2, 2),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment3), 1, 2, 3),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment4), 1, 3, 4),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment5), 1, 4, 5),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment6), 1, 3, 6)
            };

            _Locks = 0;
            _rootContext = new __DLAP_Application_Import_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[22];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public DLAP_Application_Import(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "DLAP_Application_Import", tracker)
        {
            ConstructorHelper();
        }

        public DLAP_Application_Import(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "DLAP_Application_Import")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>6c407ecf-d230-45dc-a778-ae73082d9aea</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>c5d67012-32c1-47b4-ae71-9dd29b52957d</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Receive Application</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>94d27917-0551-447a-af2e-637722567319</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>DLAP ELA Application Processing</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>b87dca6a-52af-40d0-b295-947a9e3bf84f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set Variables</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ScopeShape</shapeType>      <ShapeID>2a53b9e8-a8dc-427e-b0f3-370160ba2ad1</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Scope</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>73202375-1487-4666-91d0-c4b6ef9bab2b</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Application Info Request Msg</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>273ff97d-ae60-422b-bc75-77458e3fdd59</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>8877e06f-1d26-4610-8944-04945fafd175</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Rest Application Info Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>59209685-b8d1-4548-aa32-e403aeae679e</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_10</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>bcd36c13-c2da-4c33-8ae2-86cb93a4e3ec</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_9</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>4ef82a3e-de78-454d-ae1c-b4ba3e7ca32c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>SOQL Query</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>6327fd21-b18f-4fd1-9d07-f567b1e72fc5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Rest Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>2d5d6b1e-8c9c-4722-9778-19f7c6a3fbbc</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Rest Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>7d1f98bb-2470-41bf-8088-9b94019fb143</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Validation Values</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CatchShape</shapeType>      <ShapeID>e9f77356-0101-4e74-9c23-3382ca23ee1f</ShapeID>      <ParentLink>Scope_Catch</ParentLink>                <shapeText>System Exception</shapeText>                      <ExceptionType>System.Exception</ExceptionType>            
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>6a548e54-24b7-4a61-a26b-710ba35dcf55</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Assign Variables</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>aa1ddfa5-2306-48bb-ac50-da7519676840</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Valid Application</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>deeecb82-0be2-4abd-a055-3d2130b1e9fe</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Valid</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ScopeShape</shapeType>      <ShapeID>1109c81f-3a2b-40a7-a937-c9840aae793e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Handle Exceptions</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>CallRulesShape</shapeType>      <ShapeID>f4e5d76b-0084-4601-b720-9a29ff4aec92</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Set DLAP Record Type Values Rules</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>RulesParameterRefShape</shapeType>      <ShapeID>1196c713-a45c-4073-b12f-85183e3bbbe2</ShapeID>      <ParentLink>CallRules_RulesParameterRef</ParentLink>                <shapeText>RulesParameterRef_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>4c64accf-92b8-47cc-9de8-a19a426c1933</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Application Processing</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>c91f9189-4ca4-4189-9dd6-d7b28245e52f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>91804920-74e2-4af9-8f1b-b9606c85cfd0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Application Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>5dbbceb3-fbe7-4868-9596-045f24fbabfd</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>821ceef7-bce7-4f10-b171-30cd362c2a61</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>77d4f39c-d5b3-46fa-985e-2d168284f54c</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>a894bf10-3034-4d4e-a84a-7363105a069a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Values</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>25a30aed-6096-44e1-9bd5-885369eb2ba8</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>db21e5c0-c67d-40db-8aca-9dffa6d5ac43</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Status Variables</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>927c3c8d-5fb6-4a20-9967-cf5005a9fdf7</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>653f4ff0-5cb2-4331-ae41-ffdd14593257</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Application</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>c8b6df57-8127-4cb7-82fc-98cba08fc528</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>8d172089-2427-49b5-9576-d52275e6fb8a</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Status</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>c8c07c35-01e4-4c0e-a89a-51821d75867d</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Message</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>d5f239e9-72c1-473e-84c0-59c021ba9d9d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>40ab2ff1-fc9e-4fe0-a5a8-687e62d24e1f</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>f68f9792-39c5-425b-b34a-55a55756a855</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>735322d9-b74a-49af-b8cf-a7936767d819</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Addtional Contact</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>1a89b0a5-13a9-4cc8-897b-6870d839cd36</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>c076cf7d-c91c-47c3-9f8e-9c211f264dd8</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>3a7d3166-1f6a-490a-a75d-0861ee55bfe0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>13372ea7-65df-4183-ac40-0878ae490434</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>26aed432-3be6-43e8-a6ad-dd381e6c8f62</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>dee70cd9-b3e8-437d-9980-7837ab1af0a5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Account</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>f3b48dfa-5ba3-430d-ab4d-b17efb367c06</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>1e07c549-fffc-4d8e-8f97-89a5781e49cc</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>5ad6edc1-7f0b-495e-a8c0-ea5bb80a15bc</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>e552d452-0753-481f-961b-805e5c934952</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>f303f26b-8ba5-46f2-84be-1747da0a6dd5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>ee522655-25b3-45dc-ba60-eed2d01c0cb4</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Property</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>7bff7c55-8b2b-46c3-8931-a9682be648e3</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>1bac2aa9-88e0-420e-a7ee-8c8e106d7884</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>419b7ae7-e003-4d5c-93d7-0ca10c52d933</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>702a5ddb-2b27-405c-aa34-38fc2a2cc703</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>c882a370-6713-4842-8973-273067cbc2ee</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>7ded9ef9-5d13-4aa8-be67-3c3a82146da2</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Contact</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>d0634b7b-faad-4275-8e3a-3874bcf5fb7e</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>c6fecfa9-838a-4aa6-9a3d-cca0e8de1f8e</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>788badcb-ede4-4471-a015-9286ce0d602e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>3a004e08-8808-4ad0-b65c-8033a8f97a36</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>97c81dfc-d814-42bb-a80a-25b35514615d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>12e0ed76-cbf5-4292-9108-67130ba41e36</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Applicant</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>b7c1bd35-7a41-4604-bb58-0a1a8ddeedf4</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>95c2c07a-61e4-4b71-bf8d-c1ec39a8d902</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>94d3b058-c41d-4b4d-9bab-5fa82e709a40</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>d1a3d9e6-122b-48fb-90e1-9cc06391eac2</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>17c93eac-849a-40f2-9180-3a8a5505eefa</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>24aea121-bf41-4b9f-93f6-497cb8e6eeae</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Insurance</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>2e681c49-ecb6-4144-b6b9-2d92b496f7a6</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>fb8c5361-76d7-43ed-b437-33c6d8c0c27b</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>705c3f87-c325-48b0-a527-fec7d683175b</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>7038ab12-552a-44ba-b916-8daf3ab5d63d</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>20c4f78c-bf1c-4a5d-9dfd-c0c0341001da</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>9fa5f89f-5817-450f-a15b-2c6047d34371</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Other Assistance</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>fb228ea0-e21b-4410-9271-c50d92707148</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>5e134968-6c9a-4954-ad38-ae18854cebcf</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>f5e249fb-e561-4e1e-b465-29efe4396232</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>699763bb-39dd-497e-8810-eb140681118c</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>c977b30f-7474-4e60-b2a2-f42dc0f65d30</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>146ea40f-c643-42dc-b9e5-7dac9955941a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call AssetIncomes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>d2fe93da-3ba1-41bc-8053-fb9d12decd2c</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>87fde7fd-21bf-4ec0-af03-2522011c9538</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>b49e0a74-e161-4b9e-97b3-be6bccdefc17</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>af91a610-251c-4aa7-889d-b1ec1422ff45</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>e90247e1-9115-4249-9dff-de55e1c25dd1</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>ae9a1cc7-bcb5-46f3-a422-6b3b6f12a55b</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call DebtsExpenses__c</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>ae03f242-d940-4975-903b-f5d592222d6c</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>0b914bc4-a263-4481-91e1-f9b966af917b</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>3f84502f-4c59-4053-b3b4-cd98bceb5aa0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>2271de41-4572-4d69-8e33-c647e65b8ccf</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>acd3c2d4-57f9-4ba9-8a17-0a1ff53d953b</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>bac05c20-3400-4a91-a4a3-8a2c4a21da35</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Mortgage</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>18cf218d-2b68-4cab-87d8-751c83d2bc73</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>cf584ff6-0b2c-4f61-a1e6-bc4182f766c7</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>26614705-7e85-46b5-a0f4-6cab2f78e7d4</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>f7d28a96-56a1-460d-a548-e3d82cb91bf0</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>4de747d3-ecc4-4b2a-8939-da7211805733</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>6fec3daf-0cd1-4d65-ac27-fdfef564b830</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call IRS Transcripts</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>4f6004f1-6db6-4f37-a54a-56ef77ee588b</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>fa5a05fd-1847-4b7b-aa02-be80214b83f5</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>7718e7e6-e3f9-481f-965f-2508523fd177</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>38d06d32-ac82-48f7-8e60-0120682335c1</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Summary Decline Code</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>c28d00db-c7b6-4a7c-b352-9bb747a5261c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>038f4782-16cb-4db5-8d48-8853d4c9ade8</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Summary Decline Code</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>f022b46c-6742-4cec-a9e9-79b27d0b8578</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>a880978d-8cc6-43b2-9eff-d39438a82110</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>778e7ada-3599-4edd-a11d-7908de903d4a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>55fbf2ff-8511-48a3-a4c7-fcc224d4ac38</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>8f2cebb5-5c5e-4ed5-8b4a-408286ff7d95</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set process step</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>ab59a960-bfc7-4988-81a0-57cb0b1efe83</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call DLAP Documents</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>dd31ef70-f4d5-44d2-80bb-4e32a7721157</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationCanonicalMsg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>8eecd464-fd5c-463d-a6af-41badb1fdfc0</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>371f6bcd-2aa1-4600-a9a6-17d456854c6a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success or Error?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>c7890c91-3046-4f36-ba8e-676c17bca820</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Success</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>dc756d9b-997c-4085-ab7e-9a43eefad675</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Oracle Success Status Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>00c0aa9d-b3f5-435e-8f1b-17573a2ee9b0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Oracle Success Status Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>ae411343-59e1-4d9d-a379-d79ed11167f3</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_4</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>f0d0b8b2-b746-412b-a344-a8f5c3f755b9</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>08cbea99-4c88-4ddc-890e-d627005fd3a0</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>adcadd23-a009-4ec3-9c11-3350147001d7</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Error</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>bdb7053f-18ac-4cac-97bf-a774a77415a5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Oracle Error Status Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>0087f5c5-dbe9-4e1e-bbe2-860ec8a4613e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Oracle Error Status Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>12361789-1a01-4523-bf29-a743fb8f0d8f</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_6</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>3be3d3f8-969b-42c1-b55f-6b1b2a3672c1</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_5</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>25cac496-6989-4d97-8d02-d23815aca2d4</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>ad9fd4ec-633b-4e78-bae6-738400458e69</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Update Status</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>03a434db-c739-4162-981f-2bdc8db40e52</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Update Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>7fb4d9f3-5d2f-488e-a947-17dd2793239e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Event Create</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>c71376d9-3f5d-406c-8edf-b4f2050c8c6d</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationNumber</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>34fd5ff2-cb99-4ef6-9b9a-c1e4c018283c</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>SalesForceObjectID</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>af638cd8-7525-487c-99c8-f4ca75d67c76</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Message</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>baa79ae2-d2af-4ed0-acf5-227343331a32</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>SalesForceObjectName</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>f969a28a-f3b8-4fc6-8379-879ae71b60db</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Stage</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>26fe521c-dde2-4b07-aec6-51545d664c0f</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Status</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>4916992f-24e5-4440-a984-5d6a94a9ce3f</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>AutoDeclineReason</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>296b4acb-eb6a-44d7-a84b-a86dec536db7</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>OrchestrationInstanceID</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CatchShape</shapeType>      <ShapeID>b470b70b-3699-44c8-a635-e59c5cbac3f5</ShapeID>      <ParentLink>Scope_Catch</ParentLink>                <shapeText>Catch Exception</shapeText>                      <ExceptionType>System.Exception</ExceptionType>            
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>8644bd84-3b79-413e-9645-b0988028d9bb</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Assign Variables</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>d7396b68-8fb9-41ef-87fc-6816c43a1e03</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Construct Event Request Info Request Msg</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>a140d251-33ee-463b-96f4-94b0bfab6e7d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Rest EventRequest Info Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>fb6cec4e-95cc-470a-a2c9-bf40fc08a934</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_12</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>4f6200f4-58cb-475b-9d04-08667c985246</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_11</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>11da616a-828f-452d-9f31-b850a4b64c6a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>SOQL Query</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>d31b67c4-ab16-4bab-9115-6f767ca98630</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>df3ffe97-ecf0-4252-aa47-9811e928499e</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Send EventRequest </shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>3282e9b0-7429-49d1-b0dc-9d81ceed1c6b</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Receive EventRequest Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>85b76039-5c37-40b6-ac0b-79dc1cbdfbfb</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>EventRequest Validation Values</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>2394cfae-841a-4b71-93d7-267d42d51feb</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Valid Event?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>edb137dc-7bad-4363-b81b-8a1f8aaa114a</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Event Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>9572360b-8f62-4368-90c6-a11072ca3986</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Oracle Error Status Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>436ccdc7-b9d2-406d-8c8c-aa3fe21a249d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Oracle Error Status Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>285b08df-3771-45b5-a033-0114205110dc</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_7</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>b87647a6-d747-4b31-a79a-4cf77f0dd173</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_8</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>5cf21b6b-6518-42c4-9f23-309663561668</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>2448fb8c-c1d8-4bc9-9c52-7a86bab6da3e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Update Status</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>cf632aad-7095-41f2-b26d-83c7cdcecdbd</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Update Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>baf2043d-de23-493c-9add-dfdfa9e461d3</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>CallOrchestration_10</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>13064343-6542-4e90-b197-f259fd9d43f5</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>MessageTemplate</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>65e3d7f1-f2ce-4ce5-8cc2-ab9c620def65</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationNumber</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>798a7657-2774-46a7-85a2-86b5b7950e98</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ProcessStep</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>784a9bd4-16fa-4056-9bf6-d82e52569cc3</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Message</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>027a4bce-8081-4d0e-b088-17bb691fa082</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ExceptionContainer</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CallShape</shapeType>      <ShapeID>58ffcf2a-0354-4ae2-bd13-653bd09711e1</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Call Event Create</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>5afddc81-1886-4188-8711-e14a72a2001f</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>ApplicationNumber</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>6d570ed3-54c4-4b7b-a5a9-9d88eaeedeef</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>SalesForceObjectID</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>bdeefa12-3a49-4551-a37c-1d33393751ae</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Message</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>473a135b-9c20-4652-a92c-2d973c6c75a0</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>SalesForceObjectName</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>e3e252ce-bf86-4ee9-aa48-2b7c3d7575e7</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Stage</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>2379189f-3bdb-4d47-b31b-a3e084e59b29</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>Status</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>96645bf8-37ac-4ffb-8c02-bd740d899702</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>AutoDeclineReason</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ParameterShape</shapeType>      <ShapeID>115660af-d710-4b55-afb0-7468b5a7dbf6</ShapeID>      <ParentLink>InvokeStatement_Parameter</ParentLink>                <shapeText>OrchestrationInstanceID</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>aa506009-e40c-4d56-ac39-22267235d518</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>fd733c2a-2f5d-4b2a-957e-e5062b20116f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Log</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>f5d917be-916f-403d-9031-21ff0f17d49f</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>52b7889d-f6f6-45e6-b45a-897927502b71</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Warning</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TerminateShape</shapeType>      <ShapeID>09ccfd40-63ee-4701-835e-6742f5cde859</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Terminate</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'DLAP_Application_Import'</ActionName><IsAtomic>0</IsAtomic><Line>1796</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
</TrkMetadata>

<TrkMetadata>
<Line>1845</Line><Position>22</Position><ShapeID>'c5d67012-32c1-47b4-ae71-9dd29b52957d'</ShapeID>
<Messages>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1870</Line><Position>20</Position><ShapeID>'b87dca6a-52af-40d0-b295-947a9e3bf84f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<ActionName>'??__scope36'</ActionName><IsAtomic>0</IsAtomic><Line>1915</Line><Position>13</Position><ShapeID>'2a53b9e8-a8dc-427e-b0f3-370160ba2ad1'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1920</Line><Position>21</Position><ShapeID>'73202375-1487-4666-91d0-c4b6ef9bab2b'</ShapeID>
<Messages>
	<MsgInfo><name>RestApplicationQueryRequestMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery+Request</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1940</Line><Position>21</Position><ShapeID>'6327fd21-b18f-4fd1-9d07-f567b1e72fc5'</ShapeID>
<Messages>
	<MsgInfo><name>RestApplicationQueryRequestMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery+Request</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1942</Line><Position>21</Position><ShapeID>'2d5d6b1e-8c9c-4722-9778-19f7c6a3fbbc'</ShapeID>
<Messages>
	<MsgInfo><name>RestApplicationQueryResponseMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery+QueryResult</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1944</Line><Position>41</Position><ShapeID>'7d1f98bb-2470-41bf-8088-9b94019fb143'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1959</Line><Position>21</Position><ShapeID>'e9f77356-0101-4e74-9c23-3382ca23ee1f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1963</Line><Position>42</Position><ShapeID>'6a548e54-24b7-4a61-a26b-710ba35dcf55'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>1991</Line><Position>13</Position><ShapeID>'aa1ddfa5-2306-48bb-ac50-da7519676840'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<ActionName>'??__scope37'</ActionName><IsAtomic>0</IsAtomic><Line>1994</Line><Position>17</Position><ShapeID>'1109c81f-3a2b-40a7-a937-c9840aae793e'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<ActionName>'??__scope38'</ActionName><IsAtomic>0</IsAtomic><Line>2000</Line><Position>25</Position><ShapeID>'f4e5d76b-0084-4601-b720-9a29ff4aec92'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2015</Line><Position>37</Position><ShapeID>'c91f9189-4ca4-4189-9dd6-d7b28245e52f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2019</Line><Position>25</Position><ShapeID>'91804920-74e2-4af9-8f1b-b9606c85cfd0'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2045</Line><Position>44</Position><ShapeID>'db21e5c0-c67d-40db-8aca-9dffa6d5ac43'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2048</Line><Position>37</Position><ShapeID>'927c3c8d-5fb6-4a20-9967-cf5005a9fdf7'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2057</Line><Position>84</Position><ShapeID>'653f4ff0-5cb2-4331-ae41-ffdd14593257'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2059</Line><Position>25</Position><ShapeID>'d5f239e9-72c1-473e-84c0-59c021ba9d9d'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2062</Line><Position>41</Position><ShapeID>'f68f9792-39c5-425b-b34a-55a55756a855'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2064</Line><Position>80</Position><ShapeID>'735322d9-b74a-49af-b8cf-a7936767d819'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2067</Line><Position>25</Position><ShapeID>'3a7d3166-1f6a-490a-a75d-0861ee55bfe0'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2070</Line><Position>41</Position><ShapeID>'26aed432-3be6-43e8-a6ad-dd381e6c8f62'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2072</Line><Position>81</Position><ShapeID>'dee70cd9-b3e8-437d-9980-7837ab1af0a5'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2075</Line><Position>25</Position><ShapeID>'5ad6edc1-7f0b-495e-a8c0-ea5bb80a15bc'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2078</Line><Position>41</Position><ShapeID>'f303f26b-8ba5-46f2-84be-1747da0a6dd5'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2080</Line><Position>85</Position><ShapeID>'ee522655-25b3-45dc-ba60-eed2d01c0cb4'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2083</Line><Position>25</Position><ShapeID>'419b7ae7-e003-4d5c-93d7-0ca10c52d933'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2086</Line><Position>41</Position><ShapeID>'c882a370-6713-4842-8973-273067cbc2ee'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2088</Line><Position>81</Position><ShapeID>'7ded9ef9-5d13-4aa8-be67-3c3a82146da2'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2091</Line><Position>25</Position><ShapeID>'788badcb-ede4-4471-a015-9286ce0d602e'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2094</Line><Position>41</Position><ShapeID>'97c81dfc-d814-42bb-a80a-25b35514615d'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2096</Line><Position>83</Position><ShapeID>'12e0ed76-cbf5-4292-9108-67130ba41e36'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2099</Line><Position>25</Position><ShapeID>'94d3b058-c41d-4b4d-9bab-5fa82e709a40'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2102</Line><Position>41</Position><ShapeID>'17c93eac-849a-40f2-9180-3a8a5505eefa'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2104</Line><Position>83</Position><ShapeID>'24aea121-bf41-4b9f-93f6-497cb8e6eeae'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2107</Line><Position>25</Position><ShapeID>'705c3f87-c325-48b0-a527-fec7d683175b'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2110</Line><Position>41</Position><ShapeID>'20c4f78c-bf1c-4a5d-9dfd-c0c0341001da'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2112</Line><Position>93</Position><ShapeID>'9fa5f89f-5817-450f-a15b-2c6047d34371'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2115</Line><Position>25</Position><ShapeID>'f5e249fb-e561-4e1e-b465-29efe4396232'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2118</Line><Position>41</Position><ShapeID>'c977b30f-7474-4e60-b2a2-f42dc0f65d30'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2120</Line><Position>86</Position><ShapeID>'146ea40f-c643-42dc-b9e5-7dac9955941a'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2123</Line><Position>25</Position><ShapeID>'b49e0a74-e161-4b9e-97b3-be6bccdefc17'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2126</Line><Position>41</Position><ShapeID>'e90247e1-9115-4249-9dff-de55e1c25dd1'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2128</Line><Position>91</Position><ShapeID>'ae9a1cc7-bcb5-46f3-a422-6b3b6f12a55b'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2131</Line><Position>25</Position><ShapeID>'3f84502f-4c59-4053-b3b4-cd98bceb5aa0'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2134</Line><Position>41</Position><ShapeID>'acd3c2d4-57f9-4ba9-8a17-0a1ff53d953b'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2136</Line><Position>85</Position><ShapeID>'bac05c20-3400-4a91-a4a3-8a2c4a21da35'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2139</Line><Position>25</Position><ShapeID>'26614705-7e85-46b5-a0f4-6cab2f78e7d4'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2142</Line><Position>41</Position><ShapeID>'4de747d3-ecc4-4b2a-8939-da7211805733'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2144</Line><Position>92</Position><ShapeID>'6fec3daf-0cd1-4d65-ac27-fdfef564b830'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2147</Line><Position>25</Position><ShapeID>'7718e7e6-e3f9-481f-965f-2508523fd177'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2150</Line><Position>41</Position><ShapeID>'c28d00db-c7b6-4a7c-b352-9bb747a5261c'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2152</Line><Position>100</Position><ShapeID>'038f4782-16cb-4db5-8d48-8853d4c9ade8'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2155</Line><Position>25</Position><ShapeID>'778e7ada-3599-4edd-a11d-7908de903d4a'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2158</Line><Position>41</Position><ShapeID>'8f2cebb5-5c5e-4ed5-8b4a-408286ff7d95'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2160</Line><Position>84</Position><ShapeID>'ab59a960-bfc7-4988-81a0-57cb0b1efe83'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonicalMsg</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2163</Line><Position>25</Position><ShapeID>'371f6bcd-2aa1-4600-a9a6-17d456854c6a'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2166</Line><Position>29</Position><ShapeID>'dc756d9b-997c-4085-ab7e-9a43eefad675'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusRequestMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+Update</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2175</Line><Position>29</Position><ShapeID>'bdb7053f-18ac-4cac-97bf-a774a77415a5'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusRequestMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+Update</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2182</Line><Position>25</Position><ShapeID>'ad9fd4ec-633b-4e78-bae6-738400458e69'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusRequestMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+Update</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2184</Line><Position>25</Position><ShapeID>'03a434db-c739-4162-981f-2bdc8db40e52'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusResponseMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+UpdateResponse</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2186</Line><Position>77</Position><ShapeID>'7fb4d9f3-5d2f-488e-a947-17dd2793239e'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2191</Line><Position>25</Position><ShapeID>'b470b70b-3699-44c8-a635-e59c5cbac3f5'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2194</Line><Position>36</Position><ShapeID>'8644bd84-3b79-413e-9645-b0988028d9bb'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2218</Line><Position>29</Position><ShapeID>'d7396b68-8fb9-41ef-87fc-6816c43a1e03'</ShapeID>
<Messages>
	<MsgInfo><name>RestEventRequestQueryRequestMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery+Request</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2237</Line><Position>29</Position><ShapeID>'df3ffe97-ecf0-4252-aa47-9811e928499e'</ShapeID>
<Messages>
	<MsgInfo><name>RestEventRequestQueryRequestMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery+Request</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2239</Line><Position>29</Position><ShapeID>'3282e9b0-7429-49d1-b0dc-9d81ceed1c6b'</ShapeID>
<Messages>
	<MsgInfo><name>RestEventRequestQueryResponseMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery+QueryResult</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2241</Line><Position>50</Position><ShapeID>'85b76039-5c37-40b6-ac0b-79dc1cbdfbfb'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2253</Line><Position>29</Position><ShapeID>'2394cfae-841a-4b71-93d7-267d42d51feb'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2256</Line><Position>33</Position><ShapeID>'9572360b-8f62-4368-90c6-a11072ca3986'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusRequestMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+Update</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2262</Line><Position>33</Position><ShapeID>'2448fb8c-c1d8-4bc9-9c52-7a86bab6da3e'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusRequestMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+Update</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2264</Line><Position>33</Position><ShapeID>'cf632aad-7095-41f2-b26d-83c7cdcecdbd'</ShapeID>
<Messages>
	<MsgInfo><name>OracleUpdateSubmittedApplicationsStatusResponseMsg</name><part>MessagePart</part><schema>Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2+UpdateResponse</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2266</Line><Position>78</Position><ShapeID>'baf2043d-de23-493c-9add-dfdfa9e461d3'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2268</Line><Position>85</Position><ShapeID>'58ffcf2a-0354-4ae2-bd13-653bd09711e1'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2273</Line><Position>71</Position><ShapeID>'fd733c2a-2f5d-4b2a-957e-e5062b20116f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2282</Line><Position>55</Position><ShapeID>'52b7889d-f6f6-45e6-b45a-897927502b71'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>2284</Line><Position>17</Position><ShapeID>'09ccfd40-63ee-4701-835e-6742f5cde859'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='0c6f63cc-835d-4412-a09e-1da32200e246' LowerBound='1.1' HigherBound='572.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='MultipartMessageType' OID='055650f7-6b57-474e-aab7-06ef00216be0' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='ApplicationMsgType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='24febeda-aac9-4e6b-a37f-774f9ffb4088' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Application_Import_Definition.HomeDisasterLoanApplication' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Application' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='4de75d5d-bd99-43a6-bab1-63042c51db5d' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='OracleUpdateSubmittedApplicationsStatusRequestType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='fbf82d57-ce3e-46ac-b9f5-7d53bc1b4523' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.Update' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='093a5c44-3da0-4e13-a1c6-3ec473e5f655' ParentLink='Module_MessageType' LowerBound='12.1' HigherBound='16.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='OracleUpdateSubmittedApplicationsStatusResponseType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='3501ecb4-b1e0-4e7b-b8e3-9385183dbb40' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='14.1' HigherBound='15.1'>
                <om:Property Name='ClassName' Value='Oracle_Application_Import_Definition.DLAPOracle_UPDATE_SUBMITTED_APPLICATIONS_STATUS_DCMS2.UpdateResponse' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='46a420b5-799a-4f96-824b-517b7481520f' ParentLink='Module_MessageType' LowerBound='16.1' HigherBound='20.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestApplicationQueryRequestType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='25557960-26f6-43bc-902a-da1940964ab1' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='18.1' HigherBound='19.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.Request' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='135de06b-87af-4142-b4f6-02070f4b7323' ParentLink='Module_MessageType' LowerBound='20.1' HigherBound='24.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestApplicationQueryResponseType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='6a411d82-245a-47b1-8e0f-f6eb87afb1a7' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='22.1' HigherBound='23.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Application__c.RestApplication__c.RestApplicationQuery.QueryResult' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='d03be78a-1bcd-45a5-9021-30a24ed61e0b' ParentLink='Module_MessageType' LowerBound='24.1' HigherBound='28.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestEventRequestQueryRequestType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='8b380a1b-6347-40ee-bdf5-4b337708a5db' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.Request' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='336a95bd-50cc-467e-9b36-fd5aa759dc0b' ParentLink='Module_MessageType' LowerBound='28.1' HigherBound='32.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestEventRequestQueryResponseType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='ee29e2ba-77ec-4446-96e3-974f337f68ab' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='30.1' HigherBound='31.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequestQuery.QueryResult' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='ServiceDeclaration' OID='84f6e09d-88d0-4a10-84b5-befeac189c73' ParentLink='Module_ServiceDeclaration' LowerBound='78.1' HigherBound='571.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='DLAP_Application_Import' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='edac00a8-823a-440a-af0e-b2a8fc6b0072' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='98.1' HigherBound='99.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Guid' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OrchestrationInstanceID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='7819c6fd-4487-4c74-8e50-fd1eb239c06e' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='99.1' HigherBound='100.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Status' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='61ac6973-0e15-495b-a9f4-a1391e3439ab' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='100.1' HigherBound='101.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Stage' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='6494348c-91aa-4cc3-a647-03ef90011e55' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='101.1' HigherBound='102.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicationNumber' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='5240ac2f-4f88-473f-b111-12980ff580c0' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='102.1' HigherBound='103.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesForceObjectName' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='150aac5b-da76-4222-97e5-c8cc67ae849d' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='103.1' HigherBound='104.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesForceObjectID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='384923e5-5729-43be-9e23-3058ae801f0f' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='104.1' HigherBound='105.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Message' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='dcbb277c-6922-4f08-abd0-a06cd431dd1b' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='105.1' HigherBound='106.1'>
                <om:Property Name='InitialValue' Value='@&quot;DLAP Application Import:\nThis application {0} {1} during the {2} Process Step.\n&quot; ' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessageTemplate' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='8ab0daa6-05fc-434d-b4a4-9fceece8b0d1' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='106.1' HigherBound='107.1'>
                <om:Property Name='InitialValue' Value='&quot;DLAP Application Import Initialization&quot;' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ProcessStep' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='c53b22d2-0111-48b2-97d1-a05115dc5788' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='107.1' HigherBound='108.1'>
                <om:Property Name='UseDefaultConstructor' Value='True' />
                <om:Property Name='Type' Value='System.Exception' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ExceptionContainer' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='e4efa14d-388f-45a6-9efe-6183e8e49d1b' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='108.1' HigherBound='109.1'>
                <om:Property Name='UseDefaultConstructor' Value='True' />
                <om:Property Name='Type' Value='DLAPApplicationImportRecordTypeValues.RecordTypeValues' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='GetRecordTypeValues' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='0c1fb140-d222-4d91-bdca-88ce54239f2f' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='109.1' HigherBound='110.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='InsuranceCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='aa9adabc-f6c1-4db3-a1ec-7edb39af35be' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='110.1' HigherBound='111.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MortgagesCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='da8179dd-dc4a-4007-97ab-1a40a51b54bd' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='111.1' HigherBound='112.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AutoDeclineReason' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='9f5c4605-a259-4770-a968-da645cf6aec1' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='112.1' HigherBound='113.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OtherAssistanceCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='eaf4f2f1-27d1-4877-a45f-0af70f083440' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='113.1' HigherBound='114.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessageTemp' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='8f112096-2573-4f2c-9b93-916f29716ca7' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='114.1' HigherBound='115.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='APPLICATION_INFO_SOQL_QUERY' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='7bd7b825-951b-449d-b16f-8b92c82d54e1' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='115.1' HigherBound='116.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicationNumberList' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='06d22796-c143-48f3-8daf-916f1309003b' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='116.1' HigherBound='117.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestApplicationName' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='4618d631-904b-41d4-acb7-dd6914ecc581' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='117.1' HigherBound='118.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestApplicationSFID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='ed10fab8-846a-4a2f-8ddc-f938c22577ab' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='118.1' HigherBound='119.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TotalSize' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='3a199def-5e3f-4f31-9f97-0f54225877d7' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='119.1' HigherBound='120.1'>
                <om:Property Name='InitialValue' Value='true' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Boolean' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='vApplicationFlag' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='503867cb-d407-4665-a538-6791823c56c0' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='120.1' HigherBound='121.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='EVENTREQUEST_INFO_SOQL_QUERY' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='e79baa0a-40cd-4dfb-98f4-7b2687ba3cd9' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='121.1' HigherBound='122.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestName' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='da8c5e12-167c-43dd-82eb-f329f7ecbb9a' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='122.1' HigherBound='123.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestSFID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='835cb4b6-b211-404e-957b-14f501f8caa5' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='123.1' HigherBound='124.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestTotalSize' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='5fe0ce2e-dccb-4dce-9116-5cbd8def6959' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='124.1' HigherBound='125.1'>
                <om:Property Name='InitialValue' Value='true' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Boolean' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='vRestEventRequestFlag' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='0b21f567-6e06-483e-83aa-776efcc39382' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='89.1' HigherBound='90.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.ApplicationMsgType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Application' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='a4ec457d-3437-487a-81b5-4aede68adf13' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='90.1' HigherBound='91.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='93e08c75-99f4-499a-bde5-f73f5e20fa46' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='91.1' HigherBound='92.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DocumentUploadTriggerMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='0c53fa7f-afa1-476b-9307-6b919e5de328' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='92.1' HigherBound='93.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusRequestType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='746558c4-4075-4e86-9d0b-2351ca723c85' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='93.1' HigherBound='94.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusResponseType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OracleUpdateSubmittedApplicationsStatusResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='c78edaf3-8f3f-4026-88ce-7230ef325357' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='94.1' HigherBound='95.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestApplicationQueryRequestType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestApplicationQueryRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='418344f0-9adb-4455-b890-a3c6f589cf11' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='95.1' HigherBound='96.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestApplicationQueryResponseType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestApplicationQueryResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='63d1cdce-8f99-46a5-a6a3-77be90849276' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='96.1' HigherBound='97.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestEventRequestQueryRequestType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestQueryRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='3e7a6ae7-6f58-43d9-a141-cb83a3fc4efa' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='97.1' HigherBound='98.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestEventRequestQueryResponseType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestQueryResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='6c407ecf-d230-45dc-a778-ae73082d9aea' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='Receive' OID='c5d67012-32c1-47b4-ae71-9dd29b52957d' ParentLink='ServiceBody_Statement' LowerBound='127.1' HigherBound='152.1'>
                    <om:Property Name='Activate' Value='True' />
                    <om:Property Name='PortName' Value='DLAPApplicationImport' />
                    <om:Property Name='MessageName' Value='Application' />
                    <om:Property Name='OperationName' Value='Operation' />
                    <om:Property Name='OperationMessageName' Value='Request' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Receive Application' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='94d27917-0551-447a-af2e-637722567319' ParentLink='ServiceBody_Statement' LowerBound='152.1' HigherBound='569.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='DLAP ELA Application Processing' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='VariableAssignment' OID='b87dca6a-52af-40d0-b295-947a9e3bf84f' ParentLink='ComplexStatement_Statement' LowerBound='152.1' HigherBound='197.1'>
                        <om:Property Name='Expression' Value='Status = &quot;Success&quot;;&#xD;&#xA;SalesForceObjectName = &quot;Application&quot;;&#xD;&#xA;if (! System.String.IsNullOrEmpty(Application.Application.APP_ELA_REFERENCE_NBR))&#xD;&#xA;{&#xD;&#xA;     ApplicationNumber  = Application.Application.APP_ELA_REFERENCE_NBR;&#xD;&#xA;} &#xD;&#xA;&#xD;&#xA;if ((!System.String.IsNullOrEmpty(Application.Application.APP_SUMMARY_DECLINE_CODE))&amp;&amp;(Application.Application.APP_SUMMARY_DECLINE_CODE !=&quot;PASS&quot;))&#xD;&#xA;{&#xD;&#xA;    Stage  = &quot;Received Application Summary Decline&quot;;&#xD;&#xA;    Message = Application.Application.APP_SUMMARY_DECLINE_CODE;&#xD;&#xA;    AutoDeclineReason = Application.Application.APP_SUMMARY_DECLINE_CODE;&#xD;&#xA;} &#xD;&#xA;else&#xD;&#xA;{Stage = &quot;Received Application&quot;;&#xD;&#xA;Message = &quot;DLAP Application Import, Application has been successfully submitted to SalesForce&quot;;}&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;OrchestrationInstanceID = Microsoft.XLANGs.Core.Service.RootService.InstanceId; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//BRE Rules Initialization&#xD;&#xA;&#xD;&#xA;GetRecordTypeValues = new DLAPApplicationImportRecordTypeValues.RecordTypeValues();&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import Successfully Poll the Application - &quot;+ApplicationNumber,&quot;   &quot;+ApplicationNumber);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Set Variables' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Scope' OID='2a53b9e8-a8dc-427e-b0f3-370160ba2ad1' ParentLink='ComplexStatement_Statement' LowerBound='197.1' HigherBound='273.1'>
                        <om:Property Name='InitializedTransactionType' Value='True' />
                        <om:Property Name='IsSynchronized' Value='False' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Scope' />
                        <om:Property Name='Signal' Value='False' />
                        <om:Element Type='Construct' OID='73202375-1487-4666-91d0-c4b6ef9bab2b' ParentLink='ComplexStatement_Statement' LowerBound='202.1' HigherBound='222.1'>
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Construct Application Info Request Msg' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessageRef' OID='273ff97d-ae60-422b-bc75-77458e3fdd59' ParentLink='Construct_MessageRef' LowerBound='203.31' HigherBound='203.61'>
                                <om:Property Name='Ref' Value='RestApplicationQueryRequestMsg' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='Transform' OID='8877e06f-1d26-4610-8944-04945fafd175' ParentLink='ComplexStatement_Statement' LowerBound='205.1' HigherBound='207.1'>
                                <om:Property Name='ClassName' Value='Application_Import_Logic.MakeRestApplicationInfoRequest' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Make Rest Application Info Request' />
                                <om:Property Name='Signal' Value='False' />
                                <om:Element Type='MessagePartRef' OID='59209685-b8d1-4548-aa32-e403aeae679e' ParentLink='Transform_OutputMessagePartRef' LowerBound='206.36' HigherBound='206.78'>
                                    <om:Property Name='MessageRef' Value='RestApplicationQueryRequestMsg' />
                                    <om:Property Name='PartRef' Value='MessagePart' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='MessagePartReference_10' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                                <om:Element Type='MessagePartRef' OID='bcd36c13-c2da-4c33-8ae2-86cb93a4e3ec' ParentLink='Transform_InputMessagePartRef' LowerBound='206.139' HigherBound='206.162'>
                                    <om:Property Name='MessageRef' Value='Application' />
                                    <om:Property Name='PartRef' Value='Application' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='MessagePartReference_9' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                            <om:Element Type='MessageAssignment' OID='4ef82a3e-de78-454d-ae1c-b4ba3e7ca32c' ParentLink='ComplexStatement_Statement' LowerBound='207.1' HigherBound='221.1'>
                                <om:Property Name='Expression' Value='//Extract DLAPUserID and Application Number from the DocumentList Request&#xD;&#xA;&#xD;&#xA;ApplicationNumberList = Application.Application.APP_ELA_REFERENCE_NBR;&#xD;&#xA;&#xD;&#xA;//SOQL Query For Rest&#xD;&#xA;&#xD;&#xA;APPLICATION_INFO_SOQL_QUERY = @&quot;Select Id, Name FROM Application__c WHERE Name IN &quot;+&quot;(&apos;&quot;+ApplicationNumberList+&quot;&apos;) AND Name != NULL&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;RestApplicationQueryRequestMsg(Salesforce_Application_Import_Definition.Application__c.RestApplication__c.SOQL_APPLICATION_INFO_QUERY) = APPLICATION_INFO_SOQL_QUERY; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;' />
                                <om:Property Name='ReportToAnalyst' Value='False' />
                                <om:Property Name='Name' Value='SOQL Query' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='Send' OID='6327fd21-b18f-4fd1-9d07-f567b1e72fc5' ParentLink='ComplexStatement_Statement' LowerBound='222.1' HigherBound='224.1'>
                            <om:Property Name='PortName' Value='RestApplicationQueryPort' />
                            <om:Property Name='MessageName' Value='RestApplicationQueryRequestMsg' />
                            <om:Property Name='OperationName' Value='Operation' />
                            <om:Property Name='OperationMessageName' Value='Request' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Send Rest Request' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='Receive' OID='2d5d6b1e-8c9c-4722-9778-19f7c6a3fbbc' ParentLink='ComplexStatement_Statement' LowerBound='224.1' HigherBound='226.1'>
                            <om:Property Name='Activate' Value='False' />
                            <om:Property Name='PortName' Value='RestApplicationQueryPort' />
                            <om:Property Name='MessageName' Value='RestApplicationQueryResponseMsg' />
                            <om:Property Name='OperationName' Value='Operation' />
                            <om:Property Name='OperationMessageName' Value='Response' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Receive Rest Response' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='VariableAssignment' OID='7d1f98bb-2470-41bf-8088-9b94019fb143' ParentLink='ComplexStatement_Statement' LowerBound='226.1' HigherBound='238.1'>
                            <om:Property Name='Expression' Value='RestApplicationName = xpath(RestApplicationQueryResponseMsg.MessagePart,&quot;string(/*[local-name()=&apos;QueryResult&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;]/*[local-name()=&apos;records&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;]/*[local-name()=&apos;Name&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;RestApplicationSFID = xpath(RestApplicationQueryResponseMsg.MessagePart,&quot;string(/*[local-name()=&apos;QueryResult&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;]/*[local-name()=&apos;records&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;]/*[local-name()=&apos;Id&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;TotalSize = xpath(RestApplicationQueryResponseMsg.MessagePart,&quot;string(/*[local-name()=&apos;QueryResult&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;]/*[local-name()=&apos;totalSize&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/Application&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(((!System.String.IsNullOrWhiteSpace(RestApplicationName))&amp;&amp;(!System.String.IsNullOrWhiteSpace(RestApplicationSFID)))&amp;&amp;(System.Convert.ToInt32(TotalSize) != 0))&#xD;&#xA;{ vApplicationFlag = false;}&#xD;&#xA;&#xD;&#xA;else{vApplicationFlag = true;}' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Validation Values' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='Catch' OID='e9f77356-0101-4e74-9c23-3382ca23ee1f' ParentLink='Scope_Catch' LowerBound='241.1' HigherBound='271.1'>
                            <om:Property Name='ExceptionName' Value='DEx' />
                            <om:Property Name='ExceptionType' Value='System.Exception' />
                            <om:Property Name='IsFaultMessage' Value='False' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='System Exception' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='VariableAssignment' OID='6a548e54-24b7-4a61-a26b-710ba35dcf55' ParentLink='Catch_Statement' LowerBound='244.1' HigherBound='270.1'>
                                <om:Property Name='Expression' Value='&#xD;&#xA;vApplicationFlag = true;&#xD;&#xA;&#xD;&#xA;ExceptionContainer = DEx;&#xD;&#xA;&#xD;&#xA;if(DEx.InnerException != null)&#xD;&#xA;{&#xD;&#xA;MessageTemp = ProcessStep+ &quot; - &quot;+ DEx.InnerException.ToString();&#xD;&#xA;&#xD;&#xA;Message = MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000, MessageTemp.Length))) +&quot;Total Error String Length:&quot;+MessageTemp.Length.ToString();&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import - BizTalk Application Duplicate Validation Exception&quot;, &quot;Application Processing will continue... &quot;+DEx.Message,System.Diagnostics.EventLogEntryType.Error);&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;MessageTemp = ProcessStep+ &quot; - &quot;+ DEx.Message.ToString();&#xD;&#xA;&#xD;&#xA;Message = MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000, MessageTemp.Length))) +&quot;Total Error String Length:&quot;+MessageTemp.Length.ToString();&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import - BizTalk Application Duplicate Validation Exception&quot;, &quot;Application Processing will continue... &quot;+DEx.Message,System.Diagnostics.EventLogEntryType.Error);&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Assign Variables' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Decision' OID='aa1ddfa5-2306-48bb-ac50-da7519676840' ParentLink='ComplexStatement_Statement' LowerBound='273.1' HigherBound='569.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Valid Application' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='deeecb82-0be2-4abd-a055-3d2130b1e9fe' ParentLink='ReallyComplexStatement_Branch' LowerBound='274.13' HigherBound='562.1'>
                            <om:Property Name='Expression' Value='vApplicationFlag == true&#xD;&#xA;' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Valid' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Scope' OID='1109c81f-3a2b-40a7-a937-c9840aae793e' ParentLink='ComplexStatement_Statement' LowerBound='276.1' HigherBound='561.1'>
                                <om:Property Name='InitializedTransactionType' Value='True' />
                                <om:Property Name='IsSynchronized' Value='False' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Handle Exceptions' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='CallRules' OID='f4e5d76b-0084-4601-b720-9a29ff4aec92' ParentLink='ComplexStatement_Statement' LowerBound='281.1' HigherBound='297.1'>
                                    <om:Property Name='PolicyName' Value='Set DLAP RecordType Values' />
                                    <om:Property Name='PolicyVersion' Value='-1' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Call Set DLAP Record Type Values Rules' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='RulesParameterRef' OID='1196c713-a45c-4073-b12f-85183e3bbbe2' ParentLink='CallRules_RulesParameterRef'>
                                        <om:Property Name='Reference' Value='GetRecordTypeValues' />
                                        <om:Property Name='Alias' Value='DLAPApplicationImportRecordTypeValues.RecordTypeValues' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='RulesParameterRef_1' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='Task' OID='4c64accf-92b8-47cc-9de8-a19a426c1933' ParentLink='ComplexStatement_Statement' LowerBound='297.1' HigherBound='470.1'>
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Application Processing' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='c91f9189-4ca4-4189-9dd6-d7b28245e52f' ParentLink='ComplexStatement_Statement' LowerBound='297.1' HigherBound='301.1'>
                                        <om:Property Name='Expression' Value='ProcessStep = &quot;Map to Canonical&quot;;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Set process step' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='Construct' OID='91804920-74e2-4af9-8f1b-b9606c85cfd0' ParentLink='ComplexStatement_Statement' LowerBound='301.1' HigherBound='327.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Construct Application Canonical' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='Transform' OID='5dbbceb3-fbe7-4868-9596-045f24fbabfd' ParentLink='ComplexStatement_Statement' LowerBound='304.1' HigherBound='306.1'>
                                            <om:Property Name='ClassName' Value='Application_Import_Logic.MakeCanonicalApplication' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Map to Canonical' />
                                            <om:Property Name='Signal' Value='True' />
                                            <om:Element Type='MessagePartRef' OID='821ceef7-bce7-4f10-b171-30cd362c2a61' ParentLink='Transform_InputMessagePartRef' LowerBound='305.118' HigherBound='305.141'>
                                                <om:Property Name='MessageRef' Value='Application' />
                                                <om:Property Name='PartRef' Value='Application' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='MessagePartRef' OID='77d4f39c-d5b3-46fa-985e-2d168284f54c' ParentLink='Transform_OutputMessagePartRef' LowerBound='305.40' HigherBound='305.63'>
                                                <om:Property Name='MessageRef' Value='ApplicationCanonicalMsg' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='MessageAssignment' OID='a894bf10-3034-4d4e-a84a-7363105a069a' ParentLink='ComplexStatement_Statement' LowerBound='306.1' HigherBound='326.1'>
                                            <om:Property Name='Expression' Value='ApplicationCanonicalMsg.OrchestrationID = Microsoft.XLANGs.Core.Service.RootService.InstanceId.ToString(); &#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_Business_Loan_Application = GetRecordTypeValues.Business_Loan_Application;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_EIDL_Application = GetRecordTypeValues.EIDL_Application;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_Home_Loan_Application = GetRecordTypeValues.Home_Loan_Application;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_New_Read_Only_Application = GetRecordTypeValues.New_Read_Only_Application;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_Default_Applicant = GetRecordTypeValues.Default_Applicant;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_New_Read_Only_Applicant = GetRecordTypeValues.New_Read_Only_Applicant;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_Affiliate_Applicant = GetRecordTypeValues.Affiliate_Applicant;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_Business_Entity_Applicant = GetRecordTypeValues.Business_Entity_Applicant;&#xD;&#xA;&#xD;&#xA;ApplicationCanonicalMsg.Record_SF_Business_Owner_Applicant = GetRecordTypeValues.Business_Owner_Applicant;&#xD;&#xA;' />
                                            <om:Property Name='ReportToAnalyst' Value='False' />
                                            <om:Property Name='Name' Value='Assign Values' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='MessageRef' OID='25a30aed-6096-44e1-9bd5-885369eb2ba8' ParentLink='Construct_MessageRef' LowerBound='302.35' HigherBound='302.58'>
                                            <om:Property Name='Ref' Value='ApplicationCanonicalMsg' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='VariableAssignment' OID='db21e5c0-c67d-40db-8aca-9dffa6d5ac43' ParentLink='ComplexStatement_Statement' LowerBound='327.1' HigherBound='330.1'>
                                        <om:Property Name='Expression' Value='SalesForceObjectID = ApplicationCanonicalMsg.SalesForceApplication__cID;&#xD;&#xA;&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Assign Status Variables' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='VariableAssignment' OID='927c3c8d-5fb6-4a20-9967-cf5005a9fdf7' ParentLink='ComplexStatement_Statement' LowerBound='330.1' HigherBound='339.1'>
                                        <om:Property Name='Expression' Value='ProcessStep = &quot;Calling Application create&quot;;&#xD;&#xA;&#xD;&#xA;InsuranceCount = xpath(ApplicationCanonicalMsg, &quot;count(/*[local-name()=&apos;Application&apos; and namespace-uri()=&apos;http://SBA.ODA.Gov/CanonicalApplication&apos;]/*[local-name()=&apos;DmgPropertyColl&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;Dmg_Properties&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;DpoInsuranceColl&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;Dpo_Insurances&apos; and namespace-uri()=&apos;&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;MortgagesCount = xpath(ApplicationCanonicalMsg, &quot;count(/*[local-name()=&apos;Application&apos; and namespace-uri()=&apos;http://SBA.ODA.Gov/CanonicalApplication&apos;]/*[local-name()=&apos;Debts&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;MortgageColl&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;ARE_Mortgages&apos; and namespace-uri()=&apos;&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;OtherAssistanceCount = xpath(ApplicationCanonicalMsg, &quot;count(/*[local-name()=&apos;Application&apos; and namespace-uri()=&apos;http://SBA.ODA.Gov/CanonicalApplication&apos;]/*[local-name()=&apos;DpoDupBenefitColl&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;Dpo_DupBenefits&apos; and namespace-uri()=&apos;&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Set process step' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='Call' OID='653f4ff0-5cb2-4331-ae41-ffdd14593257' ParentLink='ComplexStatement_Statement' LowerBound='339.1' HigherBound='341.1'>
                                        <om:Property Name='Identifier' Value='CallOrchestration_1' />
                                        <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceApplication__c' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Call Application' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='Parameter' OID='c8b6df57-8127-4cb7-82fc-98cba08fc528' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='Ref' />
                                            <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                            <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='8d172089-2427-49b5-9576-d52275e6fb8a' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='Ref' />
                                            <om:Property Name='Name' Value='Status' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='c8c07c35-01e4-4c0e-a89a-51821d75867d' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='Ref' />
                                            <om:Property Name='Name' Value='Message' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='d5f239e9-72c1-473e-84c0-59c021ba9d9d' ParentLink='ComplexStatement_Statement' LowerBound='341.1' HigherBound='349.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='40ab2ff1-fc9e-4fe0-a5a8-687e62d24e1f' ParentLink='ReallyComplexStatement_Branch' LowerBound='342.25' HigherBound='349.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='f68f9792-39c5-425b-b34a-55a55756a855' ParentLink='ComplexStatement_Statement' LowerBound='344.1' HigherBound='346.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Addtional Contact&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='735322d9-b74a-49af-b8cf-a7936767d819' ParentLink='ComplexStatement_Statement' LowerBound='346.1' HigherBound='348.1'>
                                                <om:Property Name='Identifier' Value='Call_Addtional_Contact' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallAddtionalContact' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Addtional Contact' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='1a89b0a5-13a9-4cc8-897b-6870d839cd36' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='c076cf7d-c91c-47c3-9f8e-9c211f264dd8' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='3a7d3166-1f6a-490a-a75d-0861ee55bfe0' ParentLink='ComplexStatement_Statement' LowerBound='349.1' HigherBound='357.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='13372ea7-65df-4183-ac40-0878ae490434' ParentLink='ReallyComplexStatement_Branch' LowerBound='350.25' HigherBound='357.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='26aed432-3be6-43e8-a6ad-dd381e6c8f62' ParentLink='ComplexStatement_Statement' LowerBound='352.1' HigherBound='354.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Account create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='dee70cd9-b3e8-437d-9980-7837ab1af0a5' ParentLink='ComplexStatement_Statement' LowerBound='354.1' HigherBound='356.1'>
                                                <om:Property Name='Identifier' Value='CallAccount' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesforceAccount' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Account' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='f3b48dfa-5ba3-430d-ab4d-b17efb367c06' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='1e07c549-fffc-4d8e-8f97-89a5781e49cc' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='5ad6edc1-7f0b-495e-a8c0-ea5bb80a15bc' ParentLink='ComplexStatement_Statement' LowerBound='357.1' HigherBound='365.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='e552d452-0753-481f-961b-805e5c934952' ParentLink='ReallyComplexStatement_Branch' LowerBound='358.25' HigherBound='365.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='f303f26b-8ba5-46f2-84be-1747da0a6dd5' ParentLink='ComplexStatement_Statement' LowerBound='360.1' HigherBound='362.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Property create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='ee522655-25b3-45dc-ba60-eed2d01c0cb4' ParentLink='ComplexStatement_Statement' LowerBound='362.1' HigherBound='364.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_6' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceProperty__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Property' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Parameter' OID='7bff7c55-8b2b-46c3-8931-a9682be648e3' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='1bac2aa9-88e0-420e-a7ee-8c8e106d7884' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='419b7ae7-e003-4d5c-93d7-0ca10c52d933' ParentLink='ComplexStatement_Statement' LowerBound='365.1' HigherBound='373.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='702a5ddb-2b27-405c-aa34-38fc2a2cc703' ParentLink='ReallyComplexStatement_Branch' LowerBound='366.25' HigherBound='373.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='c882a370-6713-4842-8973-273067cbc2ee' ParentLink='ComplexStatement_Statement' LowerBound='368.1' HigherBound='370.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Contact create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='7ded9ef9-5d13-4aa8-be67-3c3a82146da2' ParentLink='ComplexStatement_Statement' LowerBound='370.1' HigherBound='372.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_2' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceContact' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Contact' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='d0634b7b-faad-4275-8e3a-3874bcf5fb7e' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='c6fecfa9-838a-4aa6-9a3d-cca0e8de1f8e' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='788badcb-ede4-4471-a015-9286ce0d602e' ParentLink='ComplexStatement_Statement' LowerBound='373.1' HigherBound='381.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='3a004e08-8808-4ad0-b65c-8033a8f97a36' ParentLink='ReallyComplexStatement_Branch' LowerBound='374.25' HigherBound='381.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='97c81dfc-d814-42bb-a80a-25b35514615d' ParentLink='ComplexStatement_Statement' LowerBound='376.1' HigherBound='378.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Applicant create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='12e0ed76-cbf5-4292-9108-67130ba41e36' ParentLink='ComplexStatement_Statement' LowerBound='378.1' HigherBound='380.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_3' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceApplicant' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Applicant' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Parameter' OID='b7c1bd35-7a41-4604-bb58-0a1a8ddeedf4' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='95c2c07a-61e4-4b71-bf8d-c1ec39a8d902' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='94d3b058-c41d-4b4d-9bab-5fa82e709a40' ParentLink='ComplexStatement_Statement' LowerBound='381.1' HigherBound='389.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='d1a3d9e6-122b-48fb-90e1-9cc06391eac2' ParentLink='ReallyComplexStatement_Branch' LowerBound='382.25' HigherBound='389.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot; &amp;&amp; InsuranceCount &gt; 0' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='True' />
                                            <om:Element Type='VariableAssignment' OID='17c93eac-849a-40f2-9180-3a8a5505eefa' ParentLink='ComplexStatement_Statement' LowerBound='384.1' HigherBound='386.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Insurance create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='24aea121-bf41-4b9f-93f6-497cb8e6eeae' ParentLink='ComplexStatement_Statement' LowerBound='386.1' HigherBound='388.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_4' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceInsurance' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Insurance' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Parameter' OID='2e681c49-ecb6-4144-b6b9-2d92b496f7a6' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='fb8c5361-76d7-43ed-b437-33c6d8c0c27b' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='705c3f87-c325-48b0-a527-fec7d683175b' ParentLink='ComplexStatement_Statement' LowerBound='389.1' HigherBound='397.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='7038ab12-552a-44ba-b916-8daf3ab5d63d' ParentLink='ReallyComplexStatement_Branch' LowerBound='390.25' HigherBound='397.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot; &amp;&amp; OtherAssistanceCount &gt; 0' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='20c4f78c-bf1c-4a5d-9dfd-c0c0341001da' ParentLink='ComplexStatement_Statement' LowerBound='392.1' HigherBound='394.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Other Assistance create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='9fa5f89f-5817-450f-a15b-2c6047d34371' ParentLink='ComplexStatement_Statement' LowerBound='394.1' HigherBound='396.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_11' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesforceOther_Assistance__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Other Assistance' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='fb228ea0-e21b-4410-9271-c50d92707148' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='5e134968-6c9a-4954-ad38-ae18854cebcf' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='f5e249fb-e561-4e1e-b465-29efe4396232' ParentLink='ComplexStatement_Statement' LowerBound='397.1' HigherBound='405.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='699763bb-39dd-497e-8810-eb140681118c' ParentLink='ReallyComplexStatement_Branch' LowerBound='398.25' HigherBound='405.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='c977b30f-7474-4e60-b2a2-f42dc0f65d30' ParentLink='ComplexStatement_Statement' LowerBound='400.1' HigherBound='402.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Insurance create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='146ea40f-c643-42dc-b9e5-7dac9955941a' ParentLink='ComplexStatement_Statement' LowerBound='402.1' HigherBound='404.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_8' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceAssetIncomes' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call AssetIncomes' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='d2fe93da-3ba1-41bc-8053-fb9d12decd2c' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='87fde7fd-21bf-4ec0-af03-2522011c9538' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='b49e0a74-e161-4b9e-97b3-be6bccdefc17' ParentLink='ComplexStatement_Statement' LowerBound='405.1' HigherBound='413.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='af91a610-251c-4aa7-889d-b1ec1422ff45' ParentLink='ReallyComplexStatement_Branch' LowerBound='406.25' HigherBound='413.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='e90247e1-9115-4249-9dff-de55e1c25dd1' ParentLink='ComplexStatement_Statement' LowerBound='408.1' HigherBound='410.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Debts and Expenses create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='ae9a1cc7-bcb5-46f3-a422-6b3b6f12a55b' ParentLink='ComplexStatement_Statement' LowerBound='410.1' HigherBound='412.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration10' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceDebts_Expenses__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call DebtsExpenses__c' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Parameter' OID='ae03f242-d940-4975-903b-f5d592222d6c' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='0b914bc4-a263-4481-91e1-f9b966af917b' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='3f84502f-4c59-4053-b3b4-cd98bceb5aa0' ParentLink='ComplexStatement_Statement' LowerBound='413.1' HigherBound='421.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='2271de41-4572-4d69-8e33-c647e65b8ccf' ParentLink='ReallyComplexStatement_Branch' LowerBound='414.25' HigherBound='421.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;&amp;&amp; MortgagesCount &gt; 0' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='acd3c2d4-57f9-4ba9-8a17-0a1ff53d953b' ParentLink='ComplexStatement_Statement' LowerBound='416.1' HigherBound='418.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Mortage create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='bac05c20-3400-4a91-a4a3-8a2c4a21da35' ParentLink='ComplexStatement_Statement' LowerBound='418.1' HigherBound='420.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_9' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceMortgage__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Mortgage' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Parameter' OID='18cf218d-2b68-4cab-87d8-751c83d2bc73' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='cf584ff6-0b2c-4f61-a1e6-bc4182f766c7' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='26614705-7e85-46b5-a0f4-6cab2f78e7d4' ParentLink='ComplexStatement_Statement' LowerBound='421.1' HigherBound='429.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='f7d28a96-56a1-460d-a548-e3d82cb91bf0' ParentLink='ReallyComplexStatement_Branch' LowerBound='422.25' HigherBound='429.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='4de747d3-ecc4-4b2a-8939-da7211805733' ParentLink='ComplexStatement_Statement' LowerBound='424.1' HigherBound='426.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call IRS Transcipts create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='6fec3daf-0cd1-4d65-ac27-fdfef564b830' ParentLink='ComplexStatement_Statement' LowerBound='426.1' HigherBound='428.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_7' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceIRS_Transcripts__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call IRS Transcripts' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='4f6004f1-6db6-4f37-a54a-56ef77ee588b' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='fa5a05fd-1847-4b7b-aa02-be80214b83f5' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='7718e7e6-e3f9-481f-965f-2508523fd177' ParentLink='ComplexStatement_Statement' LowerBound='429.1' HigherBound='437.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='38d06d32-ac82-48f7-8e60-0120682335c1' ParentLink='ReallyComplexStatement_Branch' LowerBound='430.25' HigherBound='437.1'>
                                            <om:Property Name='Expression' Value='((!System.String.IsNullOrEmpty(Application.Application.APP_SUMMARY_DECLINE_CODE))&amp;&amp;(Application.Application.APP_SUMMARY_DECLINE_CODE !=&quot;PASS&quot;))' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Summary Decline Code' />
                                            <om:Property Name='Signal' Value='True' />
                                            <om:Element Type='VariableAssignment' OID='c28d00db-c7b6-4a7c-b352-9bb747a5261c' ParentLink='ComplexStatement_Statement' LowerBound='432.1' HigherBound='434.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Decline Withdrawal Code create&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='038f4782-16cb-4db5-8d48-8853d4c9ade8' ParentLink='ComplexStatement_Statement' LowerBound='434.1' HigherBound='436.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_13' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.CallSalesForceDecline_Withdrawal_Code__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Summary Decline Code' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Parameter' OID='f022b46c-6742-4cec-a9e9-79b27d0b8578' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='a880978d-8cc6-43b2-9eff-d39438a82110' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='778e7ada-3599-4edd-a11d-7908de903d4a' ParentLink='ComplexStatement_Statement' LowerBound='437.1' HigherBound='445.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='55fbf2ff-8511-48a3-a4c7-fcc224d4ac38' ParentLink='ReallyComplexStatement_Branch' LowerBound='438.25' HigherBound='445.1'>
                                            <om:Property Name='Expression' Value='Status == &quot;Success&quot;' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Yes' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='8f2cebb5-5c5e-4ed5-8b4a-408286ff7d95' ParentLink='ComplexStatement_Statement' LowerBound='440.1' HigherBound='442.1'>
                                                <om:Property Name='Expression' Value='ProcessStep = &quot;Call Document Coordinator&quot;;' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Set process step' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='ab59a960-bfc7-4988-81a0-57cb0b1efe83' ParentLink='ComplexStatement_Statement' LowerBound='442.1' HigherBound='444.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_12' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.DocumentCoordinatorLogic' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call DLAP Documents' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='dd31ef70-f4d5-44d2-80bb-4e32a7721157' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ApplicationCanonicalMsg' />
                                                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='8eecd464-fd5c-463d-a6af-41badb1fdfc0' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Decision' OID='371f6bcd-2aa1-4600-a9a6-17d456854c6a' ParentLink='ComplexStatement_Statement' LowerBound='445.1' HigherBound='464.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Success or Error?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='c7890c91-3046-4f36-ba8e-676c17bca820' ParentLink='ReallyComplexStatement_Branch' LowerBound='446.25' HigherBound='455.1'>
                                            <om:Property Name='Expression' Value='(Status == &quot;Success&quot;)&amp;&amp;(Status != &quot;Failure&quot;)' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Success' />
                                            <om:Property Name='Signal' Value='True' />
                                            <om:Element Type='Construct' OID='dc756d9b-997c-4085-ab7e-9a43eefad675' ParentLink='ComplexStatement_Statement' LowerBound='448.1' HigherBound='454.1'>
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Construct Oracle Success Status Request' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Transform' OID='00c0aa9d-b3f5-435e-8f1b-17573a2ee9b0' ParentLink='ComplexStatement_Statement' LowerBound='451.1' HigherBound='453.1'>
                                                    <om:Property Name='ClassName' Value='Application_Import_Logic.MakeOracleSuccessStatusRequest' />
                                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                                    <om:Property Name='Name' Value='Make Oracle Success Status Request' />
                                                    <om:Property Name='Signal' Value='True' />
                                                    <om:Element Type='MessagePartRef' OID='ae411343-59e1-4d9d-a379-d79ed11167f3' ParentLink='Transform_OutputMessagePartRef' LowerBound='452.44' HigherBound='452.105'>
                                                        <om:Property Name='MessageRef' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                        <om:Property Name='PartRef' Value='MessagePart' />
                                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                                        <om:Property Name='Name' Value='MessagePartReference_4' />
                                                        <om:Property Name='Signal' Value='False' />
                                                    </om:Element>
                                                    <om:Element Type='MessagePartRef' OID='f0d0b8b2-b746-412b-a344-a8f5c3f755b9' ParentLink='Transform_InputMessagePartRef' LowerBound='452.166' HigherBound='452.189'>
                                                        <om:Property Name='MessageRef' Value='Application' />
                                                        <om:Property Name='PartRef' Value='Application' />
                                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                                        <om:Property Name='Name' Value='MessagePartReference_3' />
                                                        <om:Property Name='Signal' Value='False' />
                                                    </om:Element>
                                                </om:Element>
                                                <om:Element Type='MessageRef' OID='08cbea99-4c88-4ddc-890e-d627005fd3a0' ParentLink='Construct_MessageRef' LowerBound='449.39' HigherBound='449.88'>
                                                    <om:Property Name='Ref' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='adcadd23-a009-4ec3-9c11-3350147001d7' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Error' />
                                            <om:Property Name='Signal' Value='True' />
                                            <om:Element Type='Construct' OID='bdb7053f-18ac-4cac-97bf-a774a77415a5' ParentLink='ComplexStatement_Statement' LowerBound='457.1' HigherBound='463.1'>
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Construct Oracle Error Status Request' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Transform' OID='0087f5c5-dbe9-4e1e-bbe2-860ec8a4613e' ParentLink='ComplexStatement_Statement' LowerBound='460.1' HigherBound='462.1'>
                                                    <om:Property Name='ClassName' Value='Application_Import_Logic.MakeOracleErrorStatusRequest' />
                                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                                    <om:Property Name='Name' Value='Make Oracle Error Status Request' />
                                                    <om:Property Name='Signal' Value='True' />
                                                    <om:Element Type='MessagePartRef' OID='12361789-1a01-4523-bf29-a743fb8f0d8f' ParentLink='Transform_OutputMessagePartRef' LowerBound='461.44' HigherBound='461.105'>
                                                        <om:Property Name='MessageRef' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                        <om:Property Name='PartRef' Value='MessagePart' />
                                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                                        <om:Property Name='Name' Value='MessagePartReference_6' />
                                                        <om:Property Name='Signal' Value='False' />
                                                    </om:Element>
                                                    <om:Element Type='MessagePartRef' OID='3be3d3f8-969b-42c1-b55f-6b1b2a3672c1' ParentLink='Transform_InputMessagePartRef' LowerBound='461.164' HigherBound='461.187'>
                                                        <om:Property Name='MessageRef' Value='Application' />
                                                        <om:Property Name='PartRef' Value='Application' />
                                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                                        <om:Property Name='Name' Value='MessagePartReference_5' />
                                                        <om:Property Name='Signal' Value='False' />
                                                    </om:Element>
                                                </om:Element>
                                                <om:Element Type='MessageRef' OID='25cac496-6989-4d97-8d02-d23815aca2d4' ParentLink='Construct_MessageRef' LowerBound='458.39' HigherBound='458.88'>
                                                    <om:Property Name='Ref' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Send' OID='ad9fd4ec-633b-4e78-bae6-738400458e69' ParentLink='ComplexStatement_Statement' LowerBound='464.1' HigherBound='466.1'>
                                        <om:Property Name='PortName' Value='OracleUpdateSubmittedApplicationsStatusPort' />
                                        <om:Property Name='MessageName' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                        <om:Property Name='OperationName' Value='Operation' />
                                        <om:Property Name='OperationMessageName' Value='Request' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Send Update Status' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Receive' OID='03a434db-c739-4162-981f-2bdc8db40e52' ParentLink='ComplexStatement_Statement' LowerBound='466.1' HigherBound='468.1'>
                                        <om:Property Name='Activate' Value='False' />
                                        <om:Property Name='PortName' Value='OracleUpdateSubmittedApplicationsStatusPort' />
                                        <om:Property Name='MessageName' Value='OracleUpdateSubmittedApplicationsStatusResponseMsg' />
                                        <om:Property Name='OperationName' Value='Operation' />
                                        <om:Property Name='OperationMessageName' Value='Response' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Receive Update Response' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Call' OID='7fb4d9f3-5d2f-488e-a947-17dd2793239e' ParentLink='ComplexStatement_Statement' LowerBound='468.1' HigherBound='470.1'>
                                        <om:Property Name='Identifier' Value='CallOrchestration_5' />
                                        <om:Property Name='Invokee' Value='Application_Import_Logic.Call_Event_Request__c' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Call Event Create' />
                                        <om:Property Name='Signal' Value='False' />
                                        <om:Element Type='Parameter' OID='c71376d9-3f5d-406c-8edf-b4f2050c8c6d' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='ApplicationNumber' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='34fd5ff2-cb99-4ef6-9b9a-c1e4c018283c' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='SalesForceObjectID' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='af638cd8-7525-487c-99c8-f4ca75d67c76' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='Message' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='baa79ae2-d2af-4ed0-acf5-227343331a32' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='SalesForceObjectName' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='f969a28a-f3b8-4fc6-8379-879ae71b60db' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='Stage' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='26fe521c-dde2-4b07-aec6-51545d664c0f' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='Status' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='4916992f-24e5-4440-a984-5d6a94a9ce3f' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='AutoDeclineReason' />
                                            <om:Property Name='Type' Value='System.String' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='Parameter' OID='296b4acb-eb6a-44d7-a84b-a86dec536db7' ParentLink='InvokeStatement_Parameter'>
                                            <om:Property Name='Direction' Value='In' />
                                            <om:Property Name='Name' Value='OrchestrationInstanceID' />
                                            <om:Property Name='Type' Value='System.Guid' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='Catch' OID='b470b70b-3699-44c8-a635-e59c5cbac3f5' ParentLink='Scope_Catch' LowerBound='473.1' HigherBound='559.1'>
                                    <om:Property Name='ExceptionName' Value='Ex' />
                                    <om:Property Name='ExceptionType' Value='System.Exception' />
                                    <om:Property Name='IsFaultMessage' Value='False' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Catch Exception' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='8644bd84-3b79-413e-9645-b0988028d9bb' ParentLink='Catch_Statement' LowerBound='476.1' HigherBound='500.1'>
                                        <om:Property Name='Expression' Value='Status = &quot;Failure&quot;;&#xD;&#xA;&#xD;&#xA;ExceptionContainer = Ex;&#xD;&#xA;&#xD;&#xA;if(Ex.InnerException != null)&#xD;&#xA;{&#xD;&#xA;MessageTemp = ProcessStep+ &quot; - &quot;+ Ex.InnerException.ToString();&#xD;&#xA;&#xD;&#xA;Message = MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000, MessageTemp.Length))) +&quot;Total Error String Length:&quot;+MessageTemp.Length.ToString();&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import Exception&quot;, Ex.Message);&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;MessageTemp = ProcessStep+ &quot; - &quot;+ Ex.Message.ToString();&#xD;&#xA;&#xD;&#xA;Message = MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000, MessageTemp.Length))) +&quot;Total Error String Length:&quot;+MessageTemp.Length.ToString();&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import Exception&quot;, Ex.Message);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Assign Variables' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Construct' OID='d7396b68-8fb9-41ef-87fc-6816c43a1e03' ParentLink='Catch_Statement' LowerBound='500.1' HigherBound='519.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Construct Event Request Info Request Msg' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='Transform' OID='a140d251-33ee-463b-96f4-94b0bfab6e7d' ParentLink='ComplexStatement_Statement' LowerBound='503.1' HigherBound='505.1'>
                                            <om:Property Name='ClassName' Value='Application_Import_Logic.MakeRestEventRequestInfoRequest' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Make Rest EventRequest Info Request' />
                                            <om:Property Name='Signal' Value='True' />
                                            <om:Element Type='MessagePartRef' OID='fb6cec4e-95cc-470a-a2c9-bf40fc08a934' ParentLink='Transform_OutputMessagePartRef' LowerBound='504.44' HigherBound='504.87'>
                                                <om:Property Name='MessageRef' Value='RestEventRequestQueryRequestMsg' />
                                                <om:Property Name='PartRef' Value='MessagePart' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='MessagePartReference_12' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                            <om:Element Type='MessagePartRef' OID='4f6200f4-58cb-475b-9d04-08667c985246' ParentLink='Transform_InputMessagePartRef' LowerBound='504.149' HigherBound='504.172'>
                                                <om:Property Name='MessageRef' Value='Application' />
                                                <om:Property Name='PartRef' Value='Application' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='MessagePartReference_11' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='MessageAssignment' OID='11da616a-828f-452d-9f31-b850a4b64c6a' ParentLink='ComplexStatement_Statement' LowerBound='505.1' HigherBound='518.1'>
                                            <om:Property Name='Expression' Value='//Extract DLAPUserID and Application Number from the DocumentList Request&#xD;&#xA;&#xD;&#xA;ApplicationNumberList = Application.Application.APP_ELA_REFERENCE_NBR;&#xD;&#xA;&#xD;&#xA;//SOQL Query For Rest&#xD;&#xA;&#xD;&#xA;EVENTREQUEST_INFO_SOQL_QUERY = @&quot;Select Application_Number__c,Id,GUID__c,Status__c from Event_Request__c WHERE (Application_Number__c = &quot;+&quot;&apos;&quot;+ApplicationNumberList+&quot;&apos;) AND (Status__c = &apos;Success&apos; AND (Stage__c =&apos;Received Application&apos; OR Stage__c =&apos;Received Application Summary Decline&apos;)) AND Application_Number__c != NULL&quot;;&#xD;&#xA;&#xD;&#xA;RestEventRequestQueryRequestMsg(Salesforce_Application_Import_Definition.Application__c.RestApplication__c.SOQL_EVENTREQUEST_INFO_QUERY) = EVENTREQUEST_INFO_SOQL_QUERY; &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;' />
                                            <om:Property Name='ReportToAnalyst' Value='False' />
                                            <om:Property Name='Name' Value='SOQL Query' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='MessageRef' OID='d31b67c4-ab16-4bab-9115-6f767ca98630' ParentLink='Construct_MessageRef' LowerBound='501.39' HigherBound='501.70'>
                                            <om:Property Name='Ref' Value='RestEventRequestQueryRequestMsg' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='Send' OID='df3ffe97-ecf0-4252-aa47-9811e928499e' ParentLink='Catch_Statement' LowerBound='519.1' HigherBound='521.1'>
                                        <om:Property Name='PortName' Value='RestEventRequestInfoPort' />
                                        <om:Property Name='MessageName' Value='RestEventRequestQueryRequestMsg' />
                                        <om:Property Name='OperationName' Value='Operation' />
                                        <om:Property Name='OperationMessageName' Value='Request' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Send EventRequest ' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Receive' OID='3282e9b0-7429-49d1-b0dc-9d81ceed1c6b' ParentLink='Catch_Statement' LowerBound='521.1' HigherBound='523.1'>
                                        <om:Property Name='Activate' Value='False' />
                                        <om:Property Name='PortName' Value='RestEventRequestInfoPort' />
                                        <om:Property Name='MessageName' Value='RestEventRequestQueryResponseMsg' />
                                        <om:Property Name='OperationName' Value='Operation' />
                                        <om:Property Name='OperationMessageName' Value='Response' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Receive EventRequest Response' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='VariableAssignment' OID='85b76039-5c37-40b6-ac0b-79dc1cbdfbfb' ParentLink='Catch_Statement' LowerBound='523.1' HigherBound='535.1'>
                                        <om:Property Name='Expression' Value='RestEventRequestName = xpath(RestEventRequestQueryResponseMsg.MessagePart,&quot;string(/*[local-name()=&apos;QueryResult&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;]/*[local-name()=&apos;records&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;]/*[local-name()=&apos;Application_Number__c&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;RestEventRequestSFID = xpath(RestEventRequestQueryResponseMsg.MessagePart,&quot;string(/*[local-name()=&apos;QueryResult&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;]/*[local-name()=&apos;records&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;]/*[local-name()=&apos;Id&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;RestEventRequestTotalSize = xpath(RestEventRequestQueryResponseMsg.MessagePart,&quot;string(/*[local-name()=&apos;QueryResult&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;]/*[local-name()=&apos;totalSize&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;if(((!System.String.IsNullOrWhiteSpace(RestEventRequestName))&amp;&amp;(!System.String.IsNullOrWhiteSpace(RestEventRequestSFID)))&amp;&amp;(System.Convert.ToInt32(RestEventRequestTotalSize) != 0))&#xD;&#xA;{ vRestEventRequestFlag = false;}&#xD;&#xA;&#xD;&#xA;else{vRestEventRequestFlag = true;}' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='EventRequest Validation Values' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Decision' OID='2394cfae-841a-4b71-93d7-267d42d51feb' ParentLink='Catch_Statement' LowerBound='535.1' HigherBound='558.1'>
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Valid Event?' />
                                        <om:Property Name='Signal' Value='True' />
                                        <om:Element Type='DecisionBranch' OID='edb137dc-7bad-4363-b81b-8a1f8aaa114a' ParentLink='ReallyComplexStatement_Branch' LowerBound='536.29' HigherBound='553.1'>
                                            <om:Property Name='Expression' Value='vRestEventRequestFlag == true' />
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Event Request' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='Construct' OID='9572360b-8f62-4368-90c6-a11072ca3986' ParentLink='ComplexStatement_Statement' LowerBound='538.1' HigherBound='544.1'>
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Construct Oracle Error Status Request' />
                                                <om:Property Name='Signal' Value='True' />
                                                <om:Element Type='Transform' OID='436ccdc7-b9d2-406d-8c8c-aa3fe21a249d' ParentLink='ComplexStatement_Statement' LowerBound='541.1' HigherBound='543.1'>
                                                    <om:Property Name='ClassName' Value='Application_Import_Logic.MakeOracleErrorStatusRequest' />
                                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                                    <om:Property Name='Name' Value='Make Oracle Error Status Request' />
                                                    <om:Property Name='Signal' Value='False' />
                                                    <om:Element Type='MessagePartRef' OID='285b08df-3771-45b5-a033-0114205110dc' ParentLink='Transform_InputMessagePartRef' LowerBound='542.168' HigherBound='542.191'>
                                                        <om:Property Name='MessageRef' Value='Application' />
                                                        <om:Property Name='PartRef' Value='Application' />
                                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                                        <om:Property Name='Name' Value='MessagePartReference_7' />
                                                        <om:Property Name='Signal' Value='False' />
                                                    </om:Element>
                                                    <om:Element Type='MessagePartRef' OID='b87647a6-d747-4b31-a79a-4cf77f0dd173' ParentLink='Transform_OutputMessagePartRef' LowerBound='542.48' HigherBound='542.109'>
                                                        <om:Property Name='MessageRef' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                        <om:Property Name='PartRef' Value='MessagePart' />
                                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                                        <om:Property Name='Name' Value='MessagePartReference_8' />
                                                        <om:Property Name='Signal' Value='False' />
                                                    </om:Element>
                                                </om:Element>
                                                <om:Element Type='MessageRef' OID='5cf21b6b-6518-42c4-9f23-309663561668' ParentLink='Construct_MessageRef' LowerBound='539.43' HigherBound='539.92'>
                                                    <om:Property Name='Ref' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                            <om:Element Type='Send' OID='2448fb8c-c1d8-4bc9-9c52-7a86bab6da3e' ParentLink='ComplexStatement_Statement' LowerBound='544.1' HigherBound='546.1'>
                                                <om:Property Name='PortName' Value='OracleUpdateSubmittedApplicationsStatusPort' />
                                                <om:Property Name='MessageName' Value='OracleUpdateSubmittedApplicationsStatusRequestMsg' />
                                                <om:Property Name='OperationName' Value='Operation' />
                                                <om:Property Name='OperationMessageName' Value='Request' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Send Update Status' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Receive' OID='cf632aad-7095-41f2-b26d-83c7cdcecdbd' ParentLink='ComplexStatement_Statement' LowerBound='546.1' HigherBound='548.1'>
                                                <om:Property Name='Activate' Value='False' />
                                                <om:Property Name='PortName' Value='OracleUpdateSubmittedApplicationsStatusPort' />
                                                <om:Property Name='MessageName' Value='OracleUpdateSubmittedApplicationsStatusResponseMsg' />
                                                <om:Property Name='OperationName' Value='Operation' />
                                                <om:Property Name='OperationMessageName' Value='Response' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Receive Update Response' />
                                                <om:Property Name='Signal' Value='True' />
                                            </om:Element>
                                            <om:Element Type='Call' OID='baf2043d-de23-493c-9add-dfdfa9e461d3' ParentLink='ComplexStatement_Statement' LowerBound='548.1' HigherBound='550.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_10' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.Error_Analyzer' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='CallOrchestration_10' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='13064343-6542-4e90-b197-f259fd9d43f5' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='MessageTemplate' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='65e3d7f1-f2ce-4ce5-8cc2-ab9c620def65' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ApplicationNumber' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='798a7657-2774-46a7-85a2-86b5b7950e98' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ProcessStep' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='784a9bd4-16fa-4056-9bf6-d82e52569cc3' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='Ref' />
                                                    <om:Property Name='Name' Value='Message' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='027a4bce-8081-4d0e-b088-17bb691fa082' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ExceptionContainer' />
                                                    <om:Property Name='Type' Value='System.Exception' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                            <om:Element Type='Call' OID='58ffcf2a-0354-4ae2-bd13-653bd09711e1' ParentLink='ComplexStatement_Statement' LowerBound='550.1' HigherBound='552.1'>
                                                <om:Property Name='Identifier' Value='CallOrchestration_14' />
                                                <om:Property Name='Invokee' Value='Application_Import_Logic.Call_Event_Request__c' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Call Event Create' />
                                                <om:Property Name='Signal' Value='False' />
                                                <om:Element Type='Parameter' OID='5afddc81-1886-4188-8711-e14a72a2001f' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='ApplicationNumber' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='6d570ed3-54c4-4b7b-a5a9-9d88eaeedeef' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='SalesForceObjectID' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='bdeefa12-3a49-4551-a37c-1d33393751ae' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='Message' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='473a135b-9c20-4652-a92c-2d973c6c75a0' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='SalesForceObjectName' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='e3e252ce-bf86-4ee9-aa48-2b7c3d7575e7' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='Stage' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='2379189f-3bdb-4d47-b31b-a3e084e59b29' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='Status' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='96645bf8-37ac-4ffb-8c02-bd740d899702' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='AutoDeclineReason' />
                                                    <om:Property Name='Type' Value='System.String' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                                <om:Element Type='Parameter' OID='115660af-d710-4b55-afb0-7468b5a7dbf6' ParentLink='InvokeStatement_Parameter'>
                                                    <om:Property Name='Direction' Value='In' />
                                                    <om:Property Name='Name' Value='OrchestrationInstanceID' />
                                                    <om:Property Name='Type' Value='System.Guid' />
                                                    <om:Property Name='Signal' Value='False' />
                                                </om:Element>
                                            </om:Element>
                                        </om:Element>
                                        <om:Element Type='DecisionBranch' OID='aa506009-e40c-4d56-ac39-22267235d518' ParentLink='ReallyComplexStatement_Branch'>
                                            <om:Property Name='IsGhostBranch' Value='True' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='Else' />
                                            <om:Property Name='Signal' Value='False' />
                                            <om:Element Type='VariableAssignment' OID='fd733c2a-2f5d-4b2a-957e-e5062b20116f' ParentLink='ComplexStatement_Statement' LowerBound='555.1' HigherBound='557.1'>
                                                <om:Property Name='Expression' Value='System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import - BizTalk Application Event Request created already&quot;,ApplicationNumber   +  RestEventRequestSFID,System.Diagnostics.EventLogEntryType.Error);' />
                                                <om:Property Name='ReportToAnalyst' Value='True' />
                                                <om:Property Name='Name' Value='Log' />
                                                <om:Property Name='Signal' Value='False' />
                                            </om:Element>
                                        </om:Element>
                                    </om:Element>
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='f5d917be-916f-403d-9031-21ff0f17d49f' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='VariableAssignment' OID='52b7889d-f6f6-45e6-b45a-897927502b71' ParentLink='ComplexStatement_Statement' LowerBound='564.1' HigherBound='566.1'>
                                <om:Property Name='Expression' Value='System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import - Duplicate Application Warning&quot;, &quot;Application Exists in the Salesforce - &quot;+ApplicationNumber, System.Diagnostics.EventLogEntryType.Warning);' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Warning' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Terminate' OID='09ccfd40-63ee-4701-835e-6742f5cde859' ParentLink='ComplexStatement_Statement' LowerBound='566.1' HigherBound='568.1'>
                                <om:Property Name='ErrorMessage' Value='&quot;Duplicate Application Exists in the Salesforce&quot;;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Terminate' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='4e0ccefe-108c-4d17-869a-13f17ef37723' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='81.1' HigherBound='83.1'>
                <om:Property Name='PortModifier' Value='Implements' />
                <om:Property Name='Orientation' Value='Left' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.DLAPSingleApplicationImportPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DLAPApplicationImport' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='fa546d6b-eaa7-4b14-9ddd-79ffd26c51ff' ParentLink='PortDeclaration_CLRAttribute' LowerBound='81.1' HigherBound='82.1'>
                    <om:Property Name='PartnerPort' Value='DLAPSingleApplicationImportPort' />
                    <om:Property Name='PartnerService' Value='Application_Import_Logic.OracleMultpleApplicationsDebatcherLogic' />
                    <om:Property Name='DirectBindingType' Value='PartnerPort' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='b097f187-1757-4f00-afb3-186080108e52' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='83.1' HigherBound='85.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='389' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OracleUpdateSubmittedApplicationsStatusPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='LogicalBindingAttribute' OID='4c41960b-70b9-4fa5-b65a-14f7be704f57' ParentLink='PortDeclaration_CLRAttribute' LowerBound='83.1' HigherBound='84.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='c5a21c8b-b184-4c37-9725-5ebe12cd47bc' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='85.1' HigherBound='87.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='10' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.RestApplicationQueryPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestApplicationQueryPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='LogicalBindingAttribute' OID='aa2135ac-022b-433b-97dc-742c85a366bb' ParentLink='PortDeclaration_CLRAttribute' LowerBound='85.1' HigherBound='86.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='cd926b6a-59ee-4d0b-a5a1-3ef3c7125cee' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='87.1' HigherBound='89.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='452' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.RestEventRequestInfoPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestInfoPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='LogicalBindingAttribute' OID='70675895-dff0-40dd-8628-292ca02ebac9' ParentLink='PortDeclaration_CLRAttribute' LowerBound='87.1' HigherBound='88.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='adde075c-fc34-4fe3-a661-2daa2653f533' ParentLink='Module_PortType' LowerBound='32.1' HigherBound='39.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='OracleUpdateSubmittedApplicationsStatusPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='c2f48ea9-27b6-4d00-b756-27d1e55b216e' ParentLink='PortType_OperationDeclaration' LowerBound='34.1' HigherBound='38.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='dc93d3e8-0a4f-4f3c-929b-ea254f3d1eda' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='36.65' HigherBound='36.116'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusResponseType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='44bf7064-2069-47c5-bbfc-205fddb187f9' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='36.13' HigherBound='36.63'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.OracleUpdateSubmittedApplicationsStatusRequestType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='e0168fa4-2273-4507-8b23-916b6c5aae12' ParentLink='Module_PortType' LowerBound='39.1' HigherBound='46.1'>
            <om:Property Name='Synchronous' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='ReceiveApplicationPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='47e54586-c92c-44e2-bf8f-608932719833' ParentLink='PortType_OperationDeclaration' LowerBound='41.1' HigherBound='45.1'>
                <om:Property Name='OperationType' Value='OneWay' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Notify' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='728fe61c-c424-4a8f-959e-b25891526a2d' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='43.13' HigherBound='43.31'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.ApplicationMsgType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='b28006c7-130b-4830-8e78-2484ff91b974' ParentLink='Module_PortType' LowerBound='46.1' HigherBound='53.1'>
            <om:Property Name='Synchronous' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='DocumentUploadPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='3e5de52e-ad8b-47a1-83cf-2bea3da1656e' ParentLink='PortType_OperationDeclaration' LowerBound='48.1' HigherBound='52.1'>
                <om:Property Name='OperationType' Value='OneWay' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DocumentUploadSendTrigger' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='5b6090e4-13fa-478f-acb7-aea9adddeb2c' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='50.13' HigherBound='50.79'>
                    <om:Property Name='Ref' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='DocumentUploadTrigger' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='fff28146-63bc-40ad-b2a6-c23a364ec3c9' ParentLink='Module_PortType' LowerBound='53.1' HigherBound='60.1'>
            <om:Property Name='Synchronous' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='DebugSendInflightFromCallerPortType' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='f0cf76a4-db6c-4569-9aed-d6c4dcaa93eb' ParentLink='PortType_OperationDeclaration' LowerBound='55.1' HigherBound='59.1'>
                <om:Property Name='OperationType' Value='OneWay' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation_1' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='05980b46-69ae-48a1-9e64-aba8c9ca8e9f' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='57.13' HigherBound='57.79'>
                    <om:Property Name='Ref' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='ce02b097-c10c-4bd3-9ce3-b2991ee46135' ParentLink='Module_PortType' LowerBound='60.1' HigherBound='67.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestApplicationQueryPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='e82f02c6-0ba9-4a76-b91e-60dbd7c2a43f' ParentLink='PortType_OperationDeclaration' LowerBound='62.1' HigherBound='66.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='c8e0d975-4ada-4c0e-ac06-ff8851c3017c' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='64.13' HigherBound='64.44'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestApplicationQueryRequestType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='4fb23d94-f659-4c61-8431-0c7387f788b5' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='64.46' HigherBound='64.78'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestApplicationQueryResponseType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='480a0020-2c99-4099-9680-ab5f20514eb1' ParentLink='Module_PortType' LowerBound='67.1' HigherBound='74.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestEventRequestInfoPortType' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='83e72d1a-6f62-42be-ac3c-5f4573fca531' ParentLink='PortType_OperationDeclaration' LowerBound='69.1' HigherBound='73.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='09fbc1db-0c41-40fc-954f-532a4e4d3fb6' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='71.13' HigherBound='71.45'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestEventRequestQueryRequestType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='84449d87-26f1-4438-96c3-f895388263b0' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='71.47' HigherBound='71.80'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestEventRequestQueryResponseType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='CorrelationType' OID='8dfa1465-44cc-49bb-b807-9072c44ad9af' ParentLink='Module_CorrelationType' LowerBound='74.1' HigherBound='78.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='DocumentUploadCorrelationType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PropertyRef' OID='70d56650-4606-47f8-b644-1acbb8f9fea4' ParentLink='CorrelationType_PropertyRef' LowerBound='76.9' HigherBound='76.53'>
                <om:Property Name='Ref' Value='Application_Import_Definition.DocumentUpload' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='PropertyRef_1' />
                <om:Property Name='Signal' Value='False' />
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __DLAP_Application_Import_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __DLAP_Application_Import_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "DLAP_Application_Import")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                DLAP_Application_Import __svc__ = (DLAP_Application_Import)_service;
                __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.RestEventRequestInfoPort != null)
                {
                    __svc__.RestEventRequestInfoPort.Close(this, null);
                    __svc__.RestEventRequestInfoPort = null;
                }
                if (__svc__.DLAPApplicationImport != null)
                {
                    __svc__.DLAPApplicationImport.Close(this, null);
                    __svc__.DLAPApplicationImport = null;
                }
                if (__svc__.RestApplicationQueryPort != null)
                {
                    __svc__.RestApplicationQueryPort.Close(this, null);
                    __svc__.RestApplicationQueryPort = null;
                }
                if (__svc__.OracleUpdateSubmittedApplicationsStatusPort != null)
                {
                    __svc__.OracleUpdateSubmittedApplicationsStatusPort.Close(this, null);
                    __svc__.OracleUpdateSubmittedApplicationsStatusPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper1;
            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper2;
            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper3;
            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper4;
        }


        [System.SerializableAttribute]
        public class __DLAP_Application_Import_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __DLAP_Application_Import_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "DLAP_Application_Import")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                DLAP_Application_Import __svc__ = (DLAP_Application_Import)_service;
                __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)(__svc__._stateMgrs[1]);

                if (__ctx1__ != null)
                    __ctx1__.__Status = null;
                if (__ctx1__ != null && __ctx1__.__Application != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__Application);
                    __ctx1__.__Application = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__Stage = null;
                if (__ctx1__ != null)
                    __ctx1__.__SalesForceObjectName = null;
                if (__ctx1__ != null)
                    __ctx1__.__SalesForceObjectID = null;
                if (__ctx1__ != null)
                    __ctx1__.__MessageTemplate = null;
                if (__ctx1__ != null)
                    __ctx1__.__MessageTemp = null;
                if (__ctx1__ != null)
                    __ctx1__.__APPLICATION_INFO_SOQL_QUERY = null;
                if (__ctx1__ != null)
                    __ctx1__.__ProcessStep = null;
                if (__ctx1__ != null && __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__AutoDeclineReason = null;
                if (__ctx1__ != null && __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationNumber = null;
                if (__ctx1__ != null)
                    __ctx1__.__Message = null;
                if (__ctx1__ != null)
                    __ctx1__.__ExceptionContainer = null;
                if (__ctx1__ != null)
                    __ctx1__.__GetRecordTypeValues = null;
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationNumberList = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestApplicationName = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestEventRequestName = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestEventRequestTotalSize = null;
                if (__ctx1__ != null)
                    __ctx1__.__TotalSize = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestEventRequestSFID = null;
                if (__ctx1__ != null)
                    __ctx1__.__EVENTREQUEST_INFO_SOQL_QUERY = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestApplicationSFID = null;
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("Application")]
            internal ApplicationMsgType __Application;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonicalMsg")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonicalMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("OracleUpdateSubmittedApplicationsStatusRequestMsg")]
            internal OracleUpdateSubmittedApplicationsStatusRequestType __OracleUpdateSubmittedApplicationsStatusRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("OracleUpdateSubmittedApplicationsStatusResponseMsg")]
            internal OracleUpdateSubmittedApplicationsStatusResponseType __OracleUpdateSubmittedApplicationsStatusResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestApplicationQueryRequestMsg")]
            internal RestApplicationQueryRequestType __RestApplicationQueryRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestApplicationQueryResponseMsg")]
            internal RestApplicationQueryResponseType __RestApplicationQueryResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestQueryRequestMsg")]
            internal RestEventRequestQueryRequestType __RestEventRequestQueryRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestQueryResponseMsg")]
            internal RestEventRequestQueryResponseType __RestEventRequestQueryResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("OrchestrationInstanceID")]
            internal System.Guid __OrchestrationInstanceID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Status")]
            internal System.String __Status;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Stage")]
            internal System.String __Stage;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationNumber")]
            internal System.String __ApplicationNumber;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesForceObjectName")]
            internal System.String __SalesForceObjectName;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesForceObjectID")]
            internal System.String __SalesForceObjectID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Message")]
            internal System.String __Message;
            [Microsoft.XLANGs.Core.UserVariableAttribute("MessageTemplate")]
            internal System.String __MessageTemplate;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ProcessStep")]
            internal System.String __ProcessStep;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ExceptionContainer")]
            internal System.Exception __ExceptionContainer;
            [Microsoft.XLANGs.Core.UserVariableAttribute("GetRecordTypeValues")]
            internal DLAPApplicationImportRecordTypeValues.RecordTypeValues __GetRecordTypeValues;
            [Microsoft.XLANGs.Core.UserVariableAttribute("InsuranceCount")]
            internal System.Int32 __InsuranceCount;
            [Microsoft.XLANGs.Core.UserVariableAttribute("MortgagesCount")]
            internal System.Int32 __MortgagesCount;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AutoDeclineReason")]
            internal System.String __AutoDeclineReason;
            [Microsoft.XLANGs.Core.UserVariableAttribute("OtherAssistanceCount")]
            internal System.Int32 __OtherAssistanceCount;
            [Microsoft.XLANGs.Core.UserVariableAttribute("MessageTemp")]
            internal System.String __MessageTemp;
            [Microsoft.XLANGs.Core.UserVariableAttribute("APPLICATION_INFO_SOQL_QUERY")]
            internal System.String __APPLICATION_INFO_SOQL_QUERY;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationNumberList")]
            internal System.String __ApplicationNumberList;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestApplicationName")]
            internal System.String __RestApplicationName;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestApplicationSFID")]
            internal System.String __RestApplicationSFID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("TotalSize")]
            internal System.String __TotalSize;
            [Microsoft.XLANGs.Core.UserVariableAttribute("vApplicationFlag")]
            internal System.Boolean __vApplicationFlag;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EVENTREQUEST_INFO_SOQL_QUERY")]
            internal System.String __EVENTREQUEST_INFO_SOQL_QUERY;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestName")]
            internal System.String __RestEventRequestName;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestSFID")]
            internal System.String __RestEventRequestSFID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestTotalSize")]
            internal System.String __RestEventRequestTotalSize;
            [Microsoft.XLANGs.Core.UserVariableAttribute("vRestEventRequestFlag")]
            internal System.Boolean __vRestEventRequestFlag;
        }


        [System.SerializableAttribute]
        public class ____scope36_2 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public ____scope36_2(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "??__scope36")
            {
            }

            public override int Index { get { return 2; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[2]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[2]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Microsoft.XLANGs.Core.Segment __seg__;
                Microsoft.XLANGs.Core.FaultReceiveException __fault__;

                __exv__ = _exception;
                if (!(__exv__ is Microsoft.XLANGs.Core.UnknownException))
                {
                    __fault__ = __exv__ as Microsoft.XLANGs.Core.FaultReceiveException;
                    if ((__fault__ == null) && (__exv__ is System.Exception))
                    {
                        __seg__ = _service._segments[3];
                        __seg__.Reset(1);
                        __seg__.PredecessorDone(_service);
                        return true;
                    }
                }

                Finally();
                return false;
            }

            public override void Finally()
            {
                DLAP_Application_Import __svc__ = (DLAP_Application_Import)_service;
                __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)(__svc__._stateMgrs[0]);
                __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)(__svc__._stateMgrs[1]);
                ____scope36_2 __ctx2__ = (____scope36_2)(__svc__._stateMgrs[2]);

                if (__ctx0__ != null && __ctx0__.__subWrapper1 != null)
                {
                    __ctx0__.__subWrapper1.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper1 = null;
                }
                if (__ctx1__ != null && __ctx1__.__RestApplicationQueryRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestApplicationQueryRequestMsg);
                    __ctx1__.__RestApplicationQueryRequestMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__RestApplicationQueryResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestApplicationQueryResponseMsg);
                    __ctx1__.__RestApplicationQueryResponseMsg = null;
                }
                if (__ctx2__ != null)
                    __ctx2__.__DEx_0 = null;
                base.Finally();
            }

            internal object __exv__;
            internal System.Exception __DEx_0
            {
                get { return (System.Exception)__exv__; }
                set { __exv__ = value; }
            }
        }


        [System.SerializableAttribute]
        public class ____scope37_3 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public ____scope37_3(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "??__scope37")
            {
            }

            public override int Index { get { return 3; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[4]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[4]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Microsoft.XLANGs.Core.Segment __seg__;
                Microsoft.XLANGs.Core.FaultReceiveException __fault__;

                __exv__ = _exception;
                if (!(__exv__ is Microsoft.XLANGs.Core.UnknownException))
                {
                    __fault__ = __exv__ as Microsoft.XLANGs.Core.FaultReceiveException;
                    if ((__fault__ == null) && (__exv__ is System.Exception))
                    {
                        __seg__ = _service._segments[6];
                        __seg__.Reset(1);
                        __seg__.PredecessorDone(_service);
                        return true;
                    }
                }

                Finally();
                return false;
            }

            public override void Finally()
            {
                DLAP_Application_Import __svc__ = (DLAP_Application_Import)_service;
                __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)(__svc__._stateMgrs[0]);
                __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)(__svc__._stateMgrs[1]);
                ____scope37_3 __ctx3__ = (____scope37_3)(__svc__._stateMgrs[3]);

                if (__ctx0__ != null && __ctx0__.__subWrapper4 != null)
                {
                    __ctx0__.__subWrapper4.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper4 = null;
                }
                if (__ctx0__ != null && __ctx0__.__subWrapper2 != null)
                {
                    __ctx0__.__subWrapper2.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper2 = null;
                }
                if (__ctx0__ != null && __ctx0__.__subWrapper3 != null)
                {
                    __ctx0__.__subWrapper3.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper3 = null;
                }
                if (__ctx1__ != null && __ctx1__.__RestEventRequestQueryResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestQueryResponseMsg);
                    __ctx1__.__RestEventRequestQueryResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonicalMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonicalMsg);
                    __ctx1__.__ApplicationCanonicalMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__RestEventRequestQueryRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestQueryRequestMsg);
                    __ctx1__.__RestEventRequestQueryRequestMsg = null;
                }
                if (__ctx3__ != null)
                    __ctx3__.__Ex_0 = null;
                base.Finally();
            }

            internal object __exv__;
            internal System.Exception __Ex_0
            {
                get { return (System.Exception)__exv__; }
                set { __exv__ = value; }
            }
        }


        [System.SerializableAttribute]
        public class ____scope38_4 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public ____scope38_4(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "??__scope38")
            {
            }

            public override int Index { get { return 4; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[5]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[5]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                DLAP_Application_Import __svc__ = (DLAP_Application_Import)_service;
                ____scope38_4 __ctx4__ = (____scope38_4)(__svc__._stateMgrs[4]);

                if (__ctx4__ != null)
                    __ctx4__.__policy_1__ = null;
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("policy_1__")]
            internal Microsoft.RuleEngine.Policy __policy_1__;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute(typeof(OracleMultpleApplicationsDebatcherLogic), "DLAPSingleApplicationImportPort")]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eImplements
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("DLAPApplicationImport")]
        internal DLAPSingleApplicationImportPortType DLAPApplicationImport;
        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("RestApplicationQueryPort")]
        internal RestApplicationQueryPortType RestApplicationQueryPort;
        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("OracleUpdateSubmittedApplicationsStatusPort")]
        internal OracleUpdateSubmittedApplicationsStatusPortType OracleUpdateSubmittedApplicationsStatusPort;
        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestInfoPort")]
        internal RestEventRequestInfoPortType RestEventRequestInfoPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {DLAPSingleApplicationImportPortType.Operation},
                                               typeof(DLAP_Application_Import).GetField("DLAPApplicationImport", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.implements,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(DLAP_Application_Import), "DLAPApplicationImport"),
                                               null),
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {RestApplicationQueryPortType.Operation},
                                               typeof(DLAP_Application_Import).GetField("RestApplicationQueryPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(DLAP_Application_Import), "RestApplicationQueryPort"),
                                               null),
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {OracleUpdateSubmittedApplicationsStatusPortType.Operation},
                                               typeof(DLAP_Application_Import).GetField("OracleUpdateSubmittedApplicationsStatusPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(DLAP_Application_Import), "OracleUpdateSubmittedApplicationsStatusPort"),
                                               null),
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {RestEventRequestInfoPortType.Operation},
                                               typeof(DLAP_Application_Import).GetField("RestEventRequestInfoPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(DLAP_Application_Import), "RestEventRequestInfoPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                h[_portInfo[1].Name] = _portInfo[1];
                h[_portInfo[2].Name] = _portInfo[2];
                h[_portInfo[3].Name] = _portInfo[3];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                    typeof(Application_Import_Logic.DocumentCoordinatorLogic),
                    typeof(Application_Import_Logic.CallSalesforceAccount),
                    typeof(Application_Import_Logic.CallSalesForceApplicant),
                    typeof(Application_Import_Logic.CallSalesForceApplication__c),
                    typeof(Application_Import_Logic.CallSalesForceContact),
                    typeof(Application_Import_Logic.CallSalesForceInsurance),
                    typeof(Application_Import_Logic.CallSalesForceProperty__c),
                    typeof(Application_Import_Logic.CallSalesForceIRS_Transcripts__c),
                    typeof(Application_Import_Logic.CallSalesForceAssetIncomes),
                    typeof(Application_Import_Logic.CallSalesForceMortgage__c),
                    typeof(Application_Import_Logic.CallSalesForceDebts_Expenses__c),
                    typeof(Application_Import_Logic.Error_Analyzer),
                    typeof(Application_Import_Logic.Call_Event_Request__c),
                    typeof(Application_Import_Logic.CallSalesforceOther_Assistance__c),
                    typeof(Application_Import_Logic.CallAddtionalContact),
                    typeof(Application_Import_Logic.CallSalesForceDecline_Withdrawal_Code__c)                    
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static object[] StaticSubscriptionsInformation {
            get {
                return new object[1]{
                     new object[5] { _portInfo[0], 0, null , -1, true }
                };
            }
        }

        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "c5d67012-32c1-47b4-ae71-9dd29b52957d", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "c5d67012-32c1-47b4-ae71-9dd29b52957d", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "b87dca6a-52af-40d0-b295-947a9e3bf84f", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "b87dca6a-52af-40d0-b295-947a9e3bf84f", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "2a53b9e8-a8dc-427e-b0f3-370160ba2ad1", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "00000000-0000-0000-0000-000000000000", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "73202375-1487-4666-91d0-c4b6ef9bab2b", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "73202375-1487-4666-91d0-c4b6ef9bab2b", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "6327fd21-b18f-4fd1-9d07-f567b1e72fc5", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "6327fd21-b18f-4fd1-9d07-f567b1e72fc5", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "2d5d6b1e-8c9c-4722-9778-19f7c6a3fbbc", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "2d5d6b1e-8c9c-4722-9778-19f7c6a3fbbc", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "7d1f98bb-2470-41bf-8088-9b94019fb143", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "7d1f98bb-2470-41bf-8088-9b94019fb143", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(16, "00000000-0000-0000-0000-000000000000", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(17, "e9f77356-0101-4e74-9c23-3382ca23ee1f", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(18, "6a548e54-24b7-4a61-a26b-710ba35dcf55", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(19, "6a548e54-24b7-4a61-a26b-710ba35dcf55", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(20, "00000000-0000-0000-0000-000000000000", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(21, "00000000-0000-0000-0000-000000000000", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(22, "e9f77356-0101-4e74-9c23-3382ca23ee1f", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(23, "2a53b9e8-a8dc-427e-b0f3-370160ba2ad1", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(24, "aa1ddfa5-2306-48bb-ac50-da7519676840", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(25, "1109c81f-3a2b-40a7-a937-c9840aae793e", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(26, "00000000-0000-0000-0000-000000000000", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(27, "f4e5d76b-0084-4601-b720-9a29ff4aec92", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(28, "00000000-0000-0000-0000-000000000000", 5, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(29, "00000000-0000-0000-0000-000000000000", 5, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(30, "f4e5d76b-0084-4601-b720-9a29ff4aec92", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(31, "c91f9189-4ca4-4189-9dd6-d7b28245e52f", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(32, "c91f9189-4ca4-4189-9dd6-d7b28245e52f", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(33, "91804920-74e2-4af9-8f1b-b9606c85cfd0", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(34, "91804920-74e2-4af9-8f1b-b9606c85cfd0", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(35, "db21e5c0-c67d-40db-8aca-9dffa6d5ac43", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(36, "db21e5c0-c67d-40db-8aca-9dffa6d5ac43", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(37, "927c3c8d-5fb6-4a20-9967-cf5005a9fdf7", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(38, "927c3c8d-5fb6-4a20-9967-cf5005a9fdf7", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(39, "00000000-0000-0000-0000-000000000000", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(40, "653f4ff0-5cb2-4331-ae41-ffdd14593257", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(41, "653f4ff0-5cb2-4331-ae41-ffdd14593257", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(42, "d5f239e9-72c1-473e-84c0-59c021ba9d9d", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(43, "f68f9792-39c5-425b-b34a-55a55756a855", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(44, "f68f9792-39c5-425b-b34a-55a55756a855", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(45, "735322d9-b74a-49af-b8cf-a7936767d819", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(46, "735322d9-b74a-49af-b8cf-a7936767d819", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(47, "d5f239e9-72c1-473e-84c0-59c021ba9d9d", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(48, "3a7d3166-1f6a-490a-a75d-0861ee55bfe0", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(49, "26aed432-3be6-43e8-a6ad-dd381e6c8f62", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(50, "26aed432-3be6-43e8-a6ad-dd381e6c8f62", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(51, "dee70cd9-b3e8-437d-9980-7837ab1af0a5", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(52, "dee70cd9-b3e8-437d-9980-7837ab1af0a5", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(53, "3a7d3166-1f6a-490a-a75d-0861ee55bfe0", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(54, "5ad6edc1-7f0b-495e-a8c0-ea5bb80a15bc", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(55, "f303f26b-8ba5-46f2-84be-1747da0a6dd5", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(56, "f303f26b-8ba5-46f2-84be-1747da0a6dd5", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(57, "ee522655-25b3-45dc-ba60-eed2d01c0cb4", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(58, "ee522655-25b3-45dc-ba60-eed2d01c0cb4", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(59, "5ad6edc1-7f0b-495e-a8c0-ea5bb80a15bc", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(60, "419b7ae7-e003-4d5c-93d7-0ca10c52d933", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(61, "c882a370-6713-4842-8973-273067cbc2ee", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(62, "c882a370-6713-4842-8973-273067cbc2ee", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(63, "7ded9ef9-5d13-4aa8-be67-3c3a82146da2", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(64, "7ded9ef9-5d13-4aa8-be67-3c3a82146da2", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(65, "419b7ae7-e003-4d5c-93d7-0ca10c52d933", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(66, "788badcb-ede4-4471-a015-9286ce0d602e", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(67, "97c81dfc-d814-42bb-a80a-25b35514615d", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(68, "97c81dfc-d814-42bb-a80a-25b35514615d", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(69, "12e0ed76-cbf5-4292-9108-67130ba41e36", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(70, "12e0ed76-cbf5-4292-9108-67130ba41e36", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(71, "788badcb-ede4-4471-a015-9286ce0d602e", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(72, "94d3b058-c41d-4b4d-9bab-5fa82e709a40", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(73, "17c93eac-849a-40f2-9180-3a8a5505eefa", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(74, "17c93eac-849a-40f2-9180-3a8a5505eefa", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(75, "24aea121-bf41-4b9f-93f6-497cb8e6eeae", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(76, "24aea121-bf41-4b9f-93f6-497cb8e6eeae", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(77, "94d3b058-c41d-4b4d-9bab-5fa82e709a40", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(78, "705c3f87-c325-48b0-a527-fec7d683175b", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(79, "20c4f78c-bf1c-4a5d-9dfd-c0c0341001da", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(80, "20c4f78c-bf1c-4a5d-9dfd-c0c0341001da", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(81, "9fa5f89f-5817-450f-a15b-2c6047d34371", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(82, "9fa5f89f-5817-450f-a15b-2c6047d34371", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(83, "705c3f87-c325-48b0-a527-fec7d683175b", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(84, "f5e249fb-e561-4e1e-b465-29efe4396232", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(85, "c977b30f-7474-4e60-b2a2-f42dc0f65d30", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(86, "c977b30f-7474-4e60-b2a2-f42dc0f65d30", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(87, "146ea40f-c643-42dc-b9e5-7dac9955941a", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(88, "146ea40f-c643-42dc-b9e5-7dac9955941a", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(89, "f5e249fb-e561-4e1e-b465-29efe4396232", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(90, "b49e0a74-e161-4b9e-97b3-be6bccdefc17", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(91, "e90247e1-9115-4249-9dff-de55e1c25dd1", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(92, "e90247e1-9115-4249-9dff-de55e1c25dd1", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(93, "ae9a1cc7-bcb5-46f3-a422-6b3b6f12a55b", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(94, "ae9a1cc7-bcb5-46f3-a422-6b3b6f12a55b", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(95, "b49e0a74-e161-4b9e-97b3-be6bccdefc17", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(96, "3f84502f-4c59-4053-b3b4-cd98bceb5aa0", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(97, "acd3c2d4-57f9-4ba9-8a17-0a1ff53d953b", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(98, "acd3c2d4-57f9-4ba9-8a17-0a1ff53d953b", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(99, "bac05c20-3400-4a91-a4a3-8a2c4a21da35", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(100, "bac05c20-3400-4a91-a4a3-8a2c4a21da35", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(101, "3f84502f-4c59-4053-b3b4-cd98bceb5aa0", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(102, "26614705-7e85-46b5-a0f4-6cab2f78e7d4", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(103, "4de747d3-ecc4-4b2a-8939-da7211805733", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(104, "4de747d3-ecc4-4b2a-8939-da7211805733", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(105, "6fec3daf-0cd1-4d65-ac27-fdfef564b830", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(106, "6fec3daf-0cd1-4d65-ac27-fdfef564b830", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(107, "26614705-7e85-46b5-a0f4-6cab2f78e7d4", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(108, "7718e7e6-e3f9-481f-965f-2508523fd177", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(109, "c28d00db-c7b6-4a7c-b352-9bb747a5261c", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(110, "c28d00db-c7b6-4a7c-b352-9bb747a5261c", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(111, "038f4782-16cb-4db5-8d48-8853d4c9ade8", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(112, "038f4782-16cb-4db5-8d48-8853d4c9ade8", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(113, "7718e7e6-e3f9-481f-965f-2508523fd177", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(114, "778e7ada-3599-4edd-a11d-7908de903d4a", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(115, "8f2cebb5-5c5e-4ed5-8b4a-408286ff7d95", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(116, "8f2cebb5-5c5e-4ed5-8b4a-408286ff7d95", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(117, "ab59a960-bfc7-4988-81a0-57cb0b1efe83", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(118, "ab59a960-bfc7-4988-81a0-57cb0b1efe83", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(119, "778e7ada-3599-4edd-a11d-7908de903d4a", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(120, "371f6bcd-2aa1-4600-a9a6-17d456854c6a", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(121, "dc756d9b-997c-4085-ab7e-9a43eefad675", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(122, "dc756d9b-997c-4085-ab7e-9a43eefad675", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(123, "bdb7053f-18ac-4cac-97bf-a774a77415a5", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(124, "bdb7053f-18ac-4cac-97bf-a774a77415a5", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(125, "371f6bcd-2aa1-4600-a9a6-17d456854c6a", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(126, "ad9fd4ec-633b-4e78-bae6-738400458e69", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(127, "ad9fd4ec-633b-4e78-bae6-738400458e69", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(128, "03a434db-c739-4162-981f-2bdc8db40e52", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(129, "03a434db-c739-4162-981f-2bdc8db40e52", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(130, "7fb4d9f3-5d2f-488e-a947-17dd2793239e", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(131, "7fb4d9f3-5d2f-488e-a947-17dd2793239e", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(132, "b470b70b-3699-44c8-a635-e59c5cbac3f5", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(133, "8644bd84-3b79-413e-9645-b0988028d9bb", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(134, "8644bd84-3b79-413e-9645-b0988028d9bb", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(135, "00000000-0000-0000-0000-000000000000", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(136, "00000000-0000-0000-0000-000000000000", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(137, "d7396b68-8fb9-41ef-87fc-6816c43a1e03", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(138, "d7396b68-8fb9-41ef-87fc-6816c43a1e03", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(139, "df3ffe97-ecf0-4252-aa47-9811e928499e", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(140, "df3ffe97-ecf0-4252-aa47-9811e928499e", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(141, "3282e9b0-7429-49d1-b0dc-9d81ceed1c6b", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(142, "3282e9b0-7429-49d1-b0dc-9d81ceed1c6b", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(143, "85b76039-5c37-40b6-ac0b-79dc1cbdfbfb", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(144, "85b76039-5c37-40b6-ac0b-79dc1cbdfbfb", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(145, "2394cfae-841a-4b71-93d7-267d42d51feb", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(146, "9572360b-8f62-4368-90c6-a11072ca3986", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(147, "9572360b-8f62-4368-90c6-a11072ca3986", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(148, "2448fb8c-c1d8-4bc9-9c52-7a86bab6da3e", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(149, "2448fb8c-c1d8-4bc9-9c52-7a86bab6da3e", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(150, "cf632aad-7095-41f2-b26d-83c7cdcecdbd", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(151, "cf632aad-7095-41f2-b26d-83c7cdcecdbd", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(152, "baf2043d-de23-493c-9add-dfdfa9e461d3", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(153, "baf2043d-de23-493c-9add-dfdfa9e461d3", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(154, "58ffcf2a-0354-4ae2-bd13-653bd09711e1", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(155, "58ffcf2a-0354-4ae2-bd13-653bd09711e1", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(156, "fd733c2a-2f5d-4b2a-957e-e5062b20116f", 6, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(157, "fd733c2a-2f5d-4b2a-957e-e5062b20116f", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(158, "2394cfae-841a-4b71-93d7-267d42d51feb", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(159, "b470b70b-3699-44c8-a635-e59c5cbac3f5", 6, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(160, "1109c81f-3a2b-40a7-a937-c9840aae793e", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(161, "52b7889d-f6f6-45e6-b45a-897927502b71", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(162, "52b7889d-f6f6-45e6-b45a-897927502b71", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(163, "09ccfd40-63ee-4701-835e-6742f5cde859", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(164, "aa1ddfa5-2306-48bb-ac50-da7519676840", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Scope),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Catch),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Catch),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Scope),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Call),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Terminate),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,3,3,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,23,24,24,25,25,25,160,24,161,161,162,163,163,164,3,3,3,3,};
        public static int[] __progressLocation2 = new int[] { 8,8,8,9,10,10,10,11,12,12,13,14,14,15,15,15,15,15,15,15,15,15,15,15,15,};
        public static int[] __progressLocation3 = new int[] { 17,17,18,18,19,19,19,19,19,19,19,19,19,19,19,19,22,22,};
        public static int[] __progressLocation4 = new int[] { 27,27,27,27,30,31,31,32,33,33,34,35,35,36,37,37,38,38,38,38,40,40,41,42,42,43,43,44,45,45,46,47,48,48,49,49,50,51,51,52,53,54,54,55,55,56,57,57,58,59,60,60,61,61,62,63,63,64,65,66,66,67,67,68,69,69,70,71,72,72,73,73,74,75,75,76,77,78,78,79,79,80,81,81,82,83,84,84,85,85,86,87,87,88,89,90,90,91,91,92,93,93,94,95,96,96,97,97,98,99,99,100,101,102,102,103,103,104,105,105,106,107,108,108,109,109,110,111,111,112,113,114,114,115,115,116,117,117,118,119,120,120,121,121,122,120,123,123,124,125,126,126,126,127,128,128,129,130,130,131,131,131,131,};
        public static int[] __progressLocation5 = new int[] { 0,0,0,0,0,0,0,};
        public static int[] __progressLocation6 = new int[] { 132,132,133,133,134,134,134,134,134,134,134,134,134,134,134,134,137,137,138,139,139,139,140,141,141,142,143,143,144,144,144,144,144,144,144,144,144,145,145,146,146,147,148,148,148,149,150,150,151,152,152,153,154,154,155,145,156,156,157,158,159,159,};

        public static int[][] __progressLocations = new int[7] [] {__progressLocation0,__progressLocation1,__progressLocation2,__progressLocation3,__progressLocation4,__progressLocation5,__progressLocation6};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)_stateMgrs[0];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                DLAPApplicationImport = new DLAPSingleApplicationImportPortType(0, this);
                OracleUpdateSubmittedApplicationsStatusPort = new OracleUpdateSubmittedApplicationsStatusPortType(2, this);
                RestApplicationQueryPort = new RestApplicationQueryPortType(1, this);
                RestEventRequestInfoPort = new RestEventRequestInfoPortType(3, this);
                __ctx__.PrologueCompleted = true;
                __ctx0__.__subWrapper0 = new Microsoft.XLANGs.Core.SubscriptionWrapper(ActivationSubGuids[0], DLAPApplicationImport, this);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __DLAP_Application_Import_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)_stateMgrs[0];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];
            ____scope36_2 __ctx2__ = (____scope36_2)_stateMgrs[2];
            ____scope37_3 __ctx3__ = (____scope37_3)_stateMgrs[3];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__OrchestrationInstanceID = default(System.Guid);
                __ctx1__.__Status = default(System.String);
                __ctx1__.__Stage = default(System.String);
                __ctx1__.__ApplicationNumber = default(System.String);
                __ctx1__.__SalesForceObjectName = default(System.String);
                __ctx1__.__SalesForceObjectID = default(System.String);
                __ctx1__.__Message = default(System.String);
                __ctx1__.__MessageTemplate = default(System.String);
                __ctx1__.__ProcessStep = default(System.String);
                __ctx1__.__ExceptionContainer = default(System.Exception);
                __ctx1__.__GetRecordTypeValues = default(DLAPApplicationImportRecordTypeValues.RecordTypeValues);
                __ctx1__.__InsuranceCount = default(System.Int32);
                __ctx1__.__MortgagesCount = default(System.Int32);
                __ctx1__.__AutoDeclineReason = default(System.String);
                __ctx1__.__OtherAssistanceCount = default(System.Int32);
                __ctx1__.__MessageTemp = default(System.String);
                __ctx1__.__APPLICATION_INFO_SOQL_QUERY = default(System.String);
                __ctx1__.__ApplicationNumberList = default(System.String);
                __ctx1__.__RestApplicationName = default(System.String);
                __ctx1__.__RestApplicationSFID = default(System.String);
                __ctx1__.__TotalSize = default(System.String);
                __ctx1__.__vApplicationFlag = default(System.Boolean);
                __ctx1__.__EVENTREQUEST_INFO_SOQL_QUERY = default(System.String);
                __ctx1__.__RestEventRequestName = default(System.String);
                __ctx1__.__RestEventRequestSFID = default(System.String);
                __ctx1__.__RestEventRequestTotalSize = default(System.String);
                __ctx1__.__vRestEventRequestFlag = default(System.Boolean);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[0],__eventData[0],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if (!DLAPApplicationImport.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx1__.__Application != null)
                    __ctx1__.UnrefMessage(__ctx1__.__Application);
                __ctx1__.__Application = new ApplicationMsgType("Application", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__Application);
                DLAPApplicationImport.ReceiveMessage(0, __msgEnv__, __ctx1__.__Application, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if (DLAPApplicationImport != null)
                {
                    DLAPApplicationImport.Close(__ctx1__, __seg__);
                    DLAPApplicationImport = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__Application);
                    __edata.PortName = @"DLAPApplicationImport";
                    Tracker.FireEvent(__eventLocations[2],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                __ctx1__.__Status = "";
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                __ctx1__.__Stage = "";
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                __ctx1__.__ApplicationNumber = "";
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                __ctx1__.__SalesForceObjectName = "";
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                __ctx1__.__SalesForceObjectID = "";
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                __ctx1__.__Message = "";
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                __ctx1__.__MessageTemplate = @"DLAP Application Import:\nThis application {0} {1} during the {2} Process Step.\n";
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                __ctx1__.__ProcessStep = "DLAP Application Import Initialization";
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                __ctx1__.__ExceptionContainer = new System.Exception();
                if ( !PostProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 14;
            case 14:
                __ctx1__.__GetRecordTypeValues = new DLAPApplicationImportRecordTypeValues.RecordTypeValues();
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                __ctx1__.__AutoDeclineReason = "";
                if ( !PostProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 16;
            case 16:
                __ctx1__.__MessageTemp = "";
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                __ctx1__.__APPLICATION_INFO_SOQL_QUERY = "";
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                __ctx1__.__ApplicationNumberList = "";
                if ( !PostProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 19;
            case 19:
                __ctx1__.__RestApplicationName = "";
                if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 20;
            case 20:
                __ctx1__.__RestApplicationSFID = "";
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                __ctx1__.__TotalSize = "";
                if ( !PostProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 22;
            case 22:
                __ctx1__.__vApplicationFlag = true;
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __ctx1__.__EVENTREQUEST_INFO_SOQL_QUERY = "";
                if ( !PostProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 24;
            case 24:
                __ctx1__.__RestEventRequestName = "";
                if ( !PostProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 25;
            case 25:
                __ctx1__.__RestEventRequestSFID = "";
                if ( !PostProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 26;
            case 26:
                __ctx1__.__RestEventRequestTotalSize = "";
                if ( !PostProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 27;
            case 27:
                __ctx1__.__vRestEventRequestFlag = true;
                if ( !PostProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 28;
            case 28:
                if ( !PreProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 29;
            case 29:
                __ctx1__.__Status = "Success";
                if ( !PostProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 30;
            case 30:
                if ( !PreProgressInc( __seg__, __ctx__, 31 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 31;
            case 31:
                __ctx1__.__SalesForceObjectName = "Application";
                if ( !PostProgressInc( __seg__, __ctx__, 32 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 32;
            case 32:
                if ( !PreProgressInc( __seg__, __ctx__, 33 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[0],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 33;
            case 33:
                __condition__ = !System.String.IsNullOrEmpty((System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_ELA_REFERENCE_NBR"));
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 35 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 35;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 34 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 34;
            case 34:
                __ctx1__.__ApplicationNumber = (System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_ELA_REFERENCE_NBR");
                if ( !PostProgressInc( __seg__, __ctx__, 35 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 35;
            case 35:
                if ( !PreProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[3],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 36;
            case 36:
                if ( !PreProgressInc( __seg__, __ctx__, 37 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[0],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 37;
            case 37:
                __condition__ = (!System.String.IsNullOrEmpty((System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_SUMMARY_DECLINE_CODE"))) && ((System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_SUMMARY_DECLINE_CODE") != "PASS");
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 42 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 42;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 38 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 38;
            case 38:
                __ctx1__.__Stage = "Received Application Summary Decline";
                if ( !PostProgressInc( __seg__, __ctx__, 39 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 39;
            case 39:
                __ctx1__.__Message = (System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_SUMMARY_DECLINE_CODE");
                if ( !PostProgressInc( __seg__, __ctx__, 40 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 40;
            case 40:
                __ctx1__.__AutoDeclineReason = (System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_SUMMARY_DECLINE_CODE");
                if ( !PostProgressInc( __seg__, __ctx__, 41 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 41;
            case 41:
                if ( !PostProgressInc( __seg__, __ctx__, 44 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 44;
            case 42:
                __ctx1__.__Stage = "Received Application";
                if ( !PostProgressInc( __seg__, __ctx__, 43 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 43;
            case 43:
                __ctx1__.__Message = "DLAP Application Import, Application has been successfully submitted to SalesForce";
                if ( !PostProgressInc( __seg__, __ctx__, 44 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 44;
            case 44:
                if ( !PreProgressInc( __seg__, __ctx__, 45 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[3],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 45;
            case 45:
                __ctx1__.__OrchestrationInstanceID = Microsoft.XLANGs.Core.Service.RootService.InstanceId;
                if ( !PostProgressInc( __seg__, __ctx__, 46 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 46;
            case 46:
                __ctx1__.__GetRecordTypeValues = new DLAPApplicationImportRecordTypeValues.RecordTypeValues();
                if ( !PostProgressInc( __seg__, __ctx__, 47 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 47;
            case 47:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import Successfully Poll the Application - " + __ctx1__.__ApplicationNumber, "   " + __ctx1__.__ApplicationNumber);
                if ( !PostProgressInc( __seg__, __ctx__, 48 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 48;
            case 48:
                if ( !PreProgressInc( __seg__, __ctx__, 49 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 49;
            case 49:
                __ctx2__ = new ____scope36_2(this);
                _stateMgrs[2] = __ctx2__;
                if ( !PostProgressInc( __seg__, __ctx__, 50 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 50;
            case 50:
                __ctx1__.StartContext(__seg__, __ctx2__);
                if ( !PostProgressInc( __seg__, __ctx__, 51 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 51:
                if ( !PreProgressInc( __seg__, __ctx__, 52 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__TotalSize = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestApplicationSFID = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestApplicationName = null;
                if (__ctx1__ != null)
                    __ctx1__.__APPLICATION_INFO_SOQL_QUERY = null;
                if (RestApplicationQueryPort != null)
                {
                    RestApplicationQueryPort.Close(__ctx1__, __seg__);
                    RestApplicationQueryPort = null;
                }
                Tracker.FireEvent(__eventLocations[23],__eventData[11],_stateMgrs[1].TrackDataStream );
                __ctx2__.Finally();
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 52;
            case 52:
                if ( !PreProgressInc( __seg__, __ctx__, 53 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[24],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 53;
            case 53:
                __condition__ = __ctx1__.__vApplicationFlag;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 59 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 59;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 54 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 54;
            case 54:
                if ( !PreProgressInc( __seg__, __ctx__, 55 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[25],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 55;
            case 55:
                __ctx3__ = new ____scope37_3(this);
                _stateMgrs[3] = __ctx3__;
                if ( !PostProgressInc( __seg__, __ctx__, 56 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 56;
            case 56:
                __ctx1__.StartContext(__seg__, __ctx3__);
                if ( !PostProgressInc( __seg__, __ctx__, 57 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 57:
                if ( !PreProgressInc( __seg__, __ctx__, 58 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg = null;
                }
                Tracker.FireEvent(__eventLocations[160],__eventData[11],_stateMgrs[1].TrackDataStream );
                __ctx3__.Finally();
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 58;
            case 58:
                if ( !PostProgressInc( __seg__, __ctx__, 64 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 64;
            case 59:
                if ( !PreProgressInc( __seg__, __ctx__, 60 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[161],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 60;
            case 60:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import - Duplicate Application Warning", "Application Exists in the Salesforce - " + __ctx1__.__ApplicationNumber, System.Diagnostics.EventLogEntryType.Warning);
                if ( !PostProgressInc( __seg__, __ctx__, 61 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 61;
            case 61:
                if ( !PreProgressInc( __seg__, __ctx__, 62 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[162],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 62;
            case 62:
                if ( !PreProgressInc( __seg__, __ctx__, 63 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[163],__eventData[14],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 63;
            case 63:
                RequestTerminate(__ctx1__,"Duplicate Application Exists in the Salesforce");
                __seg__.SegmentDone();
                break;
            case 64:
                if ( !PreProgressInc( __seg__, __ctx__, 65 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__RestEventRequestTotalSize = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestEventRequestSFID = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestEventRequestName = null;
                if (__ctx1__ != null)
                    __ctx1__.__EVENTREQUEST_INFO_SOQL_QUERY = null;
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationNumberList = null;
                if (__ctx1__ != null)
                    __ctx1__.__MessageTemp = null;
                if (__ctx1__ != null)
                    __ctx1__.__AutoDeclineReason = null;
                if (__ctx1__ != null)
                    __ctx1__.__GetRecordTypeValues = null;
                if (__ctx1__ != null)
                    __ctx1__.__ExceptionContainer = null;
                if (__ctx1__ != null)
                    __ctx1__.__ProcessStep = null;
                if (__ctx1__ != null)
                    __ctx1__.__MessageTemplate = null;
                if (__ctx1__ != null)
                    __ctx1__.__Message = null;
                if (__ctx1__ != null)
                    __ctx1__.__SalesForceObjectID = null;
                if (__ctx1__ != null)
                    __ctx1__.__SalesForceObjectName = null;
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationNumber = null;
                if (__ctx1__ != null)
                    __ctx1__.__Stage = null;
                if (__ctx1__ != null)
                    __ctx1__.__Status = null;
                if (__ctx1__ != null && __ctx1__.__Application != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__Application);
                    __ctx1__.__Application = null;
                }
                if (RestEventRequestInfoPort != null)
                {
                    RestEventRequestInfoPort.Close(__ctx1__, __seg__);
                    RestEventRequestInfoPort = null;
                }
                if (OracleUpdateSubmittedApplicationsStatusPort != null)
                {
                    OracleUpdateSubmittedApplicationsStatusPort.Close(__ctx1__, __seg__);
                    OracleUpdateSubmittedApplicationsStatusPort = null;
                }
                Tracker.FireEvent(__eventLocations[164],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 65;
            case 65:
                if ( !PreProgressInc( __seg__, __ctx__, 66 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[3],__eventData[15],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 66;
            case 66:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 67 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 67;
            case 67:
                if ( !PreProgressInc( __seg__, __ctx__, 68 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 68;
            case 68:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment2(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[2];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[2];
            __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)_stateMgrs[0];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];
            ____scope36_2 __ctx2__ = (____scope36_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[7],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                {
                    RestApplicationQueryRequestType __RestApplicationQueryRequestMsg = new RestApplicationQueryRequestType("RestApplicationQueryRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeRestApplicationInfoRequest), new object[] {__RestApplicationQueryRequestMsg.MessagePart}, new object[] {__ctx1__.__Application.Application});
                    __ctx1__.__ApplicationNumberList = (System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_ELA_REFERENCE_NBR");
                    __ctx1__.__APPLICATION_INFO_SOQL_QUERY = @"Select Id, Name FROM Application__c WHERE Name IN " + "('" + __ctx1__.__ApplicationNumberList + "') AND Name != NULL";
                    __RestApplicationQueryRequestMsg.SetPropertyValue(typeof(Salesforce_Application_Import_Definition.Application__c.RestApplication__c.SOQL_APPLICATION_INFO_QUERY), __ctx1__.__APPLICATION_INFO_SOQL_QUERY);

                    if (__ctx1__.__RestApplicationQueryRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__RestApplicationQueryRequestMsg);
                    __ctx1__.__RestApplicationQueryRequestMsg = __RestApplicationQueryRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__RestApplicationQueryRequestMsg);
                }
                __ctx1__.__RestApplicationQueryRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__RestApplicationQueryRequestMsg);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[9],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[10],__eventData[8],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                if (!__ctx2__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                RestApplicationQueryPort.SendMessage(0, __ctx1__.__RestApplicationQueryRequestMsg, null, null, out __ctx0__.__subWrapper1, __ctx2__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 7;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__RestApplicationQueryRequestMsg);
                    __edata.PortName = @"RestApplicationQueryPort";
                    Tracker.FireEvent(__eventLocations[11],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__RestApplicationQueryRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestApplicationQueryRequestMsg);
                    __ctx1__.__RestApplicationQueryRequestMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[12],__eventData[1],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if (!RestApplicationQueryPort.GetMessageId(__ctx0__.__subWrapper1.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper1 != null)
                {
                    __ctx0__.__subWrapper1.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper1 = null;
                }
                if (__ctx1__.__RestApplicationQueryResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__RestApplicationQueryResponseMsg);
                __ctx1__.__RestApplicationQueryResponseMsg = new RestApplicationQueryResponseType("RestApplicationQueryResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__RestApplicationQueryResponseMsg);
                RestApplicationQueryPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__RestApplicationQueryResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[2], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__RestApplicationQueryResponseMsg);
                    __edata.PortName = @"RestApplicationQueryPort";
                    Tracker.FireEvent(__eventLocations[13],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[14],__eventData[2],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                __ctx1__.__RestApplicationName = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestApplicationQueryResponseMsg.MessagePart, "string(/*[local-name()='QueryResult' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application']/*[local-name()='records' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application']/*[local-name()='Name' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application'])", typeof(System.String));
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[15],__eventData[3],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                __ctx1__.__RestApplicationSFID = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestApplicationQueryResponseMsg.MessagePart, "string(/*[local-name()='QueryResult' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application']/*[local-name()='records' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application']/*[local-name()='Id' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application'])", typeof(System.String));
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                __ctx1__.__TotalSize = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestApplicationQueryResponseMsg.MessagePart, "string(/*[local-name()='QueryResult' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application']/*[local-name()='totalSize' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/Application'])", typeof(System.String));
                if (__ctx1__ != null && __ctx1__.__RestApplicationQueryResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestApplicationQueryResponseMsg);
                    __ctx1__.__RestApplicationQueryResponseMsg = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[4],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                __condition__ = ((!System.String.IsNullOrWhiteSpace(__ctx1__.__RestApplicationName)) && (!System.String.IsNullOrWhiteSpace(__ctx1__.__RestApplicationSFID))) && (System.Convert.ToInt32(__ctx1__.__TotalSize) != 0);
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 20;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                __ctx1__.__vApplicationFlag = false;
                if ( !PostProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 19;
            case 19:
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 20:
                __ctx1__.__vApplicationFlag = true;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[16],__eventData[5],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 22;
            case 22:
                if (!__ctx2__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                if ( !PreProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx2__.OnCommit();
                goto case 24;
            case 24:
                __seg__.SegmentDone();
                _segments[1].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment3(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[3];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[2];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];
            ____scope36_2 __ctx2__ = (____scope36_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                OnBeginCatchHandler(2);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[17],__eventData[9],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[18],__eventData[2],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __ctx1__.__vApplicationFlag = true;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[19],__eventData[3],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                __ctx1__.__ExceptionContainer = __ctx2__.__DEx_0;
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[20],__eventData[4],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __condition__ = __ctx2__.__DEx_0.InnerException != null;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 12;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                __ctx1__.__MessageTemp = __ctx1__.__ProcessStep + " - " + __ctx2__.__DEx_0.InnerException.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                __ctx1__.__Message = __ctx1__.__MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000U, __ctx1__.__MessageTemp.Length))) + "Total Error String Length:" + __ctx1__.__MessageTemp.Length.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import - BizTalk Application Duplicate Validation Exception", "Application Processing will continue... " + __ctx2__.__DEx_0.Message, System.Diagnostics.EventLogEntryType.Error);
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 12:
                __ctx1__.__MessageTemp = __ctx1__.__ProcessStep + " - " + __ctx2__.__DEx_0.Message.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                __ctx1__.__Message = __ctx1__.__MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000U, __ctx1__.__MessageTemp.Length))) + "Total Error String Length:" + __ctx1__.__MessageTemp.Length.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 14;
            case 14:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import - BizTalk Application Duplicate Validation Exception", "Application Processing will continue... " + __ctx2__.__DEx_0.Message, System.Diagnostics.EventLogEntryType.Error);
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx2__ != null)
                    __ctx2__.__DEx_0 = null;
                Tracker.FireEvent(__eventLocations[21],__eventData[5],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[22],__eventData[10],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                __ctx2__.__exv__ = null;
                OnEndCatchHandler(2, __seg__);
                __seg__.SegmentDone();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment4(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[4];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[3];
            __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)_stateMgrs[0];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];
            ____scope37_3 __ctx3__ = (____scope37_3)_stateMgrs[3];
            ____scope38_4 __ctx4__ = (____scope38_4)_stateMgrs[4];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[27],__eventData[6],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                __ctx4__ = new ____scope38_4(this);
                _stateMgrs[4] = __ctx4__;
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 3;
            case 3:
                __ctx3__.StartContext(__seg__, __ctx4__);
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[30],__eventData[11],_stateMgrs[3].TrackDataStream );
                __ctx4__.Finally();
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[31],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                __ctx1__.__ProcessStep = "Map to Canonical";
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[32],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[33],__eventData[7],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonicalMsg = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonicalMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeCanonicalApplication), new object[] {__ApplicationCanonicalMsg.part}, new object[] {__ctx1__.__Application.Application});
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("OrchestrationID", Microsoft.XLANGs.Core.Service.RootService.InstanceId.ToString());
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_Business_Loan_Application", __ctx1__.__GetRecordTypeValues.Business_Loan_Application);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_EIDL_Application", __ctx1__.__GetRecordTypeValues.EIDL_Application);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_Home_Loan_Application", __ctx1__.__GetRecordTypeValues.Home_Loan_Application);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_New_Read_Only_Application", __ctx1__.__GetRecordTypeValues.New_Read_Only_Application);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_Default_Applicant", __ctx1__.__GetRecordTypeValues.Default_Applicant);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_New_Read_Only_Applicant", __ctx1__.__GetRecordTypeValues.New_Read_Only_Applicant);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_Affiliate_Applicant", __ctx1__.__GetRecordTypeValues.Affiliate_Applicant);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_Business_Entity_Applicant", __ctx1__.__GetRecordTypeValues.Business_Entity_Applicant);
                    __ApplicationCanonicalMsg.part.SetDistinguishedField("Record_SF_Business_Owner_Applicant", __ctx1__.__GetRecordTypeValues.Business_Owner_Applicant);

                    if (__ctx1__.__ApplicationCanonicalMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonicalMsg);
                    __ctx1__.__ApplicationCanonicalMsg = __ApplicationCanonicalMsg;
                    __ctx1__.RefMessage(__ctx1__.__ApplicationCanonicalMsg);
                }
                __ctx1__.__ApplicationCanonicalMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[34],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[35],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                __ctx1__.__SalesForceObjectID = (System.String)__ctx1__.__ApplicationCanonicalMsg.part.GetDistinguishedField("SalesForceApplication__cID");
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[36],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[37],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                __ctx1__.__ProcessStep = "Calling Application create";
                if ( !PostProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[38],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                __ctx1__.__InsuranceCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__ApplicationCanonicalMsg.part, "count(/*[local-name()='Application' and namespace-uri()='http://SBA.ODA.Gov/CanonicalApplication']/*[local-name()='DmgPropertyColl' and namespace-uri()='']/*[local-name()='Dmg_Properties' and namespace-uri()='']/*[local-name()='DpoInsuranceColl' and namespace-uri()='']/*[local-name()='Dpo_Insurances' and namespace-uri()=''])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                __ctx1__.__MortgagesCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__ApplicationCanonicalMsg.part, "count(/*[local-name()='Application' and namespace-uri()='http://SBA.ODA.Gov/CanonicalApplication']/*[local-name()='Debts' and namespace-uri()='']/*[local-name()='MortgageColl' and namespace-uri()='']/*[local-name()='ARE_Mortgages' and namespace-uri()=''])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 19;
            case 19:
                __ctx1__.__OtherAssistanceCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__ApplicationCanonicalMsg.part, "count(/*[local-name()='Application' and namespace-uri()='http://SBA.ODA.Gov/CanonicalApplication']/*[local-name()='DpoDupBenefitColl' and namespace-uri()='']/*[local-name()='Dpo_DupBenefits' and namespace-uri()=''])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 20;
            case 20:
                if ( !PreProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[40],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 21;
            case 21:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceApplication__c(5, InstanceId, this);
                    _stateMgrs[5] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[40],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg), __ctx1__.__Status, __ctx1__.__Message});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[5]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                    __ctx1__.__Status = (System.String)args[1];
                    __ctx1__.__Message = (System.String)args[2];
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[41],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                if ( !PreProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[42],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 24;
            case 24:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 31 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 31;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 25;
            case 25:
                if ( !PreProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[43],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 26;
            case 26:
                __ctx1__.__ProcessStep = "Call Addtional Contact";
                if ( !PostProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 27;
            case 27:
                if ( !PreProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[44],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 28;
            case 28:
                if ( !PreProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[45],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 29;
            case 29:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallAddtionalContact(6, InstanceId, this);
                    _stateMgrs[6] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[45],new object[] {__ctx1__.__ApplicationCanonicalMsg});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 30:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[6]).Args;
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[46],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 31 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 31;
            case 31:
                if ( !PreProgressInc( __seg__, __ctx__, 32 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[47],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 32;
            case 32:
                if ( !PreProgressInc( __seg__, __ctx__, 33 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[48],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 33;
            case 33:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 40 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 40;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 34 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 34;
            case 34:
                if ( !PreProgressInc( __seg__, __ctx__, 35 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[49],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 35;
            case 35:
                __ctx1__.__ProcessStep = "Call Account create";
                if ( !PostProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 36;
            case 36:
                if ( !PreProgressInc( __seg__, __ctx__, 37 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[50],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 37;
            case 37:
                if ( !PreProgressInc( __seg__, __ctx__, 38 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[51],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 38;
            case 38:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesforceAccount(7, InstanceId, this);
                    _stateMgrs[7] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[51],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 39 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 39:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[7]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[52],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 40 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 40;
            case 40:
                if ( !PreProgressInc( __seg__, __ctx__, 41 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[53],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 41;
            case 41:
                if ( !PreProgressInc( __seg__, __ctx__, 42 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[54],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 42;
            case 42:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 49 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 49;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 43 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 43;
            case 43:
                if ( !PreProgressInc( __seg__, __ctx__, 44 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[55],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 44;
            case 44:
                __ctx1__.__ProcessStep = "Call Property create";
                if ( !PostProgressInc( __seg__, __ctx__, 45 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 45;
            case 45:
                if ( !PreProgressInc( __seg__, __ctx__, 46 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[56],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 46;
            case 46:
                if ( !PreProgressInc( __seg__, __ctx__, 47 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[57],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 47;
            case 47:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceProperty__c(8, InstanceId, this);
                    _stateMgrs[8] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[57],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 48 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 48:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[8]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[58],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 49 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 49;
            case 49:
                if ( !PreProgressInc( __seg__, __ctx__, 50 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[59],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 50;
            case 50:
                if ( !PreProgressInc( __seg__, __ctx__, 51 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[60],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 51;
            case 51:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 58 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 58;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 52 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 52;
            case 52:
                if ( !PreProgressInc( __seg__, __ctx__, 53 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[61],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 53;
            case 53:
                __ctx1__.__ProcessStep = "Call Contact create";
                if ( !PostProgressInc( __seg__, __ctx__, 54 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 54;
            case 54:
                if ( !PreProgressInc( __seg__, __ctx__, 55 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[62],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 55;
            case 55:
                if ( !PreProgressInc( __seg__, __ctx__, 56 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[63],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 56;
            case 56:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceContact(9, InstanceId, this);
                    _stateMgrs[9] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[63],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 57 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 57:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[9]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[64],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 58 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 58;
            case 58:
                if ( !PreProgressInc( __seg__, __ctx__, 59 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[65],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 59;
            case 59:
                if ( !PreProgressInc( __seg__, __ctx__, 60 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[66],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 60;
            case 60:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 67 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 67;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 61 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 61;
            case 61:
                if ( !PreProgressInc( __seg__, __ctx__, 62 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[67],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 62;
            case 62:
                __ctx1__.__ProcessStep = "Call Applicant create";
                if ( !PostProgressInc( __seg__, __ctx__, 63 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 63;
            case 63:
                if ( !PreProgressInc( __seg__, __ctx__, 64 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[68],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 64;
            case 64:
                if ( !PreProgressInc( __seg__, __ctx__, 65 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[69],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 65;
            case 65:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceApplicant(10, InstanceId, this);
                    _stateMgrs[10] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[69],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 66 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 66:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[10]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[70],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 67 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 67;
            case 67:
                if ( !PreProgressInc( __seg__, __ctx__, 68 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[71],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 68;
            case 68:
                if ( !PreProgressInc( __seg__, __ctx__, 69 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[72],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 69;
            case 69:
                __condition__ = __ctx1__.__Status == "Success" && __ctx1__.__InsuranceCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 76 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 76;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 70 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 70;
            case 70:
                if ( !PreProgressInc( __seg__, __ctx__, 71 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[73],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 71;
            case 71:
                __ctx1__.__ProcessStep = "Call Insurance create";
                if ( !PostProgressInc( __seg__, __ctx__, 72 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 72;
            case 72:
                if ( !PreProgressInc( __seg__, __ctx__, 73 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[74],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 73;
            case 73:
                if ( !PreProgressInc( __seg__, __ctx__, 74 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[75],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 74;
            case 74:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceInsurance(11, InstanceId, this);
                    _stateMgrs[11] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[75],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 75 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 75:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[11]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[76],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 76 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 76;
            case 76:
                if ( !PreProgressInc( __seg__, __ctx__, 77 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[77],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 77;
            case 77:
                if ( !PreProgressInc( __seg__, __ctx__, 78 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[78],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 78;
            case 78:
                __condition__ = __ctx1__.__Status == "Success" && __ctx1__.__OtherAssistanceCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 85 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 85;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 79 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 79;
            case 79:
                if ( !PreProgressInc( __seg__, __ctx__, 80 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[79],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 80;
            case 80:
                __ctx1__.__ProcessStep = "Call Other Assistance create";
                if ( !PostProgressInc( __seg__, __ctx__, 81 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 81;
            case 81:
                if ( !PreProgressInc( __seg__, __ctx__, 82 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[80],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 82;
            case 82:
                if ( !PreProgressInc( __seg__, __ctx__, 83 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[81],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 83;
            case 83:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesforceOther_Assistance__c(12, InstanceId, this);
                    _stateMgrs[12] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[81],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 84 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 84:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[12]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[82],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 85 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 85;
            case 85:
                if ( !PreProgressInc( __seg__, __ctx__, 86 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[83],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 86;
            case 86:
                if ( !PreProgressInc( __seg__, __ctx__, 87 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[84],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 87;
            case 87:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 94 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 94;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 88 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 88;
            case 88:
                if ( !PreProgressInc( __seg__, __ctx__, 89 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[85],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 89;
            case 89:
                __ctx1__.__ProcessStep = "Call Insurance create";
                if ( !PostProgressInc( __seg__, __ctx__, 90 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 90;
            case 90:
                if ( !PreProgressInc( __seg__, __ctx__, 91 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[86],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 91;
            case 91:
                if ( !PreProgressInc( __seg__, __ctx__, 92 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[87],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 92;
            case 92:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceAssetIncomes(13, InstanceId, this);
                    _stateMgrs[13] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[87],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 93 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 93:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[13]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[88],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 94 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 94;
            case 94:
                if ( !PreProgressInc( __seg__, __ctx__, 95 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[89],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 95;
            case 95:
                if ( !PreProgressInc( __seg__, __ctx__, 96 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[90],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 96;
            case 96:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 103 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 103;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 97 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 97;
            case 97:
                if ( !PreProgressInc( __seg__, __ctx__, 98 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[91],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 98;
            case 98:
                __ctx1__.__ProcessStep = "Call Debts and Expenses create";
                if ( !PostProgressInc( __seg__, __ctx__, 99 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 99;
            case 99:
                if ( !PreProgressInc( __seg__, __ctx__, 100 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[92],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 100;
            case 100:
                if ( !PreProgressInc( __seg__, __ctx__, 101 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[93],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 101;
            case 101:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceDebts_Expenses__c(14, InstanceId, this);
                    _stateMgrs[14] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[93],new object[] {__ctx1__.__ApplicationCanonicalMsg});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 102 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 102:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[14]).Args;
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[94],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 103 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 103;
            case 103:
                if ( !PreProgressInc( __seg__, __ctx__, 104 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[95],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 104;
            case 104:
                if ( !PreProgressInc( __seg__, __ctx__, 105 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[96],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 105;
            case 105:
                __condition__ = __ctx1__.__Status == "Success" && __ctx1__.__MortgagesCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 112 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 112;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 106 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 106;
            case 106:
                if ( !PreProgressInc( __seg__, __ctx__, 107 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[97],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 107;
            case 107:
                __ctx1__.__ProcessStep = "Call Mortage create";
                if ( !PostProgressInc( __seg__, __ctx__, 108 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 108;
            case 108:
                if ( !PreProgressInc( __seg__, __ctx__, 109 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[98],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 109;
            case 109:
                if ( !PreProgressInc( __seg__, __ctx__, 110 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[99],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 110;
            case 110:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceMortgage__c(15, InstanceId, this);
                    _stateMgrs[15] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[99],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 111 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 111:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[15]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[100],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 112 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 112;
            case 112:
                if ( !PreProgressInc( __seg__, __ctx__, 113 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[101],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 113;
            case 113:
                if ( !PreProgressInc( __seg__, __ctx__, 114 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[102],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 114;
            case 114:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 121 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 121;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 115 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 115;
            case 115:
                if ( !PreProgressInc( __seg__, __ctx__, 116 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[103],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 116;
            case 116:
                __ctx1__.__ProcessStep = "Call IRS Transcipts create";
                if ( !PostProgressInc( __seg__, __ctx__, 117 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 117;
            case 117:
                if ( !PreProgressInc( __seg__, __ctx__, 118 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[104],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 118;
            case 118:
                if ( !PreProgressInc( __seg__, __ctx__, 119 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[105],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 119;
            case 119:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceIRS_Transcripts__c(16, InstanceId, this);
                    _stateMgrs[16] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[105],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 120 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 120:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[16]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[106],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 121 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 121;
            case 121:
                if ( !PreProgressInc( __seg__, __ctx__, 122 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[107],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 122;
            case 122:
                if ( !PreProgressInc( __seg__, __ctx__, 123 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[108],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 123;
            case 123:
                __condition__ = ((!System.String.IsNullOrEmpty((System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_SUMMARY_DECLINE_CODE"))) && ((System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_SUMMARY_DECLINE_CODE") != "PASS"));
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 130 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 130;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 124 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 124;
            case 124:
                if ( !PreProgressInc( __seg__, __ctx__, 125 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[109],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 125;
            case 125:
                __ctx1__.__ProcessStep = "Call Decline Withdrawal Code create";
                if ( !PostProgressInc( __seg__, __ctx__, 126 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 126;
            case 126:
                if ( !PreProgressInc( __seg__, __ctx__, 127 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[110],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 127;
            case 127:
                if ( !PreProgressInc( __seg__, __ctx__, 128 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[111],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 128;
            case 128:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.CallSalesForceDecline_Withdrawal_Code__c(17, InstanceId, this);
                    _stateMgrs[17] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[111],new object[] {new Microsoft.XLANGs.Core.MessageTuple((Microsoft.XLANGs.Core.Context)_stateMgrs[1], __ctx1__.__ApplicationCanonicalMsg)});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 129 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 129:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[17]).Args;
                    __ctx1__.__ApplicationCanonicalMsg = (__messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical)((Microsoft.XLANGs.Core.MessageTuple)(args[0])).message;
                    __ctx1__.__ApplicationCanonicalMsg.MessageName = "ApplicationCanonicalMsg";
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[112],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 130 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 130;
            case 130:
                if ( !PreProgressInc( __seg__, __ctx__, 131 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[113],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 131;
            case 131:
                if ( !PreProgressInc( __seg__, __ctx__, 132 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[114],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 132;
            case 132:
                __condition__ = __ctx1__.__Status == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 139 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 139;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 133 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 133;
            case 133:
                if ( !PreProgressInc( __seg__, __ctx__, 134 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[115],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 134;
            case 134:
                __ctx1__.__ProcessStep = "Call Document Coordinator";
                if ( !PostProgressInc( __seg__, __ctx__, 135 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 135;
            case 135:
                if ( !PreProgressInc( __seg__, __ctx__, 136 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[116],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 136;
            case 136:
                if ( !PreProgressInc( __seg__, __ctx__, 137 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[117],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 137;
            case 137:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.DocumentCoordinatorLogic(18, InstanceId, this);
                    _stateMgrs[18] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[117],new object[] {__ctx1__.__ApplicationCanonicalMsg});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 138 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 138:
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[18]).Args;
                }
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Call);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonicalMsg);
                    Tracker.FireEvent(__eventLocations[118],__edata,_stateMgrs[3].TrackDataStream );
                }
                if ( !PostProgressInc( __seg__, __ctx__, 139 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 139;
            case 139:
                if ( !PreProgressInc( __seg__, __ctx__, 140 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonicalMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonicalMsg);
                    __ctx1__.__ApplicationCanonicalMsg = null;
                }
                Tracker.FireEvent(__eventLocations[119],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 140;
            case 140:
                if ( !PreProgressInc( __seg__, __ctx__, 141 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[120],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 141;
            case 141:
                __condition__ = (__ctx1__.__Status == "Success") && (__ctx1__.__Status != "Failure");
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 146 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 146;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 142 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 142;
            case 142:
                if ( !PreProgressInc( __seg__, __ctx__, 143 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[121],__eventData[7],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 143;
            case 143:
                {
                    OracleUpdateSubmittedApplicationsStatusRequestType __OracleUpdateSubmittedApplicationsStatusRequestMsg = new OracleUpdateSubmittedApplicationsStatusRequestType("OracleUpdateSubmittedApplicationsStatusRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeOracleSuccessStatusRequest), new object[] {__OracleUpdateSubmittedApplicationsStatusRequestMsg.MessagePart}, new object[] {__ctx1__.__Application.Application});

                    if (__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg = __OracleUpdateSubmittedApplicationsStatusRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                }
                __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 144 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 144;
            case 144:
                if ( !PreProgressInc( __seg__, __ctx__, 145 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[122],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 145;
            case 145:
                if ( !PostProgressInc( __seg__, __ctx__, 149 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 149;
            case 146:
                if ( !PreProgressInc( __seg__, __ctx__, 147 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[123],__eventData[7],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 147;
            case 147:
                {
                    OracleUpdateSubmittedApplicationsStatusRequestType __OracleUpdateSubmittedApplicationsStatusRequestMsg = new OracleUpdateSubmittedApplicationsStatusRequestType("OracleUpdateSubmittedApplicationsStatusRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeOracleErrorStatusRequest), new object[] {__OracleUpdateSubmittedApplicationsStatusRequestMsg.MessagePart}, new object[] {__ctx1__.__Application.Application});

                    if (__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg = __OracleUpdateSubmittedApplicationsStatusRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                }
                __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 148 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 148;
            case 148:
                if ( !PreProgressInc( __seg__, __ctx__, 149 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[124],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 149;
            case 149:
                if ( !PreProgressInc( __seg__, __ctx__, 150 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[125],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 150;
            case 150:
                if ( !PreProgressInc( __seg__, __ctx__, 151 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[126],__eventData[8],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 151;
            case 151:
                if (!__ctx3__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 152 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 152;
            case 152:
                if ( !PreProgressInc( __seg__, __ctx__, 153 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                OracleUpdateSubmittedApplicationsStatusPort.SendMessage(0, __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg, null, null, out __ctx0__.__subWrapper2, __ctx3__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 153;
            case 153:
                if ( !PreProgressInc( __seg__, __ctx__, 154 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __edata.PortName = @"OracleUpdateSubmittedApplicationsStatusPort";
                    Tracker.FireEvent(__eventLocations[127],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 154;
            case 154:
                if ( !PreProgressInc( __seg__, __ctx__, 155 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[128],__eventData[1],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 155;
            case 155:
                if (!OracleUpdateSubmittedApplicationsStatusPort.GetMessageId(__ctx0__.__subWrapper2.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[1]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper2 != null)
                {
                    __ctx0__.__subWrapper2.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper2 = null;
                }
                if (__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg = new OracleUpdateSubmittedApplicationsStatusResponseType("OracleUpdateSubmittedApplicationsStatusResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                OracleUpdateSubmittedApplicationsStatusPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[3], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 156 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 156;
            case 156:
                if ( !PreProgressInc( __seg__, __ctx__, 157 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                    __edata.PortName = @"OracleUpdateSubmittedApplicationsStatusPort";
                    Tracker.FireEvent(__eventLocations[129],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 157;
            case 157:
                if ( !PreProgressInc( __seg__, __ctx__, 158 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[130],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 158;
            case 158:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.Call_Event_Request__c(19, InstanceId, this);
                    _stateMgrs[19] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[130],new object[] {__ctx1__.__ApplicationNumber, __ctx1__.__SalesForceObjectID, __ctx1__.__Message, __ctx1__.__SalesForceObjectName, __ctx1__.__Stage, __ctx1__.__Status, __ctx1__.__AutoDeclineReason, __ctx1__.__OrchestrationInstanceID});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 159 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 159:
                if ( !PreProgressInc( __seg__, __ctx__, 160 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[19]).Args;
                }
                Tracker.FireEvent(__eventLocations[131],__eventData[13],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 160;
            case 160:
                if (!__ctx3__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 161 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 161;
            case 161:
                if ( !PreProgressInc( __seg__, __ctx__, 162 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx3__.OnCommit();
                goto case 162;
            case 162:
                __seg__.SegmentDone();
                _segments[1].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment5(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[5];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[4];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];
            ____scope37_3 __ctx3__ = (____scope37_3)_stateMgrs[3];
            ____scope38_4 __ctx4__ = (____scope38_4)_stateMgrs[4];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx4__.__policy_1__ = default(Microsoft.RuleEngine.Policy);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx4__.__policy_1__ = new Microsoft.RuleEngine.Policy("Set DLAP RecordType Values");
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx4__.__policy_1__.Execute(__ctx1__.__GetRecordTypeValues);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 3;
            case 3:
                __ctx4__.__policy_1__.Dispose();
                if (__ctx4__ != null)
                    __ctx4__.__policy_1__ = null;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if (!__ctx4__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx4__.OnCommit();
                goto case 6;
            case 6:
                __seg__.SegmentDone();
                _segments[4].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment6(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[6];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[3];
            __DLAP_Application_Import_root_0 __ctx0__ = (__DLAP_Application_Import_root_0)_stateMgrs[0];
            __DLAP_Application_Import_1 __ctx1__ = (__DLAP_Application_Import_1)_stateMgrs[1];
            ____scope37_3 __ctx3__ = (____scope37_3)_stateMgrs[3];

            switch (__seg__.Progress)
            {
            case 0:
                OnBeginCatchHandler(3);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[132],__eventData[9],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[133],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __ctx1__.__Status = "Failure";
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[134],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                __ctx1__.__ExceptionContainer = __ctx3__.__Ex_0;
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[135],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __condition__ = __ctx3__.__Ex_0.InnerException != null;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 12;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                __ctx1__.__MessageTemp = __ctx1__.__ProcessStep + " - " + __ctx3__.__Ex_0.InnerException.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                __ctx1__.__Message = __ctx1__.__MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000U, __ctx1__.__MessageTemp.Length))) + "Total Error String Length:" + __ctx1__.__MessageTemp.Length.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import Exception", __ctx3__.__Ex_0.Message);
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 12:
                __ctx1__.__MessageTemp = __ctx1__.__ProcessStep + " - " + __ctx3__.__Ex_0.Message.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                __ctx1__.__Message = __ctx1__.__MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000U, __ctx1__.__MessageTemp.Length))) + "Total Error String Length:" + __ctx1__.__MessageTemp.Length.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 14;
            case 14:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import Exception", __ctx3__.__Ex_0.Message);
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx3__ != null)
                    __ctx3__.__Ex_0 = null;
                Tracker.FireEvent(__eventLocations[136],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[137],__eventData[7],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                {
                    RestEventRequestQueryRequestType __RestEventRequestQueryRequestMsg = new RestEventRequestQueryRequestType("RestEventRequestQueryRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeRestEventRequestInfoRequest), new object[] {__RestEventRequestQueryRequestMsg.MessagePart}, new object[] {__ctx1__.__Application.Application});
                    __ctx1__.__ApplicationNumberList = (System.String)__ctx1__.__Application.Application.GetDistinguishedField("APP_ELA_REFERENCE_NBR");
                    __ctx1__.__EVENTREQUEST_INFO_SOQL_QUERY = @"Select Application_Number__c,Id,GUID__c,Status__c from Event_Request__c WHERE (Application_Number__c = " + "'" + __ctx1__.__ApplicationNumberList + "') AND (Status__c = 'Success' AND (Stage__c ='Received Application' OR Stage__c ='Received Application Summary Decline')) AND Application_Number__c != NULL";
                    __RestEventRequestQueryRequestMsg.SetPropertyValue(typeof(Salesforce_Application_Import_Definition.Application__c.RestApplication__c.SOQL_EVENTREQUEST_INFO_QUERY), __ctx1__.__EVENTREQUEST_INFO_SOQL_QUERY);

                    if (__ctx1__.__RestEventRequestQueryRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestQueryRequestMsg);
                    __ctx1__.__RestEventRequestQueryRequestMsg = __RestEventRequestQueryRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__RestEventRequestQueryRequestMsg);
                }
                __ctx1__.__RestEventRequestQueryRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__RestEventRequestQueryRequestMsg);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[138],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[139],__eventData[8],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx3__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                RestEventRequestInfoPort.SendMessage(0, __ctx1__.__RestEventRequestQueryRequestMsg, null, null, out __ctx0__.__subWrapper3, __ctx3__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 22;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__RestEventRequestQueryRequestMsg);
                    __edata.PortName = @"RestEventRequestInfoPort";
                    Tracker.FireEvent(__eventLocations[140],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__RestEventRequestQueryRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestQueryRequestMsg);
                    __ctx1__.__RestEventRequestQueryRequestMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                if ( !PreProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[141],__eventData[1],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 24;
            case 24:
                if (!RestEventRequestInfoPort.GetMessageId(__ctx0__.__subWrapper3.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[2]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper3 != null)
                {
                    __ctx0__.__subWrapper3.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper3 = null;
                }
                if (__ctx1__.__RestEventRequestQueryResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestQueryResponseMsg);
                __ctx1__.__RestEventRequestQueryResponseMsg = new RestEventRequestQueryResponseType("RestEventRequestQueryResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__RestEventRequestQueryResponseMsg);
                RestEventRequestInfoPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__RestEventRequestQueryResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[3], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 25;
            case 25:
                if ( !PreProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__RestEventRequestQueryResponseMsg);
                    __edata.PortName = @"RestEventRequestInfoPort";
                    Tracker.FireEvent(__eventLocations[142],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 26;
            case 26:
                if ( !PreProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[143],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 27;
            case 27:
                __ctx1__.__RestEventRequestName = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventRequestQueryResponseMsg.MessagePart, "string(/*[local-name()='QueryResult' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest']/*[local-name()='records' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest']/*[local-name()='Application_Number__c' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest'])", typeof(System.String));
                if ( !PostProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 28;
            case 28:
                if ( !PreProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[144],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 29;
            case 29:
                __ctx1__.__RestEventRequestSFID = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventRequestQueryResponseMsg.MessagePart, "string(/*[local-name()='QueryResult' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest']/*[local-name()='records' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest']/*[local-name()='Id' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest'])", typeof(System.String));
                if ( !PostProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 30;
            case 30:
                __ctx1__.__RestEventRequestTotalSize = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventRequestQueryResponseMsg.MessagePart, "string(/*[local-name()='QueryResult' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest']/*[local-name()='totalSize' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/Query/EventRequest'])", typeof(System.String));
                if (__ctx1__ != null && __ctx1__.__RestEventRequestQueryResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestQueryResponseMsg);
                    __ctx1__.__RestEventRequestQueryResponseMsg = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 31 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 31;
            case 31:
                if ( !PreProgressInc( __seg__, __ctx__, 32 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[135],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 32;
            case 32:
                __condition__ = ((!System.String.IsNullOrWhiteSpace(__ctx1__.__RestEventRequestName)) && (!System.String.IsNullOrWhiteSpace(__ctx1__.__RestEventRequestSFID))) && (System.Convert.ToInt32(__ctx1__.__RestEventRequestTotalSize) != 0);
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 35 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 35;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 33 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 33;
            case 33:
                __ctx1__.__vRestEventRequestFlag = false;
                if ( !PostProgressInc( __seg__, __ctx__, 34 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 34;
            case 34:
                if ( !PostProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 36;
            case 35:
                __ctx1__.__vRestEventRequestFlag = true;
                if ( !PostProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 36;
            case 36:
                if ( !PreProgressInc( __seg__, __ctx__, 37 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[136],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 37;
            case 37:
                if ( !PreProgressInc( __seg__, __ctx__, 38 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[145],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 38;
            case 38:
                __condition__ = __ctx1__.__vRestEventRequestFlag;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 56 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 56;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 39 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 39;
            case 39:
                if ( !PreProgressInc( __seg__, __ctx__, 40 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[146],__eventData[7],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 40;
            case 40:
                {
                    OracleUpdateSubmittedApplicationsStatusRequestType __OracleUpdateSubmittedApplicationsStatusRequestMsg = new OracleUpdateSubmittedApplicationsStatusRequestType("OracleUpdateSubmittedApplicationsStatusRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeOracleErrorStatusRequest), new object[] {__OracleUpdateSubmittedApplicationsStatusRequestMsg.MessagePart}, new object[] {__ctx1__.__Application.Application});

                    if (__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg = __OracleUpdateSubmittedApplicationsStatusRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                }
                __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 41 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 41;
            case 41:
                if ( !PreProgressInc( __seg__, __ctx__, 42 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[147],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 42;
            case 42:
                if ( !PreProgressInc( __seg__, __ctx__, 43 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[148],__eventData[8],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 43;
            case 43:
                if (!__ctx3__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 44 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 44;
            case 44:
                if ( !PreProgressInc( __seg__, __ctx__, 45 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                OracleUpdateSubmittedApplicationsStatusPort.SendMessage(0, __ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg, null, null, out __ctx0__.__subWrapper4, __ctx3__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 45;
            case 45:
                if ( !PreProgressInc( __seg__, __ctx__, 46 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusRequestMsg);
                    __edata.PortName = @"OracleUpdateSubmittedApplicationsStatusPort";
                    Tracker.FireEvent(__eventLocations[149],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 46;
            case 46:
                if ( !PreProgressInc( __seg__, __ctx__, 47 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[150],__eventData[1],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 47;
            case 47:
                if (!OracleUpdateSubmittedApplicationsStatusPort.GetMessageId(__ctx0__.__subWrapper4.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[3]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper4 != null)
                {
                    __ctx0__.__subWrapper4.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper4 = null;
                }
                if (__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg = new OracleUpdateSubmittedApplicationsStatusResponseType("OracleUpdateSubmittedApplicationsStatusResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                OracleUpdateSubmittedApplicationsStatusPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[3], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 48 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 48;
            case 48:
                if ( !PreProgressInc( __seg__, __ctx__, 49 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__OracleUpdateSubmittedApplicationsStatusResponseMsg);
                    __edata.PortName = @"OracleUpdateSubmittedApplicationsStatusPort";
                    Tracker.FireEvent(__eventLocations[151],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 49;
            case 49:
                if ( !PreProgressInc( __seg__, __ctx__, 50 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[152],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 50;
            case 50:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.Error_Analyzer(20, InstanceId, this);
                    _stateMgrs[20] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[152],new object[] {__ctx1__.__MessageTemplate, __ctx1__.__ApplicationNumber, __ctx1__.__ProcessStep, __ctx1__.__Message, __ctx1__.__ExceptionContainer});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 51 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 51:
                if ( !PreProgressInc( __seg__, __ctx__, 52 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[20]).Args;
                    __ctx1__.__Message = (System.String)args[3];
                }
                Tracker.FireEvent(__eventLocations[153],__eventData[13],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 52;
            case 52:
                if ( !PreProgressInc( __seg__, __ctx__, 53 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[154],__eventData[12],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 53;
            case 53:
                {
                    Microsoft.XLANGs.Core.Service svc = new Application_Import_Logic.Call_Event_Request__c(21, InstanceId, this);
                    _stateMgrs[21] = svc;
                    __ctx3__.StartCall(__seg__, svc, __eventLocations[154],new object[] {__ctx1__.__ApplicationNumber, __ctx1__.__SalesForceObjectID, __ctx1__.__Message, __ctx1__.__SalesForceObjectName, __ctx1__.__Stage, __ctx1__.__Status, __ctx1__.__AutoDeclineReason, __ctx1__.__OrchestrationInstanceID});
                }
                if ( !PostProgressInc( __seg__, __ctx__, 54 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 54:
                if ( !PreProgressInc( __seg__, __ctx__, 55 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    object[] args = ((Microsoft.XLANGs.Core.Service)_stateMgrs[21]).Args;
                }
                Tracker.FireEvent(__eventLocations[155],__eventData[13],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 55;
            case 55:
                if ( !PostProgressInc( __seg__, __ctx__, 59 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 59;
            case 56:
                if ( !PreProgressInc( __seg__, __ctx__, 57 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[156],__eventData[2],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 57;
            case 57:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import - BizTalk Application Event Request created already", __ctx1__.__ApplicationNumber + __ctx1__.__RestEventRequestSFID, System.Diagnostics.EventLogEntryType.Error);
                if ( !PostProgressInc( __seg__, __ctx__, 58 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 58;
            case 58:
                Tracker.FireEvent(__eventLocations[157],__eventData[3],_stateMgrs[3].TrackDataStream );
                if ( !PostProgressInc( __seg__, __ctx__, 59 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 59;
            case 59:
                if ( !PreProgressInc( __seg__, __ctx__, 60 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[158],__eventData[5],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 60;
            case 60:
                if ( !PreProgressInc( __seg__, __ctx__, 61 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[159],__eventData[10],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 61;
            case 61:
                __ctx3__.__exv__ = null;
                OnEndCatchHandler(3, __seg__);
                __seg__.SegmentDone();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{D7ABC3CF-488D-478B-8849-8E7AAA376F39}")),
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{CE7971F5-431D-4D75-AB86-CCE5F8AA0AD7}")),
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{E0BABB59-DB56-4DCE-9565-02C488BDA914}")),
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{C14AB369-BA00-497E-B009-4B1A4C6FB7EB}"))
        };

    }
    //#line 307 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Account\CallSalesforceAccount.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectAccount)
        },
        new System.String[] {
            "CallSalesForceAccount"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesforceAccount : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesforceAccount));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesforceAccount()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesforceAccount_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesforceAccount(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesforceAccount", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesforceAccount(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesforceAccount")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>76a0c149-0753-4479-9741-9aa23c073e2c</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>f1c655a8-57fc-4cb9-b424-095d7b449913</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>af91360c-1a3a-42d4-81fc-4c0dbcee6c47</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Create Account Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>75d521d3-55b2-49c3-8edb-399adffdedf0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Create Account</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>0b1bd562-ebf7-45c7-b0c8-1cc4080c0df8</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>9d9d29bd-0149-4eb9-85ff-492bb351b854</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>b64d0127-c216-4386-96de-a1dedacf2f34</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>38365372-851e-413b-a7c9-3a446cf8e10f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count Account</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>407c416e-6713-4ab0-bdba-1250f6bf1c46</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Account Data Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>458b2b86-27c9-4d2a-9849-ef91fa491f6b</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Account Exists</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>0a68c3ee-4882-4092-abe0-a95af92d92af</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>edd3498f-c459-431b-a469-3742898574dd</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>a60eb7fa-7804-4eea-976d-c4ec3390f361</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Reconstruct Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>278cd05f-1442-458e-9f83-f4fd73efe4bb</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Temp Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>71dbbaef-d298-4146-9baa-b230bc919c2e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>MessageAssignment_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>9be4bcf6-4901-49ad-91b8-e0a071ce222d</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>19646e9b-88ee-4b17-88bc-da910f666df6</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Re-construct canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>d6b121ff-50d3-4796-82e0-0467aaec1008</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>2469fcc9-1f5d-4e16-acdd-61cbd99791fe</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>MessageAssignment_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>5b5a8609-ff12-490c-8048-455d3d4bfa51</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Canonical With Acoount SFID</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>96a4da37-1c60-45e6-b8a3-cf8ce18a1e69</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>dfae1c37-fda3-470d-b1c5-6b58bc4e7802</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_4</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>29a2ccee-5bf9-40ab-a26b-4170f6c315e9</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_5</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>a7735938-046d-4a7f-a1d4-98c42f852b48</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>MessageAssignment_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>1229ff21-7e0c-4112-b2ff-95bc3b6f133d</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>eda4a76d-867b-4632-a106-450ebecaed4d</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesforceAccount'</ActionName><IsAtomic>0</IsAtomic><Line>307</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>320</Line><Position>13</Position><ShapeID>'af91360c-1a3a-42d4-81fc-4c0dbcee6c47'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAccountMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.Account.CDataServiceAccount+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>326</Line><Position>26</Position><ShapeID>'38365372-851e-413b-a7c9-3a446cf8e10f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>328</Line><Position>13</Position><ShapeID>'407c416e-6713-4ab0-bdba-1250f6bf1c46'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>331</Line><Position>17</Position><ShapeID>'0a68c3ee-4882-4092-abe0-a95af92d92af'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAccountMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.Account.CDataServiceAccount+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>333</Line><Position>17</Position><ShapeID>'edd3498f-c459-431b-a469-3742898574dd'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAccountResponseMsg</name><part>table</part><schema>Salesforce_Application_Import_Definition.Account.CDataServiceAccount+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>335</Line><Position>17</Position><ShapeID>'278cd05f-1442-458e-9f83-f4fd73efe4bb'</ShapeID>
<Messages>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>342</Line><Position>17</Position><ShapeID>'19646e9b-88ee-4b17-88bc-da910f666df6'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>CreateAccountResponseMsg</name><part>table</part><schema>Salesforce_Application_Import_Definition.Account.CDataServiceAccount+table</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='9b3858b9-32fc-425d-83c1-a999263f71c0' LowerBound='1.1' HigherBound='70.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='4a1c8ca3-1cd0-4e9e-be05-8a74ebd0870c' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='69.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesforceAccount' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='629e9997-d83f-428e-8217-cb39f6ae63b8' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='27.1' HigherBound='28.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='strXpath' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='abf6bce2-124d-493f-9a38-88a793eb5ddb' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='28.1' HigherBound='29.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AccountCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='962aab76-0156-45b6-acd0-80356bbac7e6' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempApplicationCanonical' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='32d70818-6d9d-45d4-8234-bef5715fc0cd' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestAccount' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateAccountMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='17fe08d7-6091-4aea-b9c3-61f15e26ca9c' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseAccount' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateAccountResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='76a0c149-0753-4479-9741-9aa23c073e2c' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='Task' OID='f1c655a8-57fc-4cb9-b424-095d7b449913' ParentLink='ServiceBody_Statement' LowerBound='32.1' HigherBound='67.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='af91360c-1a3a-42d4-81fc-4c0dbcee6c47' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='38.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Create Account Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='75d521d3-55b2-49c3-8edb-399adffdedf0' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Account.MakeSalesForceAccountMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map to Create Account' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='0b1bd562-ebf7-45c7-b0c8-1cc4080c0df8' ParentLink='Transform_InputMessagePartRef' LowerBound='36.118' HigherBound='36.138'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='9d9d29bd-0149-4eb9-85ff-492bb351b854' ParentLink='Transform_OutputMessagePartRef' LowerBound='36.28' HigherBound='36.55'>
                                <om:Property Name='MessageRef' Value='CreateAccountMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='b64d0127-c216-4386-96de-a1dedacf2f34' ParentLink='Construct_MessageRef' LowerBound='33.23' HigherBound='33.39'>
                            <om:Property Name='Ref' Value='CreateAccountMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='38365372-851e-413b-a7c9-3a446cf8e10f' ParentLink='ComplexStatement_Statement' LowerBound='38.1' HigherBound='40.1'>
                        <om:Property Name='Expression' Value='AccountCount = xpath(CreateAccountMsg.parameters, &quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Account&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Account&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Account&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count Account' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                    <om:Element Type='Decision' OID='407c416e-6713-4ab0-bdba-1250f6bf1c46' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='67.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Account Data Exists?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='458b2b86-27c9-4d2a-9849-ef91fa491f6b' ParentLink='ReallyComplexStatement_Branch' LowerBound='41.13' HigherBound='67.1'>
                            <om:Property Name='Expression' Value='AccountCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Account Exists' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Send' OID='0a68c3ee-4882-4092-abe0-a95af92d92af' ParentLink='ComplexStatement_Statement' LowerBound='43.1' HigherBound='45.1'>
                                <om:Property Name='PortName' Value='CallSalesForceAccount' />
                                <om:Property Name='MessageName' Value='CreateAccountMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Request' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='edd3498f-c459-431b-a469-3742898574dd' ParentLink='ComplexStatement_Statement' LowerBound='45.1' HigherBound='47.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='CallSalesForceAccount' />
                                <om:Property Name='MessageName' Value='CreateAccountResponseMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Response' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Task' OID='a60eb7fa-7804-4eea-976d-c4ec3390f361' ParentLink='ComplexStatement_Statement' LowerBound='47.1' HigherBound='66.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Reconstruct Canonical' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='Construct' OID='278cd05f-1442-458e-9f83-f4fd73efe4bb' ParentLink='ComplexStatement_Statement' LowerBound='47.1' HigherBound='54.1'>
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Construct Temp Message' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='MessageAssignment' OID='71dbbaef-d298-4146-9baa-b230bc919c2e' ParentLink='ComplexStatement_Statement' LowerBound='50.1' HigherBound='53.1'>
                                        <om:Property Name='Expression' Value='TempApplicationCanonical=ApplicationCanonical;&#xD;&#xA;TempApplicationCanonical(*)=ApplicationCanonical(*);' />
                                        <om:Property Name='ReportToAnalyst' Value='False' />
                                        <om:Property Name='Name' Value='MessageAssignment_2' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='MessageRef' OID='9be4bcf6-4901-49ad-91b8-e0a071ce222d' ParentLink='Construct_MessageRef' LowerBound='48.27' HigherBound='48.51'>
                                        <om:Property Name='Ref' Value='TempApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='Construct' OID='19646e9b-88ee-4b17-88bc-da910f666df6' ParentLink='ComplexStatement_Statement' LowerBound='54.1' HigherBound='66.1'>
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Re-construct canonical' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='MessageRef' OID='d6b121ff-50d3-4796-82e0-0467aaec1008' ParentLink='Construct_MessageRef' LowerBound='55.27' HigherBound='55.47'>
                                        <om:Property Name='Ref' Value='ApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessageAssignment' OID='2469fcc9-1f5d-4e16-acdd-61cbd99791fe' ParentLink='ComplexStatement_Statement' LowerBound='57.1' HigherBound='60.1'>
                                        <om:Property Name='Expression' Value='ApplicationCanonical=TempApplicationCanonical;&#xD;&#xA;ApplicationCanonical(*)=TempApplicationCanonical(*);&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='False' />
                                        <om:Property Name='Name' Value='MessageAssignment_1' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Transform' OID='5b5a8609-ff12-490c-8048-455d3d4bfa51' ParentLink='ComplexStatement_Statement' LowerBound='60.1' HigherBound='62.1'>
                                        <om:Property Name='ClassName' Value='Application_Import_Logic.Account.MakeCanonicalWithAccountSalesForceIDs' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Make Canonical With Acoount SFID' />
                                        <om:Property Name='Signal' Value='False' />
                                        <om:Element Type='MessagePartRef' OID='96a4da37-1c60-45e6-b8a3-cf8ce18a1e69' ParentLink='Transform_InputMessagePartRef' LowerBound='61.128' HigherBound='61.158'>
                                            <om:Property Name='MessageRef' Value='CreateAccountResponseMsg' />
                                            <om:Property Name='PartRef' Value='table' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='MessagePartReference_3' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='MessagePartRef' OID='dfae1c37-fda3-470d-b1c5-6b58bc4e7802' ParentLink='Transform_InputMessagePartRef' LowerBound='61.160' HigherBound='61.184'>
                                            <om:Property Name='MessageRef' Value='TempApplicationCanonical' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='MessagePartReference_4' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='MessagePartRef' OID='29a2ccee-5bf9-40ab-a26b-4170f6c315e9' ParentLink='Transform_OutputMessagePartRef' LowerBound='61.32' HigherBound='61.52'>
                                            <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='MessagePartReference_5' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='MessageAssignment' OID='a7735938-046d-4a7f-a1d4-98c42f852b48' ParentLink='ComplexStatement_Statement' LowerBound='62.1' HigherBound='65.1'>
                                        <om:Property Name='Expression' Value='strXpath = &quot;string(/*[local-name()=&apos;table&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Account&apos;]/*[local-name()=&apos;row&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Account&apos;][1]/*[local-name()=&apos;Id&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Account&apos;]/text())&quot;;&#xD;&#xA;ApplicationCanonical.SalesForceAccountID=xpath(CreateAccountResponseMsg.table, strXpath);' />
                                        <om:Property Name='ReportToAnalyst' Value='False' />
                                        <om:Property Name='Name' Value='MessageAssignment_3' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='1229ff21-7e0c-4112-b2ff-95bc3b6f133d' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
                <om:Element Type='MessageDeclaration' OID='eda4a76d-867b-4632-a106-450ebecaed4d' ParentLink='ServiceBody_Declaration' LowerBound='29.15' HigherBound='29.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='4486a60a-69d4-4e24-9377-92097b0461d4' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='14' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectAccount' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForceAccount' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='be37245f-4df0-464b-9f22-e34aa220ca9a' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='0d74be77-8116-4be2-a00d-97f64f01fe12' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseAccount' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='c876032d-98d2-421a-ac31-69723cd39bcb' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Account.CDataServiceAccount.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='table' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='57732ae1-f68a-4dad-9fc6-b4356d0f915d' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestAccount' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='7f46f963-a478-4dc0-8682-c60060520ea4' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Account.CDataServiceAccount.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='cab5c46d-6626-4400-8778-bdb4a58ca552' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectAccount' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='15e232e7-60f3-4657-b444-6c2c80583c5f' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='8f0e6a79-6011-4111-9ce7-f02d2385bfae' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.36'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestAccount' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='c6c79962-4ad2-49d3-a4a1-3e8f5b6355c3' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.38' HigherBound='16.62'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseAccount' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesforceAccount_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesforceAccount_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesforceAccount")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesforceAccount __svc__ = (CallSalesforceAccount)_service;
                __CallSalesforceAccount_root_0 __ctx0__ = (__CallSalesforceAccount_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesForceAccount != null)
                {
                    __svc__.CallSalesForceAccount.Close(this, null);
                    __svc__.CallSalesForceAccount = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesforceAccount_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesforceAccount_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesforceAccount")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesforceAccount __svc__ = (CallSalesforceAccount)_service;
                __CallSalesforceAccount_root_0 __ctx0__ = (__CallSalesforceAccount_root_0)(__svc__._stateMgrs[0]);
                __CallSalesforceAccount_1 __ctx1__ = (__CallSalesforceAccount_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateAccountResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAccountResponseMsg);
                    __ctx1__.__CreateAccountResponseMsg = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__strXpath = null;
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateAccountMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAccountMsg);
                    __ctx1__.__CreateAccountMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("TempApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateAccountMsg")]
            internal StatementRequestAccount __CreateAccountMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateAccountResponseMsg")]
            internal StatementResponseAccount __CreateAccountResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("strXpath")]
            internal System.String __strXpath;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AccountCount")]
            internal System.Int32 __AccountCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForceAccount")]
        internal CDataServiceSelectAccount CallSalesForceAccount;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectAccount.statement},
                                               typeof(CallSalesforceAccount).GetField("CallSalesForceAccount", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesforceAccount), "CallSalesForceAccount"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "af91360c-1a3a-42d4-81fc-4c0dbcee6c47", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "af91360c-1a3a-42d4-81fc-4c0dbcee6c47", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "38365372-851e-413b-a7c9-3a446cf8e10f", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "38365372-851e-413b-a7c9-3a446cf8e10f", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "407c416e-6713-4ab0-bdba-1250f6bf1c46", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "0a68c3ee-4882-4092-abe0-a95af92d92af", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "0a68c3ee-4882-4092-abe0-a95af92d92af", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "edd3498f-c459-431b-a469-3742898574dd", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "edd3498f-c459-431b-a469-3742898574dd", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "278cd05f-1442-458e-9f83-f4fd73efe4bb", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "278cd05f-1442-458e-9f83-f4fd73efe4bb", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "19646e9b-88ee-4b17-88bc-da910f666df6", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "19646e9b-88ee-4b17-88bc-da910f666df6", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "407c416e-6713-4ab0-bdba-1250f6bf1c46", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,11,12,13,13,14,15,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesforceAccount_root_0 __ctx0__ = (__CallSalesforceAccount_root_0)_stateMgrs[0];
            __CallSalesforceAccount_1 __ctx1__ = (__CallSalesforceAccount_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesForceAccount = new CDataServiceSelectAccount(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesforceAccount_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesforceAccount_root_0 __ctx0__ = (__CallSalesforceAccount_root_0)_stateMgrs[0];
            __CallSalesforceAccount_1 __ctx1__ = (__CallSalesforceAccount_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__strXpath = default(System.String);
                __ctx1__.__AccountCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __ctx1__.__strXpath = "";
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                {
                    StatementRequestAccount __CreateAccountMsg = new StatementRequestAccount("CreateAccountMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Account.MakeSalesForceAccountMsg), new object[] {__CreateAccountMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateAccountMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateAccountMsg);
                    __ctx1__.__CreateAccountMsg = __CreateAccountMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateAccountMsg);
                }
                __ctx1__.__CreateAccountMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateAccountMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                __ctx1__.__AccountCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateAccountMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Account']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Account']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Account'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                __condition__ = __ctx1__.__AccountCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 25 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 25;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForceAccount.SendMessage(0, __ctx1__.__CreateAccountMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateAccountMsg);
                    __edata.PortName = @"CallSalesForceAccount";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                if (!CallSalesForceAccount.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateAccountResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAccountResponseMsg);
                __ctx1__.__CreateAccountResponseMsg = new StatementResponseAccount("CreateAccountResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateAccountResponseMsg);
                CallSalesForceAccount.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateAccountResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateAccountResponseMsg);
                    __edata.PortName = @"CallSalesForceAccount";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[11],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("TempApplicationCanonical", __ctx1__);

                    __TempApplicationCanonical.CopyFrom(__ctx1__.__ApplicationCanonical);
                    __TempApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__ApplicationCanonical);

                    if (__ctx1__.__TempApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = __TempApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__TempApplicationCanonical);
                }
                __ctx1__.__TempApplicationCanonical.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[12],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 22;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);

                    __ApplicationCanonical.CopyFrom(__ctx1__.__TempApplicationCanonical);
                    __ApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__TempApplicationCanonical);
                    ApplyTransform(typeof(Application_Import_Logic.Account.MakeCanonicalWithAccountSalesForceIDs), new object[] {__ApplicationCanonical.part}, new object[] {__ctx1__.__CreateAccountResponseMsg.table, __ctx1__.__TempApplicationCanonical.part});
                    __ctx1__.__strXpath = "string(/*[local-name()='table' and namespace-uri()='http://sba-oda/DLAP/Account']/*[local-name()='row' and namespace-uri()='http://sba-oda/DLAP/Account'][1]/*[local-name()='Id' and namespace-uri()='http://sba-oda/DLAP/Account']/text())";
                    __ApplicationCanonical.part.SetDistinguishedField("SalesForceAccountID", (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateAccountResponseMsg.table, __ctx1__.__strXpath, typeof(System.String)));

                    if (__ctx1__.__ApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = __ApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                }
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 24;
            case 24:
                if ( !PreProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__CreateAccountResponseMsg);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[14],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateAccountResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAccountResponseMsg);
                    __ctx1__.__CreateAccountResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 25;
            case 25:
                if ( !PreProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__strXpath = null;
                if (__ctx1__ != null && __ctx1__.__CreateAccountMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAccountMsg);
                    __ctx1__.__CreateAccountMsg = null;
                }
                if (CallSalesForceAccount != null)
                {
                    CallSalesForceAccount.Close(__ctx1__, __seg__);
                    CallSalesForceAccount = null;
                }
                Tracker.FireEvent(__eventLocations[15],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 26;
            case 26:
                if ( !PreProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 27;
            case 27:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 28;
            case 28:
                if ( !PreProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 29;
            case 29:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 30;
            case 30:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{DD8D0523-9F7E-4BD7-8A2D-3EDC06876F5C}"))
        };

    }
    //#line 531 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Applicant__c\CallSalesforceApplicant.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses,
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectApplicant__c),
            typeof(Application_Import_Logic.CDataServiceSelectUpdateApplicant__c)
        },
        new System.String[] {
            "CallSalesforceApplicant__cPort",
            "CallSalesforceUpdateApplicant__cPort"
        },
        new System.Type[] {
            null,
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceApplicant : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceApplicant));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceApplicant()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceApplicant_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceApplicant(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceApplicant", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceApplicant(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceApplicant")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>88cab727-885d-4936-8e66-eae09f1f9216</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>e3bb0842-7a87-4a7f-92b0-4a4a60c49b7e</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>13f5a103-e2a9-4cd2-8536-a4ef53782c2b</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Create Applicant__c Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>2530573f-219e-4ab1-bcf0-7bcdfee53beb</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>c2790339-45e2-4898-b9fc-5f0c67a59e07</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Create Account</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>e417917e-e378-44a0-abc8-212811381fa5</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>5e1833ac-3cd7-4cdf-87da-20aaefac0cc1</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>04c2679e-5b04-42e6-b485-e2a60cc743aa</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Create Account Msg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>2b068e4d-95d6-49bc-8630-ec1ab3f9702c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Create Account Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>492f6e2e-bf66-4c7c-bf24-68d9943d9f9a</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Recreate Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>5de1beba-68f2-455d-9458-e0692ca991fc</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Temp Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>1c90d374-63fa-494d-8af4-1b21e6840531</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Temp Msg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>e93a34bc-cc6c-4a61-8628-614fa56313b7</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>9ee72b2b-1f23-4066-ac5f-0deed6cbee0a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Re-construct canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>a4395fb8-b2c9-4510-bd90-05f6f1cfdd23</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>ca3dfe8e-260e-4df6-8fd6-bacb3c967d64</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>bfd4127d-16e1-4e3b-b9c5-606f65d01d78</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_4</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>75e966c7-cd20-433f-9031-74985f52f62c</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_5</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>4a97d38f-b0f9-4774-8dc2-8fd6a0f36318</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Context Properties</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>d89671f7-3f5b-433f-a4a9-70852605b681</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>9988be44-9797-49e3-bc1f-5e5e9cde0e8e</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Count Applicants</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>5f2e2712-7b04-4099-9049-e4c7f5b04e81</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Multiple Applicants Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>7a3460f0-a5f3-484d-99e3-8633b3c99530</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Multiple Applicants</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>f235d1ed-4ceb-48cd-95a5-b60a3bcf563e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Update Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>7486d144-9665-460e-9acf-c8dfb9870027</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Update Applicant__c Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>a2245727-60cb-4be9-9df2-c7e90d0f9226</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>00606862-b742-48a6-8c4d-fa208a4a2b0d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Non-Primary Applicants Related Parent</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>10dd9bea-949c-4528-843d-2ccae0a246be</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_6</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>e22b9679-39df-44e5-8790-f1e01266f644</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_7</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>44531426-b074-4775-9be0-05deff0c4136</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Update Applicant Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>ad0b792a-7a93-4569-b447-0f0f6de2bd6d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Update Applicant Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>c9d74b12-86ae-4e64-bfae-14ce0b897baa</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>e70b0ff4-3873-4199-a727-3e4f286bc59e</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceApplicant'</ActionName><IsAtomic>0</IsAtomic><Line>531</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>548</Line><Position>13</Position><ShapeID>'13f5a103-e2a9-4cd2-8536-a4ef53782c2b'</ShapeID>
<Messages>
	<MsgInfo><name>CreateApplicant__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>554</Line><Position>13</Position><ShapeID>'04c2679e-5b04-42e6-b485-e2a60cc743aa'</ShapeID>
<Messages>
	<MsgInfo><name>CreateApplicant__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>556</Line><Position>13</Position><ShapeID>'2b068e4d-95d6-49bc-8630-ec1ab3f9702c'</ShapeID>
<Messages>
	<MsgInfo><name>CreateApplicant__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>558</Line><Position>13</Position><ShapeID>'5de1beba-68f2-455d-9458-e0692ca991fc'</ShapeID>
<Messages>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>565</Line><Position>13</Position><ShapeID>'9ee72b2b-1f23-4066-ac5f-0deed6cbee0a'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>CreateApplicant__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c+table</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>573</Line><Position>32</Position><ShapeID>'9988be44-9797-49e3-bc1f-5e5e9cde0e8e'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>575</Line><Position>13</Position><ShapeID>'5f2e2712-7b04-4099-9049-e4c7f5b04e81'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>578</Line><Position>17</Position><ShapeID>'7486d144-9665-460e-9acf-c8dfb9870027'</ShapeID>
<Messages>
	<MsgInfo><name>UpdateApplicant__cRequestMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>584</Line><Position>17</Position><ShapeID>'44531426-b074-4775-9be0-05deff0c4136'</ShapeID>
<Messages>
	<MsgInfo><name>UpdateApplicant__cRequestMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>586</Line><Position>17</Position><ShapeID>'ad0b792a-7a93-4569-b447-0f0f6de2bd6d'</ShapeID>
<Messages>
	<MsgInfo><name>UpdateApplicant__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='d5e77a3b-076c-40ed-8fb4-6dc41c3cf563' LowerBound='1.1' HigherBound='110.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='729f8eeb-a3f0-4f78-af22-9cfa0d5de649' ParentLink='Module_ServiceDeclaration' LowerBound='49.1' HigherBound='109.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceApplicant' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='VariableDeclaration' OID='5f784bf4-52d8-439b-a025-88ffa6e90741' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='63.1' HigherBound='64.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicantSFIDCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='816fc14c-6616-4c95-9b67-1ee38afcd636' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='56.1' HigherBound='57.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseUpdateApplicant__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='UpdateApplicant__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='406bab06-3885-4945-852b-e9e5c0046843' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='57.1' HigherBound='58.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempApplicationCanonical' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='bdad8b8f-85ba-47cd-a2a3-960516dd625f' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='58.1' HigherBound='59.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseApplicant__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateApplicant__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='783dcf6e-47f7-4157-a4ca-39841397738b' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='59.1' HigherBound='60.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestApplicant__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateApplicant__cMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='493e2004-fbe1-4373-88b9-d96aabebefa2' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='60.1' HigherBound='61.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestRecordType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='QueryRecordTypeMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='dc1ce016-5188-487f-9c5b-99562ad16aca' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='61.1' HigherBound='62.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseRecordType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='QueryRecordTypeResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='88dbe107-474d-483e-9184-c2e0f9a85e4a' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='62.1' HigherBound='63.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestUpdateApplicant__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='UpdateApplicant__cRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='88cab727-885d-4936-8e66-eae09f1f9216' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='Task' OID='e3bb0842-7a87-4a7f-92b0-4a4a60c49b7e' ParentLink='ServiceBody_Statement' LowerBound='66.1' HigherBound='76.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='13f5a103-e2a9-4cd2-8536-a4ef53782c2b' ParentLink='ComplexStatement_Statement' LowerBound='66.1' HigherBound='72.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Create Applicant__c Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageRef' OID='2530573f-219e-4ab1-bcf0-7bcdfee53beb' ParentLink='Construct_MessageRef' LowerBound='67.23' HigherBound='67.44'>
                            <om:Property Name='Ref' Value='CreateApplicant__cMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='Transform' OID='c2790339-45e2-4898-b9fc-5f0c67a59e07' ParentLink='ComplexStatement_Statement' LowerBound='69.1' HigherBound='71.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Applicant__c.MakeSalesForceApplicant_cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map to Create Account' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='e417917e-e378-44a0-abc8-212811381fa5' ParentLink='Transform_OutputMessagePartRef' LowerBound='70.28' HigherBound='70.60'>
                                <om:Property Name='MessageRef' Value='CreateApplicant__cMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='5e1833ac-3cd7-4cdf-87da-20aaefac0cc1' ParentLink='Transform_InputMessagePartRef' LowerBound='70.136' HigherBound='70.156'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Send' OID='04c2679e-5b04-42e6-b485-e2a60cc743aa' ParentLink='ComplexStatement_Statement' LowerBound='72.1' HigherBound='74.1'>
                        <om:Property Name='PortName' Value='CallSalesforceApplicant__cPort' />
                        <om:Property Name='MessageName' Value='CreateApplicant__cMsg' />
                        <om:Property Name='OperationName' Value='statement' />
                        <om:Property Name='OperationMessageName' Value='Request' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Send Create Account Msg' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Receive' OID='2b068e4d-95d6-49bc-8630-ec1ab3f9702c' ParentLink='ComplexStatement_Statement' LowerBound='74.1' HigherBound='76.1'>
                        <om:Property Name='Activate' Value='False' />
                        <om:Property Name='PortName' Value='CallSalesforceApplicant__cPort' />
                        <om:Property Name='MessageName' Value='CreateApplicant__cResponseMsg' />
                        <om:Property Name='OperationName' Value='statement' />
                        <om:Property Name='OperationMessageName' Value='Response' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Receive Create Account Response' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                </om:Element>
                <om:Element Type='Task' OID='492f6e2e-bf66-4c7c-bf24-68d9943d9f9a' ParentLink='ServiceBody_Statement' LowerBound='76.1' HigherBound='91.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Recreate Canonical' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='5de1beba-68f2-455d-9458-e0692ca991fc' ParentLink='ComplexStatement_Statement' LowerBound='76.1' HigherBound='83.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Temp Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageAssignment' OID='1c90d374-63fa-494d-8af4-1b21e6840531' ParentLink='ComplexStatement_Statement' LowerBound='79.1' HigherBound='82.1'>
                            <om:Property Name='Expression' Value='TempApplicationCanonical=ApplicationCanonical;&#xD;&#xA;TempApplicationCanonical(*)=ApplicationCanonical(*);' />
                            <om:Property Name='ReportToAnalyst' Value='False' />
                            <om:Property Name='Name' Value='Assign Temp Msg' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='MessageRef' OID='e93a34bc-cc6c-4a61-8628-614fa56313b7' ParentLink='Construct_MessageRef' LowerBound='77.23' HigherBound='77.47'>
                            <om:Property Name='Ref' Value='TempApplicationCanonical' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Construct' OID='9ee72b2b-1f23-4066-ac5f-0deed6cbee0a' ParentLink='ComplexStatement_Statement' LowerBound='83.1' HigherBound='91.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Re-construct canonical' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='a4395fb8-b2c9-4510-bd90-05f6f1cfdd23' ParentLink='ComplexStatement_Statement' LowerBound='86.1' HigherBound='88.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Applicant__c.MakeCanonicalWithApplicantIDSalesForceIDs' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Create Canonical' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='ca3dfe8e-260e-4df6-8fd6-bacb3c967d64' ParentLink='Transform_InputMessagePartRef' LowerBound='87.133' HigherBound='87.173'>
                                <om:Property Name='MessageRef' Value='CreateApplicant__cResponseMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_3' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='bfd4127d-16e1-4e3b-b9c5-606f65d01d78' ParentLink='Transform_InputMessagePartRef' LowerBound='87.175' HigherBound='87.199'>
                                <om:Property Name='MessageRef' Value='TempApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_4' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='75e966c7-cd20-433f-9031-74985f52f62c' ParentLink='Transform_OutputMessagePartRef' LowerBound='87.28' HigherBound='87.48'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_5' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageAssignment' OID='4a97d38f-b0f9-4774-8dc2-8fd6a0f36318' ParentLink='ComplexStatement_Statement' LowerBound='88.1' HigherBound='90.1'>
                            <om:Property Name='Expression' Value='ApplicationCanonical(*)=TempApplicationCanonical(*);&#xD;&#xA;' />
                            <om:Property Name='ReportToAnalyst' Value='False' />
                            <om:Property Name='Name' Value='Assign Context Properties' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='MessageRef' OID='d89671f7-3f5b-433f-a4a9-70852605b681' ParentLink='Construct_MessageRef' LowerBound='84.23' HigherBound='84.43'>
                            <om:Property Name='Ref' Value='ApplicationCanonical' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
                <om:Element Type='VariableAssignment' OID='9988be44-9797-49e3-bc1f-5e5e9cde0e8e' ParentLink='ServiceBody_Statement' LowerBound='91.1' HigherBound='93.1'>
                    <om:Property Name='Expression' Value='ApplicantSFIDCount = System.Convert.ToInt32(xpath(ApplicationCanonical, &quot;count(/*[local-name()=&apos;Application&apos; and namespace-uri()=&apos;http://SBA.ODA.Gov/CanonicalApplication&apos;]/*[local-name()=&apos;ApplicantColl&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;Applicants&apos; and namespace-uri()=&apos;&apos;]/*[local-name()=&apos;SalesForceApplicantID&apos; and namespace-uri()=&apos;&apos;])&quot;));' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Count Applicants' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Decision' OID='5f2e2712-7b04-4099-9049-e4c7f5b04e81' ParentLink='ServiceBody_Statement' LowerBound='93.1' HigherBound='107.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Multiple Applicants Exists?' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='DecisionBranch' OID='7a3460f0-a5f3-484d-99e3-8633b3c99530' ParentLink='ReallyComplexStatement_Branch' LowerBound='94.13' HigherBound='107.1'>
                        <om:Property Name='Expression' Value='ApplicantSFIDCount &gt;1' />
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Multiple Applicants' />
                        <om:Property Name='Signal' Value='False' />
                        <om:Element Type='Task' OID='f235d1ed-4ceb-48cd-95a5-b60a3bcf563e' ParentLink='ComplexStatement_Statement' LowerBound='96.1' HigherBound='102.1'>
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Update Request' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='Construct' OID='7486d144-9665-460e-9acf-c8dfb9870027' ParentLink='ComplexStatement_Statement' LowerBound='96.1' HigherBound='102.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Construct Update Applicant__c Message' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='MessageRef' OID='a2245727-60cb-4be9-9df2-c7e90d0f9226' ParentLink='Construct_MessageRef' LowerBound='97.27' HigherBound='97.55'>
                                    <om:Property Name='Ref' Value='UpdateApplicant__cRequestMsg' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                                <om:Element Type='Transform' OID='00606862-b742-48a6-8c4d-fa208a4a2b0d' ParentLink='ComplexStatement_Statement' LowerBound='99.1' HigherBound='101.1'>
                                    <om:Property Name='ClassName' Value='Application_Import_Logic.MakeUpdateApplicantsRequest' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Make Non-Primary Applicants Related Parent' />
                                    <om:Property Name='Signal' Value='False' />
                                    <om:Element Type='MessagePartRef' OID='10dd9bea-949c-4528-843d-2ccae0a246be' ParentLink='Transform_InputMessagePartRef' LowerBound='100.129' HigherBound='100.149'>
                                        <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_6' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessagePartRef' OID='e22b9679-39df-44e5-8790-f1e01266f644' ParentLink='Transform_OutputMessagePartRef' LowerBound='100.32' HigherBound='100.71'>
                                        <om:Property Name='MessageRef' Value='UpdateApplicant__cRequestMsg' />
                                        <om:Property Name='PartRef' Value='parameters' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_7' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type='Send' OID='44531426-b074-4775-9be0-05deff0c4136' ParentLink='ComplexStatement_Statement' LowerBound='102.1' HigherBound='104.1'>
                            <om:Property Name='PortName' Value='CallSalesforceUpdateApplicant__cPort' />
                            <om:Property Name='MessageName' Value='UpdateApplicant__cRequestMsg' />
                            <om:Property Name='OperationName' Value='statement' />
                            <om:Property Name='OperationMessageName' Value='Request' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Send Update Applicant Request' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='Receive' OID='ad0b792a-7a93-4569-b447-0f0f6de2bd6d' ParentLink='ComplexStatement_Statement' LowerBound='104.1' HigherBound='106.1'>
                            <om:Property Name='Activate' Value='False' />
                            <om:Property Name='PortName' Value='CallSalesforceUpdateApplicant__cPort' />
                            <om:Property Name='MessageName' Value='UpdateApplicant__cResponseMsg' />
                            <om:Property Name='OperationName' Value='statement' />
                            <om:Property Name='OperationMessageName' Value='Response' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Receive Update Applicant Response' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='DecisionBranch' OID='c9d74b12-86ae-4e64-bfae-14ce0b897baa' ParentLink='ReallyComplexStatement_Branch'>
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Else' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                </om:Element>
                <om:Element Type='MessageDeclaration' OID='e70b0ff4-3873-4199-a727-3e4f286bc59e' ParentLink='ServiceBody_Declaration' LowerBound='64.15' HigherBound='64.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='26b11318-de14-43bc-bb4a-141c0bb2fc7b' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='52.1' HigherBound='54.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='24' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectApplicant__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesforceApplicant__cPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='8fc53286-3cab-4443-9086-f073b511dfcf' ParentLink='PortDeclaration_CLRAttribute' LowerBound='52.1' HigherBound='53.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='41a021fb-89f3-4522-9309-d0ccbc1c0d0e' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='54.1' HigherBound='56.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Left' />
                <om:Property Name='PortIndex' Value='97' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectUpdateApplicant__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesforceUpdateApplicant__cPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='DirectBindingAttribute' OID='e0a7fa50-f456-4402-a586-557a1bcce5af' ParentLink='PortDeclaration_CLRAttribute' LowerBound='54.1' HigherBound='55.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='ad0559a1-777f-413f-b499-312e7f73700b' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseRecordType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='cf4331cf-b82c-4cf7-a5ce-fd6db294f46e' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='dc73b86f-747e-424e-958b-fcebcc6614e2' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestRecordType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='e53c9335-a791-4045-85a4-49eabe367d12' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataService_RecordType.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='dfee3c0d-7795-4c0b-a4a0-0f29f0c3efb6' ParentLink='Module_MessageType' LowerBound='12.1' HigherBound='16.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseApplicant__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='d69e40a1-47e7-4f51-90f3-7c21c24e0106' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='14.1' HigherBound='15.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='0d6e3ca7-2f7b-4391-9535-f87a57e6979a' ParentLink='Module_MessageType' LowerBound='16.1' HigherBound='20.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestApplicant__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='c199f7f5-e47c-443b-9348-76bf9086ffa6' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='18.1' HigherBound='19.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceApplicant__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='30034f6a-fcd9-4e89-a00d-64b633cf6ae6' ParentLink='Module_MessageType' LowerBound='20.1' HigherBound='24.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementRequestUpdateApplicant__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='2d2aa5b6-c73a-40a8-91d3-511f8c8cdd4d' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='22.1' HigherBound='23.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='066ab9f9-b5fc-4027-9b4e-2428e7239042' ParentLink='Module_MessageType' LowerBound='24.1' HigherBound='28.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementResponseUpdateApplicant__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='4ec6d859-f467-48bb-94e2-0423c2a13da2' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataServiceUpdateApplicant__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='4805d654-7f95-4b3e-ba61-995253afafa9' ParentLink='Module_PortType' LowerBound='28.1' HigherBound='35.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectRecordType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='17bdddf4-0c9f-4d92-a494-2e21fdd1f619' ParentLink='PortType_OperationDeclaration' LowerBound='30.1' HigherBound='34.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='122e7602-3e17-4b8f-81b5-e18f5573cb21' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='32.13' HigherBound='32.39'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestRecordType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='258f26ed-39af-46a7-af5e-284fbe8327bd' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='32.41' HigherBound='32.68'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseRecordType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='44ca270b-c569-4cac-87e2-799b289f5c3e' ParentLink='Module_PortType' LowerBound='35.1' HigherBound='42.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectApplicant__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='01d40a1c-2b58-43c0-bf58-7d41e0f62c92' ParentLink='PortType_OperationDeclaration' LowerBound='37.1' HigherBound='41.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='757232d9-47a9-40d8-9cdb-2cedc68d0342' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='39.13' HigherBound='39.41'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestApplicant__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='288d994a-66b6-4136-9166-9df50c3b64f1' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='39.43' HigherBound='39.72'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseApplicant__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='358c13b8-3d79-48ff-abe5-d4d3195ed61b' ParentLink='Module_PortType' LowerBound='42.1' HigherBound='49.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CDataServiceSelectUpdateApplicant__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='a5e46da2-986d-4edb-9b49-e121e3f64c6b' ParentLink='PortType_OperationDeclaration' LowerBound='44.1' HigherBound='48.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='0ca8c9ba-d0f3-440c-9f90-0076ea013e35' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='46.13' HigherBound='46.47'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestUpdateApplicant__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='790ab480-60d4-4ffe-9271-d32dbc2797b5' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='46.49' HigherBound='46.84'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseUpdateApplicant__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceApplicant_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceApplicant_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceApplicant")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceApplicant __svc__ = (CallSalesForceApplicant)_service;
                __CallSalesForceApplicant_root_0 __ctx0__ = (__CallSalesForceApplicant_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesforceApplicant__cPort != null)
                {
                    __svc__.CallSalesforceApplicant__cPort.Close(this, null);
                    __svc__.CallSalesforceApplicant__cPort = null;
                }
                if (__svc__.CallSalesforceUpdateApplicant__cPort != null)
                {
                    __svc__.CallSalesforceUpdateApplicant__cPort.Close(this, null);
                    __svc__.CallSalesforceUpdateApplicant__cPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper1;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceApplicant_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceApplicant_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceApplicant")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceApplicant __svc__ = (CallSalesForceApplicant)_service;
                __CallSalesForceApplicant_root_0 __ctx0__ = (__CallSalesForceApplicant_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceApplicant_1 __ctx1__ = (__CallSalesForceApplicant_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper1 != null)
                {
                    __ctx0__.__subWrapper1.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper1 = null;
                }
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__UpdateApplicant__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__UpdateApplicant__cResponseMsg);
                    __ctx1__.__UpdateApplicant__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__UpdateApplicant__cRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__UpdateApplicant__cRequestMsg);
                    __ctx1__.__UpdateApplicant__cRequestMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateApplicant__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplicant__cResponseMsg);
                    __ctx1__.__CreateApplicant__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateApplicant__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplicant__cMsg);
                    __ctx1__.__CreateApplicant__cMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("UpdateApplicant__cResponseMsg")]
            internal StatementResponseUpdateApplicant__c __UpdateApplicant__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("TempApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateApplicant__cResponseMsg")]
            internal StatementResponseApplicant__c __CreateApplicant__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateApplicant__cMsg")]
            internal StatementRequestApplicant__c __CreateApplicant__cMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("UpdateApplicant__cRequestMsg")]
            internal StatementRequestUpdateApplicant__c __UpdateApplicant__cRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicantSFIDCount")]
            internal System.Int32 __ApplicantSFIDCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesforceApplicant__cPort")]
        internal CDataServiceSelectApplicant__c CallSalesforceApplicant__cPort;
        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesforceUpdateApplicant__cPort")]
        internal CDataServiceSelectUpdateApplicant__c CallSalesforceUpdateApplicant__cPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectApplicant__c.statement},
                                               typeof(CallSalesForceApplicant).GetField("CallSalesforceApplicant__cPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceApplicant), "CallSalesforceApplicant__cPort"),
                                               null),
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectUpdateApplicant__c.statement},
                                               typeof(CallSalesForceApplicant).GetField("CallSalesforceUpdateApplicant__cPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceApplicant), "CallSalesforceUpdateApplicant__cPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                h[_portInfo[1].Name] = _portInfo[1];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "13f5a103-e2a9-4cd2-8536-a4ef53782c2b", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "13f5a103-e2a9-4cd2-8536-a4ef53782c2b", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "04c2679e-5b04-42e6-b485-e2a60cc743aa", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "04c2679e-5b04-42e6-b485-e2a60cc743aa", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "2b068e4d-95d6-49bc-8630-ec1ab3f9702c", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "2b068e4d-95d6-49bc-8630-ec1ab3f9702c", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "5de1beba-68f2-455d-9458-e0692ca991fc", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "5de1beba-68f2-455d-9458-e0692ca991fc", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "9ee72b2b-1f23-4066-ac5f-0deed6cbee0a", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "9ee72b2b-1f23-4066-ac5f-0deed6cbee0a", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "9988be44-9797-49e3-bc1f-5e5e9cde0e8e", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "9988be44-9797-49e3-bc1f-5e5e9cde0e8e", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "5f2e2712-7b04-4099-9049-e4c7f5b04e81", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "7486d144-9665-460e-9acf-c8dfb9870027", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(16, "7486d144-9665-460e-9acf-c8dfb9870027", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(17, "44531426-b074-4775-9be0-05deff0c4136", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(18, "44531426-b074-4775-9be0-05deff0c4136", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(19, "ad0b792a-7a93-4569-b447-0f0f6de2bd6d", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(20, "ad0b792a-7a93-4569-b447-0f0f6de2bd6d", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(21, "5f2e2712-7b04-4099-9049-e4c7f5b04e81", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,4,5,6,6,7,8,8,9,10,10,11,12,12,13,14,14,15,15,16,17,17,17,18,19,19,20,21,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceApplicant_root_0 __ctx0__ = (__CallSalesForceApplicant_root_0)_stateMgrs[0];
            __CallSalesForceApplicant_1 __ctx1__ = (__CallSalesForceApplicant_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesforceApplicant__cPort = new CDataServiceSelectApplicant__c(0, this);
                CallSalesforceUpdateApplicant__cPort = new CDataServiceSelectUpdateApplicant__c(1, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceApplicant_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceApplicant_root_0 __ctx0__ = (__CallSalesForceApplicant_root_0)_stateMgrs[0];
            __CallSalesForceApplicant_1 __ctx1__ = (__CallSalesForceApplicant_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__ApplicantSFIDCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestApplicant__c __CreateApplicant__cMsg = new StatementRequestApplicant__c("CreateApplicant__cMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Applicant__c.MakeSalesForceApplicant_cRequest), new object[] {__CreateApplicant__cMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateApplicant__cMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateApplicant__cMsg);
                    __ctx1__.__CreateApplicant__cMsg = __CreateApplicant__cMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateApplicant__cMsg);
                }
                __ctx1__.__CreateApplicant__cMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateApplicant__cMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesforceApplicant__cPort.SendMessage(0, __ctx1__.__CreateApplicant__cMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateApplicant__cMsg);
                    __edata.PortName = @"CallSalesforceApplicant__cPort";
                    Tracker.FireEvent(__eventLocations[5],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateApplicant__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplicant__cMsg);
                    __ctx1__.__CreateApplicant__cMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if (!CallSalesforceApplicant__cPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateApplicant__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplicant__cResponseMsg);
                __ctx1__.__CreateApplicant__cResponseMsg = new StatementResponseApplicant__c("CreateApplicant__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateApplicant__cResponseMsg);
                CallSalesforceApplicant__cPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateApplicant__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if (CallSalesforceApplicant__cPort != null)
                {
                    CallSalesforceApplicant__cPort.Close(__ctx1__, __seg__);
                    CallSalesforceApplicant__cPort = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateApplicant__cResponseMsg);
                    __edata.PortName = @"CallSalesforceApplicant__cPort";
                    Tracker.FireEvent(__eventLocations[7],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("TempApplicationCanonical", __ctx1__);

                    __TempApplicationCanonical.CopyFrom(__ctx1__.__ApplicationCanonical);
                    __TempApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__ApplicationCanonical);

                    if (__ctx1__.__TempApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = __TempApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__TempApplicationCanonical);
                }
                __ctx1__.__TempApplicationCanonical.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[9],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[10],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Applicant__c.MakeCanonicalWithApplicantIDSalesForceIDs), new object[] {__ApplicationCanonical.part}, new object[] {__ctx1__.__CreateApplicant__cResponseMsg.parameters, __ctx1__.__TempApplicationCanonical.part});
                    __ApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__TempApplicationCanonical);

                    if (__ctx1__.__ApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = __ApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                }
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__CreateApplicant__cResponseMsg);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[11],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateApplicant__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplicant__cResponseMsg);
                    __ctx1__.__CreateApplicant__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[12],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                __ctx1__.__ApplicantSFIDCount = System.Convert.ToInt32(Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__ApplicationCanonical.part, "count(/*[local-name()='Application' and namespace-uri()='http://SBA.ODA.Gov/CanonicalApplication']/*[local-name()='ApplicantColl' and namespace-uri()='']/*[local-name()='Applicants' and namespace-uri()='']/*[local-name()='SalesForceApplicantID' and namespace-uri()=''])", typeof(System.Object)));
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 22;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[14],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                __condition__ = __ctx1__.__ApplicantSFIDCount > 1;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 34 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 34;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 24;
            case 24:
                if ( !PreProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[15],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 25;
            case 25:
                {
                    StatementRequestUpdateApplicant__c __UpdateApplicant__cRequestMsg = new StatementRequestUpdateApplicant__c("UpdateApplicant__cRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeUpdateApplicantsRequest), new object[] {__UpdateApplicant__cRequestMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__UpdateApplicant__cRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__UpdateApplicant__cRequestMsg);
                    __ctx1__.__UpdateApplicant__cRequestMsg = __UpdateApplicant__cRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__UpdateApplicant__cRequestMsg);
                }
                __ctx1__.__UpdateApplicant__cRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 26;
            case 26:
                if ( !PreProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__UpdateApplicant__cRequestMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[16],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 27;
            case 27:
                if ( !PreProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[17],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 28;
            case 28:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 29;
            case 29:
                if ( !PreProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesforceUpdateApplicant__cPort.SendMessage(0, __ctx1__.__UpdateApplicant__cRequestMsg, null, null, out __ctx0__.__subWrapper1, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 30;
            case 30:
                if ( !PreProgressInc( __seg__, __ctx__, 31 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__UpdateApplicant__cRequestMsg);
                    __edata.PortName = @"CallSalesforceUpdateApplicant__cPort";
                    Tracker.FireEvent(__eventLocations[18],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__UpdateApplicant__cRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__UpdateApplicant__cRequestMsg);
                    __ctx1__.__UpdateApplicant__cRequestMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 31;
            case 31:
                if ( !PreProgressInc( __seg__, __ctx__, 32 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[19],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 32;
            case 32:
                if (!CallSalesforceUpdateApplicant__cPort.GetMessageId(__ctx0__.__subWrapper1.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[1]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper1 != null)
                {
                    __ctx0__.__subWrapper1.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper1 = null;
                }
                if (__ctx1__.__UpdateApplicant__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__UpdateApplicant__cResponseMsg);
                __ctx1__.__UpdateApplicant__cResponseMsg = new StatementResponseUpdateApplicant__c("UpdateApplicant__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__UpdateApplicant__cResponseMsg);
                CallSalesforceUpdateApplicant__cPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__UpdateApplicant__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 33 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 33;
            case 33:
                if ( !PreProgressInc( __seg__, __ctx__, 34 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__UpdateApplicant__cResponseMsg);
                    __edata.PortName = @"CallSalesforceUpdateApplicant__cPort";
                    Tracker.FireEvent(__eventLocations[20],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__UpdateApplicant__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__UpdateApplicant__cResponseMsg);
                    __ctx1__.__UpdateApplicant__cResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 34;
            case 34:
                if ( !PreProgressInc( __seg__, __ctx__, 35 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (CallSalesforceUpdateApplicant__cPort != null)
                {
                    CallSalesforceUpdateApplicant__cPort.Close(__ctx1__, __seg__);
                    CallSalesforceUpdateApplicant__cPort = null;
                }
                Tracker.FireEvent(__eventLocations[21],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 35;
            case 35:
                if ( !PreProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 36;
            case 36:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 37 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 37;
            case 37:
                if ( !PreProgressInc( __seg__, __ctx__, 38 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 38;
            case 38:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 39 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 39;
            case 39:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{30BD0AB2-D797-4E74-A16F-FFF819FA1D8E}")),
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{47977092-276C-4E91-B310-1BBB90706AD4}"))
        };

    }
    //#line 643 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Application__c\CallSalesForceApplication__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses,
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.RestDisasterLookupPortType),
            typeof(Application_Import_Logic.CDataServiceSelectApplication__c)
        },
        new System.String[] {
            "RestDisasterLookupPort",
            "CallSalesForceApplication__cPort"
        },
        new System.Type[] {
            null,
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceApplication__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] ref System.String EventStatus,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] ref System.String EventMessage)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceApplication__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceApplication__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceApplication__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceApplication__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceApplication__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceApplication__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceApplication__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>eca9553f-33db-4878-98ce-40a030241cd0</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>a6deaa50-061c-46dc-8cb4-654546e79601</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>fc286169-d241-454f-90e3-10d38ff7abfc</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>EventStatus</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>99d73698-93c3-43db-8b95-933ce90a3a24</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>EventMessage</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>a8297db2-8ad7-4d10-81b3-8ded4c9325de</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Lookup Disaster</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>301f239e-bd60-40a6-ae39-bac472da9e4f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>CreateLookupDisasterMsg</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>9743a50b-35e5-4302-b51d-0ac4a765da75</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Rest Disaster Lookup Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d4a47fa3-a73a-4c9b-b983-9bdad7aa7597</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_9</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d4dfcb32-4248-4499-9d7f-96ceef6ded1c</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_10</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>2d338aaf-077e-4ad6-a7b0-0e9fcf89961c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Disater Lookup Query Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>dae415ce-82f7-4190-941a-5aec76f2b279</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>6f4372aa-2f5a-47cb-b139-ba8b2c48b7c6</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>6fda9810-5115-4c71-a99a-30b442f6078f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>b1e11ef9-be12-4f7c-a35f-44baef453507</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct SF Response Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>570bb6e5-9bed-4c5b-98d6-2199d07e0ac5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Salesforce Disaster Lookup Response</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>bcdcc7cb-aa06-4d18-b694-64f5d0a31886</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>46be2c30-8845-4c7c-b8c8-0f7da4a4911e</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_4</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>f762223a-6a18-4bf1-955c-bb3923fc5fa0</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>700a9139-6944-4020-a1f9-37657b7e2ff3</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Extract SF Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>f3558208-66f8-4fe8-856d-894a9d9ac9a2</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Check for empty response</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>4b37838b-d111-4933-9acb-a6751d2e95ab</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Is response empty?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>2b3c95f2-af35-4b9d-b256-160950644aa2</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Set Variables</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>3a2c1a65-0dbb-4f3b-ac94-87999cd22cd6</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>e45db35d-8686-489b-a24e-93269d394426</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Application</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>ebcd6caa-3c9e-4d1f-8dac-34c3dd82f902</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>7682f49b-5a43-4168-b6ee-26be616c4182</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>54396ec1-3d32-44a2-af72-6b34dcfea824</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Create Application__c Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>ca014f8e-b3ac-4fc7-aa02-47accbf7a626</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Request Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>211d57cf-809d-4923-86a8-ae6b181f7e3e</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>a0806b57-957c-4863-b4dd-b8f81aa5eadb</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_8</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d3d8c07d-6bf3-49ec-885c-c2dfbe1454b4</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>110559eb-5ca6-42bd-a1dd-4200cc57fa87</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>7ccea02b-d07e-44a3-bc07-f7374d77176c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Create Application__c Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>32362c41-d5ab-405b-b641-7e93f4c31a4e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Create Application__c Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>70cfda92-8667-47a8-8af1-c6151815b053</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign SalesForce ID</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>64d44a37-8ac9-45b5-9d05-0cc12d6b4fcc</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>48924b25-8107-4c30-a5e4-be356a4b8541</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Recreate Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>8326dc22-a115-42f7-aab4-9e256f1b11fc</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Success?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>6fc30417-51f1-41fd-a484-6dec9d72cc4d</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Yes</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>7a36675e-da57-4103-a702-e6d899f7cf24</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Temp Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>e9250d76-25a0-47ed-82f2-ff7d0d00c3e5</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>d805e2a4-6d37-480e-930a-f0bc97bdd949</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Temp</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>73d08a69-765c-45c9-bb6b-11fed3581b52</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Re-construct canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>e1569da9-747d-48fa-b2da-26a55ece090d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Recreate Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d807edfd-a314-45de-a5a7-9644f3d09d63</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_5</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>89a8b7da-3b6d-4e33-81e5-017a8020b7f2</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_6</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>a1e65bff-57ed-4f33-91fa-fcc6f508071c</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_7</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>fd9ec0fe-2d91-4e46-a6ae-43b863d490e6</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Canonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>afbeb0ce-5085-4522-9967-71e7b090649d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Application__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>719eb67b-a9a4-4759-95a7-e0afcef08a62</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>1869722e-94c2-4318-958c-8c701dfb0898</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceApplication__c'</ActionName><IsAtomic>0</IsAtomic><Line>643</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>669</Line><Position>13</Position><ShapeID>'301f239e-bd60-40a6-ae39-bac472da9e4f'</ShapeID>
<Messages>
	<MsgInfo><name>RestCreateDisasterLookupRequest</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupRequest</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>686</Line><Position>13</Position><ShapeID>'6f4372aa-2f5a-47cb-b139-ba8b2c48b7c6'</ShapeID>
<Messages>
	<MsgInfo><name>RestCreateDisasterLookupRequest</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupRequest</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>688</Line><Position>13</Position><ShapeID>'6fda9810-5115-4c71-a99a-30b442f6078f'</ShapeID>
<Messages>
	<MsgInfo><name>RestCreateDisasterLookupResponse</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupResponse</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>690</Line><Position>13</Position><ShapeID>'b1e11ef9-be12-4f7c-a35f-44baef453507'</ShapeID>
<Messages>
	<MsgInfo><name>CreateLookupDisasterResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup+table</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>RestCreateDisasterLookupResponse</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupResponse</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>696</Line><Position>33</Position><ShapeID>'700a9139-6944-4020-a1f9-37657b7e2ff3'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>698</Line><Position>13</Position><ShapeID>'f3558208-66f8-4fe8-856d-894a9d9ac9a2'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>701</Line><Position>29</Position><ShapeID>'2b3c95f2-af35-4b9d-b256-160950644aa2'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>705</Line><Position>13</Position><ShapeID>'ebcd6caa-3c9e-4d1f-8dac-34c3dd82f902'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>708</Line><Position>17</Position><ShapeID>'54396ec1-3d32-44a2-af72-6b34dcfea824'</ShapeID>
<Messages>
	<MsgInfo><name>CreateApplication__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>CreateLookupDisasterResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup+table</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>714</Line><Position>17</Position><ShapeID>'7ccea02b-d07e-44a3-bc07-f7374d77176c'</ShapeID>
<Messages>
	<MsgInfo><name>CreateApplication__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>716</Line><Position>17</Position><ShapeID>'32362c41-d5ab-405b-b641-7e93f4c31a4e'</ShapeID>
<Messages>
	<MsgInfo><name>CreateApplication__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>718</Line><Position>26</Position><ShapeID>'70cfda92-8667-47a8-8af1-c6151815b053'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>722</Line><Position>13</Position><ShapeID>'8326dc22-a115-42f7-aab4-9e256f1b11fc'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>725</Line><Position>17</Position><ShapeID>'7a36675e-da57-4103-a702-e6d899f7cf24'</ShapeID>
<Messages>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>732</Line><Position>17</Position><ShapeID>'73d08a69-765c-45c9-bb6b-11fed3581b52'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>CreateLookupDisasterResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup+table</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='95d9ef54-451e-4155-8cfb-b022d1f5b5f4' LowerBound='1.1' HigherBound='145.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='3cee8f4d-520c-4b21-a1c0-9daa3d03100a' ParentLink='Module_ServiceDeclaration' LowerBound='42.1' HigherBound='144.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceApplication__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='75192247-73b8-4c3a-9f9e-287bc8509cca' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='57.1' HigherBound='58.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='strXpath' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='f6fa036a-612d-4fef-94a2-caf0f9ceb72f' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='58.1' HigherBound='59.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DisasterLookupValue' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='2580fc2e-aa37-4067-9121-574ac1cf79d9' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='59.1' HigherBound='60.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesForceApplication__cID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='57839229-b4db-466d-914b-eceefcd5cfff' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='60.1' HigherBound='61.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='External_Id_DMS_Number__Value' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='2d51b9fa-69e0-4990-a21e-deaeca3fa6a7' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='61.1' HigherBound='62.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='External_Id_DMS_Number_SOQL_QUERY' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='0670c6b7-6521-4671-94b9-ed996a93c231' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='50.1' HigherBound='51.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestApplication__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateApplication__cMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='f6e73fcb-8f96-453a-aed4-bf9033743024' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='51.1' HigherBound='52.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseApplication__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateApplication__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='b8921a60-7586-4bb2-a0d8-79f72a846926' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='52.1' HigherBound='53.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempApplicationCanonical' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='45f2ed97-2621-4052-bc23-736f726427c2' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='53.1' HigherBound='54.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestDisasterLookup' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateLookupDisasterMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='d8601f84-24cf-437c-aa99-295c7949164e' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='54.1' HigherBound='55.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseDisasterLookup' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateLookupDisasterResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='cda7e3e5-6cdb-42ff-9bf9-432be70dad5e' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='55.1' HigherBound='56.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestStatementDisasterLookupRequest' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestCreateDisasterLookupRequest' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='9241072c-07f6-4ab1-9988-709ed1f5a3d1' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='56.1' HigherBound='57.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestStatementDisasterLookupResponse' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestCreateDisasterLookupResponse' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='eca9553f-33db-4878-98ce-40a030241cd0' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='a6deaa50-061c-46dc-8cb4-654546e79601' ParentLink='ServiceBody_Declaration' LowerBound='62.15' HigherBound='62.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='fc286169-d241-454f-90e3-10d38ff7abfc' ParentLink='ServiceBody_Declaration' LowerBound='62.116' HigherBound='62.145'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='EventStatus' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='99d73698-93c3-43db-8b95-933ce90a3a24' ParentLink='ServiceBody_Declaration' LowerBound='62.147' HigherBound='62.177'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='EventMessage' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='a8297db2-8ad7-4d10-81b3-8ded4c9325de' ParentLink='ServiceBody_Statement' LowerBound='68.1' HigherBound='104.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Lookup Disaster' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='301f239e-bd60-40a6-ae39-bac472da9e4f' ParentLink='ComplexStatement_Statement' LowerBound='68.1' HigherBound='85.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='CreateLookupDisasterMsg' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='9743a50b-35e5-4302-b51d-0ac4a765da75' ParentLink='ComplexStatement_Statement' LowerBound='71.1' HigherBound='73.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.MakeRestDisasterLookupRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Make Rest Disaster Lookup Request' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='d4a47fa3-a73a-4c9b-b983-9bdad7aa7597' ParentLink='Transform_InputMessagePartRef' LowerBound='72.131' HigherBound='72.151'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_9' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='d4dfcb32-4248-4499-9d7f-96ceef6ded1c' ParentLink='Transform_OutputMessagePartRef' LowerBound='72.28' HigherBound='72.71'>
                                <om:Property Name='MessageRef' Value='RestCreateDisasterLookupRequest' />
                                <om:Property Name='PartRef' Value='MessagePart' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_10' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageAssignment' OID='2d338aaf-077e-4ad6-a7b0-0e9fcf89961c' ParentLink='ComplexStatement_Statement' LowerBound='73.1' HigherBound='84.1'>
                            <om:Property Name='Expression' Value='External_Id_DMS_Number__Value = xpath(ApplicationCanonical, &quot;string(/*[local-name()=&apos;Application&apos; and namespace-uri()=&apos;http://SBA.ODA.Gov/CanonicalApplication&apos;]/*[local-name()=&apos;APP_PRO_ID&apos; and namespace-uri()=&apos;&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;//SOQL Query For Rest&#xD;&#xA;&#xD;&#xA;External_Id_DMS_Number_SOQL_QUERY = @&quot;Select Id,External_Id_DMS_Number__c from Disaster__c where External_Id_DMS_Number__c IN &quot;+&quot;(&quot;+&quot;&apos;&quot;+External_Id_DMS_Number__Value+&quot;&apos;&quot;+&quot;)&quot; +&quot;AND External_Id_DMS_Number__c&quot; +&quot;!=&quot;+&quot;null&quot;;&#xD;&#xA;&#xD;&#xA;RestCreateDisasterLookupRequest(Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.External_Id_DMS_Number__c) = External_Id_DMS_Number_SOQL_QUERY;' />
                            <om:Property Name='ReportToAnalyst' Value='False' />
                            <om:Property Name='Name' Value='Make Disater Lookup Query Request' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='MessageRef' OID='dae415ce-82f7-4190-941a-5aec76f2b279' ParentLink='Construct_MessageRef' LowerBound='69.23' HigherBound='69.54'>
                            <om:Property Name='Ref' Value='RestCreateDisasterLookupRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Send' OID='6f4372aa-2f5a-47cb-b139-ba8b2c48b7c6' ParentLink='ComplexStatement_Statement' LowerBound='85.1' HigherBound='87.1'>
                        <om:Property Name='PortName' Value='RestDisasterLookupPort' />
                        <om:Property Name='MessageName' Value='RestCreateDisasterLookupRequest' />
                        <om:Property Name='OperationName' Value='Operation' />
                        <om:Property Name='OperationMessageName' Value='Request' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Send Request' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Receive' OID='6fda9810-5115-4c71-a99a-30b442f6078f' ParentLink='ComplexStatement_Statement' LowerBound='87.1' HigherBound='89.1'>
                        <om:Property Name='Activate' Value='False' />
                        <om:Property Name='PortName' Value='RestDisasterLookupPort' />
                        <om:Property Name='MessageName' Value='RestCreateDisasterLookupResponse' />
                        <om:Property Name='OperationName' Value='Operation' />
                        <om:Property Name='OperationMessageName' Value='Response' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Receive Response' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Construct' OID='b1e11ef9-be12-4f7c-a35f-44baef453507' ParentLink='ComplexStatement_Statement' LowerBound='89.1' HigherBound='95.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct SF Response Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='570bb6e5-9bed-4c5b-98d6-2199d07e0ac5' ParentLink='ComplexStatement_Statement' LowerBound='92.1' HigherBound='94.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.MakeSalesforceDisasterLookupResponse' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Make Salesforce Disaster Lookup Response' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='bcdcc7cb-aa06-4d18-b694-64f5d0a31886' ParentLink='Transform_InputMessagePartRef' LowerBound='93.137' HigherBound='93.181'>
                                <om:Property Name='MessageRef' Value='RestCreateDisasterLookupResponse' />
                                <om:Property Name='PartRef' Value='MessagePart' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_3' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='46be2c30-8845-4c7c-b8c8-0f7da4a4911e' ParentLink='Transform_OutputMessagePartRef' LowerBound='93.28' HigherBound='93.70'>
                                <om:Property Name='MessageRef' Value='CreateLookupDisasterResponseMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_4' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='f762223a-6a18-4bf1-955c-bb3923fc5fa0' ParentLink='Construct_MessageRef' LowerBound='90.23' HigherBound='90.54'>
                            <om:Property Name='Ref' Value='CreateLookupDisasterResponseMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='700a9139-6944-4020-a1f9-37657b7e2ff3' ParentLink='ComplexStatement_Statement' LowerBound='95.1' HigherBound='97.1'>
                        <om:Property Name='Expression' Value='DisasterLookupValue = System.Convert.ToInt32(xpath(CreateLookupDisasterResponseMsg.parameters, &quot;count(/*[local-name()=&apos;table&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/DisasterLookup&apos;]/*[local-name()=&apos;row&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/DisasterLookup&apos;]/*[local-name()=&apos;Id&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/DisasterLookup&apos;]/text())&quot;));' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Extract SF Response' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                    <om:Element Type='Decision' OID='f3558208-66f8-4fe8-856d-894a9d9ac9a2' ParentLink='ComplexStatement_Statement' LowerBound='97.1' HigherBound='104.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Check for empty response' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='4b37838b-d111-4933-9acb-a6751d2e95ab' ParentLink='ReallyComplexStatement_Branch' LowerBound='98.13' HigherBound='104.1'>
                            <om:Property Name='Expression' Value='DisasterLookupValue == 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Is response empty?' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='VariableAssignment' OID='2b3c95f2-af35-4b9d-b256-160950644aa2' ParentLink='ComplexStatement_Statement' LowerBound='100.1' HigherBound='103.1'>
                                <om:Property Name='Expression' Value='EventStatus = &quot;Failure&quot;;&#xD;&#xA;EventMessage = &quot;Disaster lookup failed, disaster does not exist in SalesForce&quot;;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Set Variables' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='3a2c1a65-0dbb-4f3b-ac94-87999cd22cd6' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
                <om:Element Type='Task' OID='e45db35d-8686-489b-a24e-93269d394426' ParentLink='ServiceBody_Statement' LowerBound='104.1' HigherBound='121.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Application' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Decision' OID='ebcd6caa-3c9e-4d1f-8dac-34c3dd82f902' ParentLink='ComplexStatement_Statement' LowerBound='104.1' HigherBound='121.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Success?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='7682f49b-5a43-4168-b6ee-26be616c4182' ParentLink='ReallyComplexStatement_Branch' LowerBound='105.13' HigherBound='121.1'>
                            <om:Property Name='Expression' Value='EventStatus == &quot;Success&quot;' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Yes' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='Construct' OID='54396ec1-3d32-44a2-af72-6b34dcfea824' ParentLink='ComplexStatement_Statement' LowerBound='107.1' HigherBound='113.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Construct Create Application__c Message' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='Transform' OID='ca014f8e-b3ac-4fc7-aa02-47accbf7a626' ParentLink='ComplexStatement_Statement' LowerBound='110.1' HigherBound='112.1'>
                                    <om:Property Name='ClassName' Value='Application_Import_Logic.Application__c.MakeSalesForceApplication__cMsg' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Create Request Message' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='MessagePartRef' OID='211d57cf-809d-4923-86a8-ae6b181f7e3e' ParentLink='Transform_InputMessagePartRef' LowerBound='111.143' HigherBound='111.163'>
                                        <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_1' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessagePartRef' OID='a0806b57-957c-4863-b4dd-b8f81aa5eadb' ParentLink='Transform_InputMessagePartRef' LowerBound='111.165' HigherBound='111.207'>
                                        <om:Property Name='MessageRef' Value='CreateLookupDisasterResponseMsg' />
                                        <om:Property Name='PartRef' Value='parameters' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_8' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessagePartRef' OID='d3d8c07d-6bf3-49ec-885c-c2dfbe1454b4' ParentLink='Transform_OutputMessagePartRef' LowerBound='111.32' HigherBound='111.66'>
                                        <om:Property Name='MessageRef' Value='CreateApplication__cMsg' />
                                        <om:Property Name='PartRef' Value='parameters' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_2' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='MessageRef' OID='110559eb-5ca6-42bd-a1dd-4200cc57fa87' ParentLink='Construct_MessageRef' LowerBound='108.27' HigherBound='108.50'>
                                    <om:Property Name='Ref' Value='CreateApplication__cMsg' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                            <om:Element Type='Send' OID='7ccea02b-d07e-44a3-bc07-f7374d77176c' ParentLink='ComplexStatement_Statement' LowerBound='113.1' HigherBound='115.1'>
                                <om:Property Name='PortName' Value='CallSalesForceApplication__cPort' />
                                <om:Property Name='MessageName' Value='CreateApplication__cMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Create Application__c Request' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='32362c41-d5ab-405b-b641-7e93f4c31a4e' ParentLink='ComplexStatement_Statement' LowerBound='115.1' HigherBound='117.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='CallSalesForceApplication__cPort' />
                                <om:Property Name='MessageName' Value='CreateApplication__cResponseMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Create Application__c Response' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='VariableAssignment' OID='70cfda92-8667-47a8-8af1-c6151815b053' ParentLink='ComplexStatement_Statement' LowerBound='117.1' HigherBound='120.1'>
                                <om:Property Name='Expression' Value='strXpath = &quot;string(/*[local-name()=&apos;table&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Application__c&apos;]/*[local-name()=&apos;row&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Application__c&apos;]/*[local-name()=&apos;Id&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Application__c&apos;]/text())&quot;;&#xD;&#xA;SalesForceApplication__cID=xpath(CreateApplication__cResponseMsg.parameters, strXpath);' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Assign SalesForce ID' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='64d44a37-8ac9-45b5-9d05-0cc12d6b4fcc' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
                <om:Element Type='Task' OID='48924b25-8107-4c30-a5e4-be356a4b8541' ParentLink='ServiceBody_Statement' LowerBound='121.1' HigherBound='142.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Recreate Canonical' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Decision' OID='8326dc22-a115-42f7-aab4-9e256f1b11fc' ParentLink='ComplexStatement_Statement' LowerBound='121.1' HigherBound='142.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Success?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='6fc30417-51f1-41fd-a484-6dec9d72cc4d' ParentLink='ReallyComplexStatement_Branch' LowerBound='122.13' HigherBound='142.1'>
                            <om:Property Name='Expression' Value='EventStatus == &quot;Success&quot;' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Yes' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Construct' OID='7a36675e-da57-4103-a702-e6d899f7cf24' ParentLink='ComplexStatement_Statement' LowerBound='124.1' HigherBound='131.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Construct Temp Message' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='MessageRef' OID='e9250d76-25a0-47ed-82f2-ff7d0d00c3e5' ParentLink='Construct_MessageRef' LowerBound='125.27' HigherBound='125.51'>
                                    <om:Property Name='Ref' Value='TempApplicationCanonical' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                                <om:Element Type='MessageAssignment' OID='d805e2a4-6d37-480e-930a-f0bc97bdd949' ParentLink='ComplexStatement_Statement' LowerBound='127.1' HigherBound='130.1'>
                                    <om:Property Name='Expression' Value='TempApplicationCanonical=ApplicationCanonical;&#xD;&#xA;TempApplicationCanonical(*)=ApplicationCanonical(*);' />
                                    <om:Property Name='ReportToAnalyst' Value='False' />
                                    <om:Property Name='Name' Value='Assign Temp' />
                                    <om:Property Name='Signal' Value='True' />
                                </om:Element>
                            </om:Element>
                            <om:Element Type='Construct' OID='73d08a69-765c-45c9-bb6b-11fed3581b52' ParentLink='ComplexStatement_Statement' LowerBound='131.1' HigherBound='141.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Re-construct canonical' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='Transform' OID='e1569da9-747d-48fa-b2da-26a55ece090d' ParentLink='ComplexStatement_Statement' LowerBound='134.1' HigherBound='136.1'>
                                    <om:Property Name='ClassName' Value='Application_Import_Logic.RecreateCanonical' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Recreate Canonical' />
                                    <om:Property Name='Signal' Value='False' />
                                    <om:Element Type='MessagePartRef' OID='d807edfd-a314-45de-a5a7-9644f3d09d63' ParentLink='Transform_InputMessagePartRef' LowerBound='135.100' HigherBound='135.124'>
                                        <om:Property Name='MessageRef' Value='TempApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_5' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessagePartRef' OID='89a8b7da-3b6d-4e33-81e5-017a8020b7f2' ParentLink='Transform_InputMessagePartRef' LowerBound='135.126' HigherBound='135.168'>
                                        <om:Property Name='MessageRef' Value='CreateLookupDisasterResponseMsg' />
                                        <om:Property Name='PartRef' Value='parameters' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_6' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessagePartRef' OID='a1e65bff-57ed-4f33-91fa-fcc6f508071c' ParentLink='Transform_OutputMessagePartRef' LowerBound='135.32' HigherBound='135.52'>
                                        <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='MessagePartReference_7' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='MessageAssignment' OID='fd9ec0fe-2d91-4e46-a6ae-43b863d490e6' ParentLink='ComplexStatement_Statement' LowerBound='136.1' HigherBound='138.1'>
                                    <om:Property Name='Expression' Value='ApplicationCanonical(*)=TempApplicationCanonical(*);&#xD;&#xA;' />
                                    <om:Property Name='ReportToAnalyst' Value='False' />
                                    <om:Property Name='Name' Value='Assign Canonical' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                                <om:Element Type='MessageAssignment' OID='afbeb0ce-5085-4522-9967-71e7b090649d' ParentLink='ComplexStatement_Statement' LowerBound='138.1' HigherBound='140.1'>
                                    <om:Property Name='Expression' Value='ApplicationCanonical.SalesForceApplication__cID=SalesForceApplication__cID;' />
                                    <om:Property Name='ReportToAnalyst' Value='False' />
                                    <om:Property Name='Name' Value='Assign Application__c' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                                <om:Element Type='MessageRef' OID='719eb67b-a9a4-4759-95a7-e0afcef08a62' ParentLink='Construct_MessageRef' LowerBound='132.27' HigherBound='132.47'>
                                    <om:Property Name='Ref' Value='ApplicationCanonical' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='1869722e-94c2-4318-958c-8c701dfb0898' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='eda4f86f-193f-4a91-80c9-280c1a49d15c' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='45.1' HigherBound='48.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='7' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='Transmitted' />
                <om:Property Name='Type' Value='Application_Import_Logic.RestDisasterLookupPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestDisasterLookupPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='LogicalBindingAttribute' OID='88dc199e-6817-46be-8721-33796705a56d' ParentLink='PortDeclaration_CLRAttribute' LowerBound='45.1' HigherBound='46.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='b26a0177-7694-4976-b565-3275911056fb' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='48.1' HigherBound='50.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='33' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectApplication__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForceApplication__cPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='eabad158-054b-4e46-a416-2b9479995879' ParentLink='PortDeclaration_CLRAttribute' LowerBound='48.1' HigherBound='49.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='a0b41cc3-e67a-46a6-95a5-49e9d7656072' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestDisasterLookup' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='0b5b92d6-0c99-42af-a462-00782f46dd56' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='f066ef43-54ec-46e5-af88-f8c2e0a14d89' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseDisasterLookup' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='aa52d638-a055-4598-8fd3-51fca920f906' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceDisasterLookup.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='27699b85-983f-40a1-86aa-3fa0a3419619' ParentLink='Module_MessageType' LowerBound='12.1' HigherBound='16.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseApplication__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='4bfc7da7-cd7e-4250-b0b6-4b09547fe1ac' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='14.1' HigherBound='15.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='af564812-c6fe-4666-aa27-528ea0a7f10b' ParentLink='Module_MessageType' LowerBound='16.1' HigherBound='20.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestApplication__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='a20e9ea9-83b5-49eb-b60e-7263a6ba8324' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='18.1' HigherBound='19.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceApplication__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='2d0196cb-3fb9-4f84-8649-93df3d27e8ad' ParentLink='Module_MessageType' LowerBound='20.1' HigherBound='24.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestStatementDisasterLookupRequest' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='b8dc6c6c-32e2-408e-b0c9-68686f0660ee' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='22.1' HigherBound='23.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupRequest' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='6e74bd58-4aa0-4104-b855-44ddeda218e5' ParentLink='Module_MessageType' LowerBound='24.1' HigherBound='28.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestStatementDisasterLookupResponse' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='e8c9458b-5109-4dc3-88a2-a5df5265fde2' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.RestDisasterLookupResponse' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='d63b544e-aead-4b9e-87b2-7157fc652521' ParentLink='Module_PortType' LowerBound='28.1' HigherBound='35.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='RestDisasterLookupPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='8e9d5051-8f9f-4beb-8c21-0f8bf1de64a7' ParentLink='PortType_OperationDeclaration' LowerBound='30.1' HigherBound='34.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='229dff2c-79b8-40cf-8582-cb8d5785f630' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='32.49' HigherBound='32.84'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestStatementDisasterLookupResponse' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='882c89e4-b16b-438f-8cff-830bfe1b28b1' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='32.13' HigherBound='32.47'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestStatementDisasterLookupRequest' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='a7378fae-a0c0-4b95-9dda-e41a97b40e89' ParentLink='Module_PortType' LowerBound='35.1' HigherBound='42.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectApplication__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='d57d939b-326d-4084-ba77-ddcd0f1ef830' ParentLink='PortType_OperationDeclaration' LowerBound='37.1' HigherBound='41.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='e444a558-a7bc-4826-b955-cc7bd412355e' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='39.45' HigherBound='39.76'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseApplication__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='7cd709ae-24c9-4a1e-81e4-60a77e4c1dac' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='39.13' HigherBound='39.43'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestApplication__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceApplication__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceApplication__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceApplication__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceApplication__c __svc__ = (CallSalesForceApplication__c)_service;
                __CallSalesForceApplication__c_root_0 __ctx0__ = (__CallSalesForceApplication__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.RestDisasterLookupPort != null)
                {
                    __svc__.RestDisasterLookupPort.Close(this, null);
                    __svc__.RestDisasterLookupPort = null;
                }
                if (__svc__.CallSalesForceApplication__cPort != null)
                {
                    __svc__.CallSalesForceApplication__cPort.Close(this, null);
                    __svc__.CallSalesForceApplication__cPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper1;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceApplication__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceApplication__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceApplication__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceApplication__c __svc__ = (CallSalesForceApplication__c)_service;
                __CallSalesForceApplication__c_root_0 __ctx0__ = (__CallSalesForceApplication__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceApplication__c_1 __ctx1__ = (__CallSalesForceApplication__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx0__ != null && __ctx0__.__subWrapper1 != null)
                {
                    __ctx0__.__subWrapper1.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper1 = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__EventMessage = null;
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__EventStatus = null;
                if (__ctx1__ != null && __ctx1__.__RestCreateDisasterLookupResponse != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestCreateDisasterLookupResponse);
                    __ctx1__.__RestCreateDisasterLookupResponse = null;
                }
                if (__ctx1__ != null && __ctx1__.__RestCreateDisasterLookupRequest != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestCreateDisasterLookupRequest);
                    __ctx1__.__RestCreateDisasterLookupRequest = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__SalesForceApplication__cID = null;
                if (__ctx1__ != null && __ctx1__.__CreateApplication__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplication__cMsg);
                    __ctx1__.__CreateApplication__cMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateApplication__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplication__cResponseMsg);
                    __ctx1__.__CreateApplication__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateLookupDisasterResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateLookupDisasterResponseMsg);
                    __ctx1__.__CreateLookupDisasterResponseMsg = null;
                }
                if (__ctx1__ != null)
                    __ctx1__.__strXpath = null;
                if (__ctx1__ != null)
                    __ctx1__.__External_Id_DMS_Number_SOQL_QUERY = null;
                if (__ctx1__ != null)
                    __ctx1__.__External_Id_DMS_Number__Value = null;
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateApplication__cMsg")]
            internal StatementRequestApplication__c __CreateApplication__cMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateApplication__cResponseMsg")]
            internal StatementResponseApplication__c __CreateApplication__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("TempApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateLookupDisasterResponseMsg")]
            internal StatementResponseDisasterLookup __CreateLookupDisasterResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestCreateDisasterLookupRequest")]
            internal RestStatementDisasterLookupRequest __RestCreateDisasterLookupRequest;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestCreateDisasterLookupResponse")]
            internal RestStatementDisasterLookupResponse __RestCreateDisasterLookupResponse;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("strXpath")]
            internal System.String __strXpath;
            [Microsoft.XLANGs.Core.UserVariableAttribute("DisasterLookupValue")]
            internal System.Int32 __DisasterLookupValue;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesForceApplication__cID")]
            internal System.String __SalesForceApplication__cID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("External_Id_DMS_Number__Value")]
            internal System.String __External_Id_DMS_Number__Value;
            [Microsoft.XLANGs.Core.UserVariableAttribute("External_Id_DMS_Number_SOQL_QUERY")]
            internal System.String __External_Id_DMS_Number_SOQL_QUERY;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EventStatus")]
            internal System.String __EventStatus;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EventMessage")]
            internal System.String __EventMessage;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.DeliveryNotificationAttribute(Microsoft.XLANGs.BaseTypes.DeliveryNotificationAttribute.NotificationLevel.Transmitted)]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("RestDisasterLookupPort")]
        internal RestDisasterLookupPortType RestDisasterLookupPort;
        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForceApplication__cPort")]
        internal CDataServiceSelectApplication__c CallSalesForceApplication__cPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {RestDisasterLookupPortType.Operation},
                                               typeof(CallSalesForceApplication__c).GetField("RestDisasterLookupPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceApplication__c), "RestDisasterLookupPort"),
                                               null),
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectApplication__c.statement},
                                               typeof(CallSalesForceApplication__c).GetField("CallSalesForceApplication__cPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceApplication__c), "CallSalesForceApplication__cPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                h[_portInfo[1].Name] = _portInfo[1];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "301f239e-bd60-40a6-ae39-bac472da9e4f", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "301f239e-bd60-40a6-ae39-bac472da9e4f", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "6f4372aa-2f5a-47cb-b139-ba8b2c48b7c6", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "6f4372aa-2f5a-47cb-b139-ba8b2c48b7c6", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "6fda9810-5115-4c71-a99a-30b442f6078f", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "6fda9810-5115-4c71-a99a-30b442f6078f", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "b1e11ef9-be12-4f7c-a35f-44baef453507", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "b1e11ef9-be12-4f7c-a35f-44baef453507", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "700a9139-6944-4020-a1f9-37657b7e2ff3", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "700a9139-6944-4020-a1f9-37657b7e2ff3", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "f3558208-66f8-4fe8-856d-894a9d9ac9a2", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "2b3c95f2-af35-4b9d-b256-160950644aa2", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "2b3c95f2-af35-4b9d-b256-160950644aa2", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "f3558208-66f8-4fe8-856d-894a9d9ac9a2", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(16, "ebcd6caa-3c9e-4d1f-8dac-34c3dd82f902", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(17, "54396ec1-3d32-44a2-af72-6b34dcfea824", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(18, "54396ec1-3d32-44a2-af72-6b34dcfea824", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(19, "7ccea02b-d07e-44a3-bc07-f7374d77176c", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(20, "7ccea02b-d07e-44a3-bc07-f7374d77176c", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(21, "32362c41-d5ab-405b-b641-7e93f4c31a4e", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(22, "32362c41-d5ab-405b-b641-7e93f4c31a4e", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(23, "70cfda92-8667-47a8-8af1-c6151815b053", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(24, "70cfda92-8667-47a8-8af1-c6151815b053", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(25, "ebcd6caa-3c9e-4d1f-8dac-34c3dd82f902", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(26, "8326dc22-a115-42f7-aab4-9e256f1b11fc", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(27, "7a36675e-da57-4103-a702-e6d899f7cf24", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(28, "7a36675e-da57-4103-a702-e6d899f7cf24", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(29, "73d08a69-765c-45c9-bb6b-11fed3581b52", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(30, "73d08a69-765c-45c9-bb6b-11fed3581b52", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(31, "8326dc22-a115-42f7-aab4-9e256f1b11fc", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,1,1,1,1,2,2,3,4,4,4,5,6,6,7,8,8,9,10,10,11,12,12,13,13,14,14,15,16,16,17,17,18,19,19,19,20,21,21,22,23,23,24,24,25,26,26,27,27,28,29,29,30,31,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceApplication__c_root_0 __ctx0__ = (__CallSalesForceApplication__c_root_0)_stateMgrs[0];
            __CallSalesForceApplication__c_1 __ctx1__ = (__CallSalesForceApplication__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                RestDisasterLookupPort = new RestDisasterLookupPortType(0, this);
                CallSalesForceApplication__cPort = new CDataServiceSelectApplication__c(1, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceApplication__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceApplication__c_root_0 __ctx0__ = (__CallSalesForceApplication__c_root_0)_stateMgrs[0];
            __CallSalesForceApplication__c_1 __ctx1__ = (__CallSalesForceApplication__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__EventStatus = (System.String)Args[1];
                __ctx1__.__EventMessage = (System.String)Args[2];
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__strXpath = default(System.String);
                __ctx1__.__DisasterLookupValue = default(System.Int32);
                __ctx1__.__SalesForceApplication__cID = default(System.String);
                __ctx1__.__External_Id_DMS_Number__Value = default(System.String);
                __ctx1__.__External_Id_DMS_Number_SOQL_QUERY = default(System.String);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __ctx1__.__strXpath = "";
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.__SalesForceApplication__cID = "";
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                __ctx1__.__External_Id_DMS_Number__Value = "";
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                __ctx1__.__External_Id_DMS_Number_SOQL_QUERY = "";
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                {
                    RestStatementDisasterLookupRequest __RestCreateDisasterLookupRequest = new RestStatementDisasterLookupRequest("RestCreateDisasterLookupRequest", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeRestDisasterLookupRequest), new object[] {__RestCreateDisasterLookupRequest.MessagePart}, new object[] {__ctx1__.__ApplicationCanonical.part});
                    __ctx1__.__External_Id_DMS_Number__Value = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__ApplicationCanonical.part, "string(/*[local-name()='Application' and namespace-uri()='http://SBA.ODA.Gov/CanonicalApplication']/*[local-name()='APP_PRO_ID' and namespace-uri()=''])", typeof(System.String));
                    __ctx1__.__External_Id_DMS_Number_SOQL_QUERY = @"Select Id,External_Id_DMS_Number__c from Disaster__c where External_Id_DMS_Number__c IN " + "(" + "'" + __ctx1__.__External_Id_DMS_Number__Value + "'" + ")" + "AND External_Id_DMS_Number__c" + "!=" + "null";
                    if (__ctx1__ != null)
                        __ctx1__.__External_Id_DMS_Number__Value = null;
                    __RestCreateDisasterLookupRequest.SetPropertyValue(typeof(Salesforce_Application_Import_Definition.Application__c.RestDisaster__c.External_Id_DMS_Number__c), __ctx1__.__External_Id_DMS_Number_SOQL_QUERY);
                    if (__ctx1__ != null)
                        __ctx1__.__External_Id_DMS_Number_SOQL_QUERY = null;

                    if (__ctx1__.__RestCreateDisasterLookupRequest != null)
                        __ctx1__.UnrefMessage(__ctx1__.__RestCreateDisasterLookupRequest);
                    __ctx1__.__RestCreateDisasterLookupRequest = __RestCreateDisasterLookupRequest;
                    __ctx1__.RefMessage(__ctx1__.__RestCreateDisasterLookupRequest);
                }
                __ctx1__.__RestCreateDisasterLookupRequest.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__RestCreateDisasterLookupRequest);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                RestDisasterLookupPort.SendMessage(0, __ctx1__.__RestCreateDisasterLookupRequest, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__RestCreateDisasterLookupRequest);
                    __edata.PortName = @"RestDisasterLookupPort";
                    Tracker.FireEvent(__eventLocations[5],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__RestCreateDisasterLookupRequest != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestCreateDisasterLookupRequest);
                    __ctx1__.__RestCreateDisasterLookupRequest = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if (!RestDisasterLookupPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__RestCreateDisasterLookupResponse != null)
                    __ctx1__.UnrefMessage(__ctx1__.__RestCreateDisasterLookupResponse);
                __ctx1__.__RestCreateDisasterLookupResponse = new RestStatementDisasterLookupResponse("RestCreateDisasterLookupResponse", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__RestCreateDisasterLookupResponse);
                RestDisasterLookupPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__RestCreateDisasterLookupResponse, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if (RestDisasterLookupPort != null)
                {
                    RestDisasterLookupPort.Close(__ctx1__, __seg__);
                    RestDisasterLookupPort = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__RestCreateDisasterLookupResponse);
                    __edata.PortName = @"RestDisasterLookupPort";
                    Tracker.FireEvent(__eventLocations[7],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                {
                    StatementResponseDisasterLookup __CreateLookupDisasterResponseMsg = new StatementResponseDisasterLookup("CreateLookupDisasterResponseMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeSalesforceDisasterLookupResponse), new object[] {__CreateLookupDisasterResponseMsg.parameters}, new object[] {__ctx1__.__RestCreateDisasterLookupResponse.MessagePart});

                    if (__ctx1__.__CreateLookupDisasterResponseMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateLookupDisasterResponseMsg);
                    __ctx1__.__CreateLookupDisasterResponseMsg = __CreateLookupDisasterResponseMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateLookupDisasterResponseMsg);
                }
                __ctx1__.__CreateLookupDisasterResponseMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateLookupDisasterResponseMsg);
                    __edata.Messages.Add(__ctx1__.__RestCreateDisasterLookupResponse);
                    Tracker.FireEvent(__eventLocations[9],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__RestCreateDisasterLookupResponse != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestCreateDisasterLookupResponse);
                    __ctx1__.__RestCreateDisasterLookupResponse = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if ( !PreProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[10],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 21;
            case 21:
                __ctx1__.__DisasterLookupValue = System.Convert.ToInt32(Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateLookupDisasterResponseMsg.parameters, "count(/*[local-name()='table' and namespace-uri()='http://sba-oda/DLAP/DisasterLookup']/*[local-name()='row' and namespace-uri()='http://sba-oda/DLAP/DisasterLookup']/*[local-name()='Id' and namespace-uri()='http://sba-oda/DLAP/DisasterLookup']/text())", typeof(System.Object)));
                if ( !PostProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 22;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[11],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                if ( !PreProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[12],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 24;
            case 24:
                __condition__ = __ctx1__.__DisasterLookupValue == 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 29 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 29;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 25;
            case 25:
                if ( !PreProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 26;
            case 26:
                __ctx1__.__EventStatus = "Failure";
                if ( !PostProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 27;
            case 27:
                if ( !PreProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[14],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 28;
            case 28:
                __ctx1__.__EventMessage = "Disaster lookup failed, disaster does not exist in SalesForce";
                if ( !PostProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 29;
            case 29:
                if ( !PreProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[15],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 30;
            case 30:
                if ( !PreProgressInc( __seg__, __ctx__, 31 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[16],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 31;
            case 31:
                __condition__ = __ctx1__.__EventStatus == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 46 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 46;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 32 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 32;
            case 32:
                if ( !PreProgressInc( __seg__, __ctx__, 33 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[17],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 33;
            case 33:
                {
                    StatementRequestApplication__c __CreateApplication__cMsg = new StatementRequestApplication__c("CreateApplication__cMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Application__c.MakeSalesForceApplication__cMsg), new object[] {__CreateApplication__cMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part, __ctx1__.__CreateLookupDisasterResponseMsg.parameters});

                    if (__ctx1__.__CreateApplication__cMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateApplication__cMsg);
                    __ctx1__.__CreateApplication__cMsg = __CreateApplication__cMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateApplication__cMsg);
                }
                __ctx1__.__CreateApplication__cMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 34 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 34;
            case 34:
                if ( !PreProgressInc( __seg__, __ctx__, 35 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateApplication__cMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__CreateLookupDisasterResponseMsg);
                    Tracker.FireEvent(__eventLocations[18],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 35;
            case 35:
                if ( !PreProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[19],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 36;
            case 36:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 37 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 37;
            case 37:
                if ( !PreProgressInc( __seg__, __ctx__, 38 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForceApplication__cPort.SendMessage(0, __ctx1__.__CreateApplication__cMsg, null, null, out __ctx0__.__subWrapper1, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 38;
            case 38:
                if ( !PreProgressInc( __seg__, __ctx__, 39 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateApplication__cMsg);
                    __edata.PortName = @"CallSalesForceApplication__cPort";
                    Tracker.FireEvent(__eventLocations[20],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateApplication__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplication__cMsg);
                    __ctx1__.__CreateApplication__cMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 39;
            case 39:
                if ( !PreProgressInc( __seg__, __ctx__, 40 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[21],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 40;
            case 40:
                if (!CallSalesForceApplication__cPort.GetMessageId(__ctx0__.__subWrapper1.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[1]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper1 != null)
                {
                    __ctx0__.__subWrapper1.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper1 = null;
                }
                if (__ctx1__.__CreateApplication__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplication__cResponseMsg);
                __ctx1__.__CreateApplication__cResponseMsg = new StatementResponseApplication__c("CreateApplication__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateApplication__cResponseMsg);
                CallSalesForceApplication__cPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateApplication__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 41 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 41;
            case 41:
                if ( !PreProgressInc( __seg__, __ctx__, 42 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateApplication__cResponseMsg);
                    __edata.PortName = @"CallSalesForceApplication__cPort";
                    Tracker.FireEvent(__eventLocations[22],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 42;
            case 42:
                if ( !PreProgressInc( __seg__, __ctx__, 43 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[23],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 43;
            case 43:
                __ctx1__.__strXpath = "string(/*[local-name()='table' and namespace-uri()='http://sba-oda/DLAP/Application__c']/*[local-name()='row' and namespace-uri()='http://sba-oda/DLAP/Application__c']/*[local-name()='Id' and namespace-uri()='http://sba-oda/DLAP/Application__c']/text())";
                if ( !PostProgressInc( __seg__, __ctx__, 44 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 44;
            case 44:
                if ( !PreProgressInc( __seg__, __ctx__, 45 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[24],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 45;
            case 45:
                __ctx1__.__SalesForceApplication__cID = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateApplication__cResponseMsg.parameters, __ctx1__.__strXpath, typeof(System.String));
                if (__ctx1__ != null && __ctx1__.__CreateApplication__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateApplication__cResponseMsg);
                    __ctx1__.__CreateApplication__cResponseMsg = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 46 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 46;
            case 46:
                if ( !PreProgressInc( __seg__, __ctx__, 47 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__strXpath = null;
                if (CallSalesForceApplication__cPort != null)
                {
                    CallSalesForceApplication__cPort.Close(__ctx1__, __seg__);
                    CallSalesForceApplication__cPort = null;
                }
                Tracker.FireEvent(__eventLocations[25],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 47;
            case 47:
                if ( !PreProgressInc( __seg__, __ctx__, 48 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[26],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 48;
            case 48:
                __condition__ = __ctx1__.__EventStatus == "Success";
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 55 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 55;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 49 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 49;
            case 49:
                if ( !PreProgressInc( __seg__, __ctx__, 50 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[27],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 50;
            case 50:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("TempApplicationCanonical", __ctx1__);

                    __TempApplicationCanonical.CopyFrom(__ctx1__.__ApplicationCanonical);
                    __TempApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__ApplicationCanonical);

                    if (__ctx1__.__TempApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = __TempApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__TempApplicationCanonical);
                }
                __ctx1__.__TempApplicationCanonical.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 51 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 51;
            case 51:
                if ( !PreProgressInc( __seg__, __ctx__, 52 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[28],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 52;
            case 52:
                if ( !PreProgressInc( __seg__, __ctx__, 53 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[29],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 53;
            case 53:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.RecreateCanonical), new object[] {__ApplicationCanonical.part}, new object[] {__ctx1__.__TempApplicationCanonical.part, __ctx1__.__CreateLookupDisasterResponseMsg.parameters});
                    __ApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__TempApplicationCanonical);
                    __ApplicationCanonical.part.SetDistinguishedField("SalesForceApplication__cID", __ctx1__.__SalesForceApplication__cID);

                    if (__ctx1__.__ApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = __ApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                }
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 54 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 54;
            case 54:
                if ( !PreProgressInc( __seg__, __ctx__, 55 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__CreateLookupDisasterResponseMsg);
                    Tracker.FireEvent(__eventLocations[30],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 55;
            case 55:
                if ( !PreProgressInc( __seg__, __ctx__, 56 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__SalesForceApplication__cID = null;
                if (__ctx1__ != null && __ctx1__.__CreateLookupDisasterResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateLookupDisasterResponseMsg);
                    __ctx1__.__CreateLookupDisasterResponseMsg = null;
                }
                Tracker.FireEvent(__eventLocations[31],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 56;
            case 56:
                if ( !PreProgressInc( __seg__, __ctx__, 57 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 57;
            case 57:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 58 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 58;
            case 58:
                if ( !PreProgressInc( __seg__, __ctx__, 59 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 59;
            case 59:
                Args[1] = __ctx1__.__EventStatus;
                Args[2] = __ctx1__.__EventMessage;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null)
                    __ctx1__.__EventMessage = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventStatus = null;
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 60 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 60;
            case 60:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{AE475A04-1CAD-45E8-A7F4-9C5A580652F2}")),
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{D28D1BE1-1C72-49F0-AB16-DA3F4B6F32D2}"))
        };

    }
    //#line 293 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Contact\CallSalesForceContact.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectContact)
        },
        new System.String[] {
            "SendSalesForceRequestMsg"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed public class CallSalesForceContact : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceContact));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceContact()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceContact_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceContact(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceContact", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceContact(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceContact")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>89a03cef-0674-40f7-84ff-30265aa3b15a</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>61d8d467-4fa8-4d38-9574-85356b38b548</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>cbd3a1e8-fd89-4c4e-b247-23302d3e0c42</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Construct Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>b307b12d-7ce6-40c3-81f1-4881c2a5b620</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create SF Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>0ecd197a-8558-4173-b76e-a610f9cbcca5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d1cf6455-f6e1-41ca-ada4-8fbe353bc2b0</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>474a25ca-6d85-420d-8636-afbe3ac32a85</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>1aae3847-e978-4e77-b557-0f698ae42ba8</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>252fb356-d2da-418d-b0f3-d004a637d859</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count Contact</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>56222e2f-f7d4-43ae-b62e-0d39b4ea5dd5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Contact Data Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>0ae718fb-2692-4f34-8185-ab49c391bb6d</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Contact Exists</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>5ae6fb71-68c3-48b4-8e3d-89959afd13a0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>63d49837-68bb-466a-806a-c81c4d8bec32</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>bf504dda-3fbd-4f3c-a313-debb6abc9feb</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Recreate Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>6ca04f6b-b3db-4f7c-b33e-20561fe401c4</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Temp Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>28423edb-b7b4-436a-980b-6d8defe1c5be</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>8077838f-f081-4223-a35b-96d112838f22</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Temp Msg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>1a745609-fd26-4228-bc45-33bbccf77b64</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Re-construct canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>e4f83993-4764-4d3b-b376-8fa8d7142c7f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>4079ff29-b31d-4b4b-a45e-2e2eb0398a69</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d84bea94-cab7-4b4f-ad82-2dac1197ea6e</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_4</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>9d3d30ec-a87a-4da8-b871-5e1a1d239dab</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_5</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>ca3ff511-8c5b-487c-bf3d-79700b8400da</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Context Properties</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>20e1cdba-06c6-4df7-8c6d-bf96ec88948f</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>0e9c84d8-4029-4d47-b665-4b6e3ac3c4dd</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceContact'</ActionName><IsAtomic>0</IsAtomic><Line>293</Line><Position>12</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>304</Line><Position>13</Position><ShapeID>'b307b12d-7ce6-40c3-81f1-4881c2a5b620'</ShapeID>
<Messages>
	<MsgInfo><name>CreateContactMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceContact+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>310</Line><Position>24</Position><ShapeID>'252fb356-d2da-418d-b0f3-d004a637d859'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>312</Line><Position>13</Position><ShapeID>'56222e2f-f7d4-43ae-b62e-0d39b4ea5dd5'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>315</Line><Position>17</Position><ShapeID>'5ae6fb71-68c3-48b4-8e3d-89959afd13a0'</ShapeID>
<Messages>
	<MsgInfo><name>CreateContactMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceContact+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>317</Line><Position>17</Position><ShapeID>'63d49837-68bb-466a-806a-c81c4d8bec32'</ShapeID>
<Messages>
	<MsgInfo><name>CreateContactResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceContact+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>319</Line><Position>17</Position><ShapeID>'6ca04f6b-b3db-4f7c-b33e-20561fe401c4'</ShapeID>
<Messages>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>326</Line><Position>17</Position><ShapeID>'1a745609-fd26-4228-bc45-33bbccf77b64'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>CreateContactResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceContact+table</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='f9e0ad4d-c7a2-4282-9e70-5b67d739d922' LowerBound='1.1' HigherBound='64.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='b04931f1-3b7c-4708-be2e-bfb74b392f76' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='63.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceContact' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='c1c9a814-3e5b-451d-a5c4-0944467676b0' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='27.1' HigherBound='28.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CountCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='fbfda9fb-636b-43aa-8b8b-171522bcd463' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempApplicationCanonical' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='997647ed-f0b8-4d61-952d-0f43c9a28143' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestContact' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateContactMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='b6c2aa28-e434-4146-8378-6665730b251c' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseContact' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateContactResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='89a03cef-0674-40f7-84ff-30265aa3b15a' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='61d8d467-4fa8-4d38-9574-85356b38b548' ParentLink='ServiceBody_Declaration' LowerBound='28.15' HigherBound='28.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='cbd3a1e8-fd89-4c4e-b247-23302d3e0c42' ParentLink='ServiceBody_Statement' LowerBound='30.1' HigherBound='61.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Construct Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='b307b12d-7ce6-40c3-81f1-4881c2a5b620' ParentLink='ComplexStatement_Statement' LowerBound='30.1' HigherBound='36.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Create SF Request' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='0ecd197a-8558-4173-b76e-a610f9cbcca5' ParentLink='ComplexStatement_Statement' LowerBound='33.1' HigherBound='35.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Contact.MakeContactRequestMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Create Request' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='d1cf6455-f6e1-41ca-ada4-8fbe353bc2b0' ParentLink='Transform_InputMessagePartRef' LowerBound='34.115' HigherBound='34.135'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='474a25ca-6d85-420d-8636-afbe3ac32a85' ParentLink='Transform_OutputMessagePartRef' LowerBound='34.28' HigherBound='34.55'>
                                <om:Property Name='MessageRef' Value='CreateContactMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='1aae3847-e978-4e77-b557-0f698ae42ba8' ParentLink='Construct_MessageRef' LowerBound='31.23' HigherBound='31.39'>
                            <om:Property Name='Ref' Value='CreateContactMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='252fb356-d2da-418d-b0f3-d004a637d859' ParentLink='ComplexStatement_Statement' LowerBound='36.1' HigherBound='38.1'>
                        <om:Property Name='Expression' Value='CountCount = xpath(CreateContactMsg.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Contact&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Contact&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Contact&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count Contact' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                    <om:Element Type='Decision' OID='56222e2f-f7d4-43ae-b62e-0d39b4ea5dd5' ParentLink='ComplexStatement_Statement' LowerBound='38.1' HigherBound='61.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Contact Data Exists?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='0ae718fb-2692-4f34-8185-ab49c391bb6d' ParentLink='ReallyComplexStatement_Branch' LowerBound='39.13' HigherBound='61.1'>
                            <om:Property Name='Expression' Value='CountCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Contact Exists' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='Send' OID='5ae6fb71-68c3-48b4-8e3d-89959afd13a0' ParentLink='ComplexStatement_Statement' LowerBound='41.1' HigherBound='43.1'>
                                <om:Property Name='PortName' Value='SendSalesForceRequestMsg' />
                                <om:Property Name='MessageName' Value='CreateContactMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Request' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='63d49837-68bb-466a-806a-c81c4d8bec32' ParentLink='ComplexStatement_Statement' LowerBound='43.1' HigherBound='45.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='SendSalesForceRequestMsg' />
                                <om:Property Name='MessageName' Value='CreateContactResponseMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Response' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Task' OID='bf504dda-3fbd-4f3c-a313-debb6abc9feb' ParentLink='ComplexStatement_Statement' LowerBound='45.1' HigherBound='60.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Recreate Canonical' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='Construct' OID='6ca04f6b-b3db-4f7c-b33e-20561fe401c4' ParentLink='ComplexStatement_Statement' LowerBound='45.1' HigherBound='52.1'>
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Construct Temp Message' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='MessageRef' OID='28423edb-b7b4-436a-980b-6d8defe1c5be' ParentLink='Construct_MessageRef' LowerBound='46.27' HigherBound='46.51'>
                                        <om:Property Name='Ref' Value='TempApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                    <om:Element Type='MessageAssignment' OID='8077838f-f081-4223-a35b-96d112838f22' ParentLink='ComplexStatement_Statement' LowerBound='48.1' HigherBound='51.1'>
                                        <om:Property Name='Expression' Value='TempApplicationCanonical=ApplicationCanonical;&#xD;&#xA;TempApplicationCanonical(*)=ApplicationCanonical(*);' />
                                        <om:Property Name='ReportToAnalyst' Value='False' />
                                        <om:Property Name='Name' Value='Assign Temp Msg' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='Construct' OID='1a745609-fd26-4228-bc45-33bbccf77b64' ParentLink='ComplexStatement_Statement' LowerBound='52.1' HigherBound='60.1'>
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Re-construct canonical' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='Transform' OID='e4f83993-4764-4d3b-b376-8fa8d7142c7f' ParentLink='ComplexStatement_Statement' LowerBound='55.1' HigherBound='57.1'>
                                        <om:Property Name='ClassName' Value='Application_Import_Logic.MakeCanonicalWithApplicantSalesForceIDs' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Create Canonical' />
                                        <om:Property Name='Signal' Value='False' />
                                        <om:Element Type='MessagePartRef' OID='4079ff29-b31d-4b4b-a45e-2e2eb0398a69' ParentLink='Transform_InputMessagePartRef' LowerBound='56.122' HigherBound='56.157'>
                                            <om:Property Name='MessageRef' Value='CreateContactResponseMsg' />
                                            <om:Property Name='PartRef' Value='parameters' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='MessagePartReference_3' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='MessagePartRef' OID='d84bea94-cab7-4b4f-ad82-2dac1197ea6e' ParentLink='Transform_InputMessagePartRef' LowerBound='56.159' HigherBound='56.183'>
                                            <om:Property Name='MessageRef' Value='TempApplicationCanonical' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='MessagePartReference_4' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                        <om:Element Type='MessagePartRef' OID='9d3d30ec-a87a-4da8-b871-5e1a1d239dab' ParentLink='Transform_OutputMessagePartRef' LowerBound='56.32' HigherBound='56.52'>
                                            <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                            <om:Property Name='ReportToAnalyst' Value='True' />
                                            <om:Property Name='Name' Value='MessagePartReference_5' />
                                            <om:Property Name='Signal' Value='False' />
                                        </om:Element>
                                    </om:Element>
                                    <om:Element Type='MessageAssignment' OID='ca3ff511-8c5b-487c-bf3d-79700b8400da' ParentLink='ComplexStatement_Statement' LowerBound='57.1' HigherBound='59.1'>
                                        <om:Property Name='Expression' Value='ApplicationCanonical(*)=TempApplicationCanonical(*);&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='False' />
                                        <om:Property Name='Name' Value='Assign Context Properties' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='MessageRef' OID='20e1cdba-06c6-4df7-8c6d-bf96ec88948f' ParentLink='Construct_MessageRef' LowerBound='53.27' HigherBound='53.47'>
                                        <om:Property Name='Ref' Value='ApplicationCanonical' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='0e9c84d8-4029-4d47-b665-4b6e3ac3c4dd' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='0a9885b3-6722-460e-8059-8d06c258323f' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='28' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectContact' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SendSalesForceRequestMsg' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='45f134dc-bd4c-45bc-99fc-bbdc1e266d0f' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='8cf6871f-9893-432b-b0dc-ba33a75dbf5f' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseContact' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='cf06bb23-d903-45f4-b34d-9161997f56fc' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceContact.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='67218f38-04b1-486a-8ef2-7fd7260b7480' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestContact' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='5f144c16-5833-40a0-a47c-3d63433a9d4c' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceContact.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='7e6abbd3-7286-4e97-ab81-27454e2ef960' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectContact' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='439207b6-1b12-4977-a008-63fa5ce48b8d' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='e65e1396-c1e6-42a7-a973-701bce612ee8' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.38' HigherBound='16.62'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseContact' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='b87cfeb9-887d-4ab2-8564-40f300dd3206' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.36'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestContact' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceContact_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceContact_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceContact")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceContact __svc__ = (CallSalesForceContact)_service;
                __CallSalesForceContact_root_0 __ctx0__ = (__CallSalesForceContact_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.SendSalesForceRequestMsg != null)
                {
                    __svc__.SendSalesForceRequestMsg.Close(this, null);
                    __svc__.SendSalesForceRequestMsg = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceContact_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceContact_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceContact")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceContact __svc__ = (CallSalesForceContact)_service;
                __CallSalesForceContact_root_0 __ctx0__ = (__CallSalesForceContact_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceContact_1 __ctx1__ = (__CallSalesForceContact_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateContactMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateContactMsg);
                    __ctx1__.__CreateContactMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateContactResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateContactResponseMsg);
                    __ctx1__.__CreateContactResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("TempApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateContactMsg")]
            internal StatementRequestContact __CreateContactMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateContactResponseMsg")]
            internal StatementResponseContact __CreateContactResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CountCount")]
            internal System.Int32 __CountCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("SendSalesForceRequestMsg")]
        internal CDataServiceSelectContact SendSalesForceRequestMsg;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectContact.statement},
                                               typeof(CallSalesForceContact).GetField("SendSalesForceRequestMsg", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceContact), "SendSalesForceRequestMsg"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "b307b12d-7ce6-40c3-81f1-4881c2a5b620", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "b307b12d-7ce6-40c3-81f1-4881c2a5b620", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "252fb356-d2da-418d-b0f3-d004a637d859", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "252fb356-d2da-418d-b0f3-d004a637d859", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "56222e2f-f7d4-43ae-b62e-0d39b4ea5dd5", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "5ae6fb71-68c3-48b4-8e3d-89959afd13a0", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "5ae6fb71-68c3-48b4-8e3d-89959afd13a0", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "63d49837-68bb-466a-806a-c81c4d8bec32", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "63d49837-68bb-466a-806a-c81c4d8bec32", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "6ca04f6b-b3db-4f7c-b33e-20561fe401c4", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "6ca04f6b-b3db-4f7c-b33e-20561fe401c4", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "1a745609-fd26-4228-bc45-33bbccf77b64", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "1a745609-fd26-4228-bc45-33bbccf77b64", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "56222e2f-f7d4-43ae-b62e-0d39b4ea5dd5", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,11,12,13,13,14,15,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceContact_root_0 __ctx0__ = (__CallSalesForceContact_root_0)_stateMgrs[0];
            __CallSalesForceContact_1 __ctx1__ = (__CallSalesForceContact_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                SendSalesForceRequestMsg = new CDataServiceSelectContact(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceContact_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceContact_root_0 __ctx0__ = (__CallSalesForceContact_root_0)_stateMgrs[0];
            __CallSalesForceContact_1 __ctx1__ = (__CallSalesForceContact_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__CountCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestContact __CreateContactMsg = new StatementRequestContact("CreateContactMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Contact.MakeContactRequestMsg), new object[] {__CreateContactMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateContactMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateContactMsg);
                    __ctx1__.__CreateContactMsg = __CreateContactMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateContactMsg);
                }
                __ctx1__.__CreateContactMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateContactMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__CountCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateContactMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Contact']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Contact']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Contact'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__CountCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 24 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 24;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                SendSalesForceRequestMsg.SendMessage(0, __ctx1__.__CreateContactMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateContactMsg);
                    __edata.PortName = @"SendSalesForceRequestMsg";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!SendSalesForceRequestMsg.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateContactResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateContactResponseMsg);
                __ctx1__.__CreateContactResponseMsg = new StatementResponseContact("CreateContactResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateContactResponseMsg);
                SendSalesForceRequestMsg.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateContactResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateContactResponseMsg);
                    __edata.PortName = @"SendSalesForceRequestMsg";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[11],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("TempApplicationCanonical", __ctx1__);

                    __TempApplicationCanonical.CopyFrom(__ctx1__.__ApplicationCanonical);
                    __TempApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__ApplicationCanonical);

                    if (__ctx1__.__TempApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = __TempApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__TempApplicationCanonical);
                }
                __ctx1__.__TempApplicationCanonical.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 20;
            case 20:
                if ( !PreProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[12],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 22;
            case 22:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeCanonicalWithApplicantSalesForceIDs), new object[] {__ApplicationCanonical.part}, new object[] {__ctx1__.__CreateContactResponseMsg.parameters, __ctx1__.__TempApplicationCanonical.part});
                    __ApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__TempApplicationCanonical);

                    if (__ctx1__.__ApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = __ApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                }
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                if ( !PreProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__CreateContactResponseMsg);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[14],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateContactResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateContactResponseMsg);
                    __ctx1__.__CreateContactResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 24;
            case 24:
                if ( !PreProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__CreateContactMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateContactMsg);
                    __ctx1__.__CreateContactMsg = null;
                }
                if (SendSalesForceRequestMsg != null)
                {
                    SendSalesForceRequestMsg.Close(__ctx1__, __seg__);
                    SendSalesForceRequestMsg = null;
                }
                Tracker.FireEvent(__eventLocations[15],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 25;
            case 25:
                if ( !PreProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 26;
            case 26:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 27;
            case 27:
                if ( !PreProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 28;
            case 28:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 29;
            case 29:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{C974ED42-3C3B-4F01-A9F8-EC545CBFEA99}"))
        };

    }
    //#line 224 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Insurance__c\CallSalesForceInsurance.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectInsurance__c)
        },
        new System.String[] {
            "SendSalesForceRequestMsg"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceInsurance : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceInsurance));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceInsurance()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceInsurance_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceInsurance(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceInsurance", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceInsurance(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceInsurance")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>3fb38a56-7103-402a-86ff-5f72447cc6f6</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>bffb0427-d78d-4067-9c4b-dda5570e3dd0</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>ae96f2a8-be49-4897-be16-fced4aacc90e</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Construct Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>c163ba46-8042-4bbf-a5d0-67defd83cd28</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create SF Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>efba2b64-4d37-4916-84d0-f1241addfc3f</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>9d185e61-b253-4ead-ac5c-b3e8f546fb38</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>5c111b06-abb8-4ba4-a568-9e8ea96bce99</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>aa38a9db-fe55-4ccb-aaa9-4a06b9e21c6c</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>45d41e51-3f2c-46f7-b2e1-a2be1895a1e1</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count Insurance</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>3cd0d0d0-0540-4634-a2fe-0aafc7529f88</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Insurance Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>77e7576d-407f-43ef-9d05-ef851b94510d</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Insurance</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>0688dc97-90d3-41b0-830e-ccf7aa74daf3</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>5c6adb17-0c16-43d4-9159-974c65b4d43f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>64fdd219-fe03-4410-a641-8eafc9576bfc</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceInsurance'</ActionName><IsAtomic>0</IsAtomic><Line>224</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>234</Line><Position>13</Position><ShapeID>'c163ba46-8042-4bbf-a5d0-67defd83cd28'</ShapeID>
<Messages>
	<MsgInfo><name>CreateInsuranceMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>240</Line><Position>33</Position><ShapeID>'45d41e51-3f2c-46f7-b2e1-a2be1895a1e1'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>242</Line><Position>13</Position><ShapeID>'3cd0d0d0-0540-4634-a2fe-0aafc7529f88'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>245</Line><Position>17</Position><ShapeID>'0688dc97-90d3-41b0-830e-ccf7aa74daf3'</ShapeID>
<Messages>
	<MsgInfo><name>CreateInsuranceMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>247</Line><Position>17</Position><ShapeID>'5c6adb17-0c16-43d4-9159-974c65b4d43f'</ShapeID>
<Messages>
	<MsgInfo><name>CreateInsuranceResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='d492cd40-069b-4762-b01a-cfad06f839f1' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='a7834f3c-c09e-43f3-a8ec-eee909b6bee4' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceInsurance' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='8c982170-9b2f-436f-b41d-5b609762cf39' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AfterInsuranceCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='1e8fa722-6bcc-40a2-a610-f45fbc1742e5' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestInsurance__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateInsuranceMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='2391665f-f6bd-45f2-a428-f914e4d4682d' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseInsurance__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateInsuranceResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='3fb38a56-7103-402a-86ff-5f72447cc6f6' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='bffb0427-d78d-4067-9c4b-dda5570e3dd0' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='ae96f2a8-be49-4897-be16-fced4aacc90e' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Construct Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='c163ba46-8042-4bbf-a5d0-67defd83cd28' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Create SF Request' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageRef' OID='efba2b64-4d37-4916-84d0-f1241addfc3f' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.41'>
                            <om:Property Name='Ref' Value='CreateInsuranceMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='Transform' OID='9d185e61-b253-4ead-ac5c-b3e8f546fb38' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Insurance__c.MakeSalesForceInsurance__cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Create Request' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='5c111b06-abb8-4ba4-a568-9e8ea96bce99' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.57'>
                                <om:Property Name='MessageRef' Value='CreateInsuranceMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='aa38a9db-fe55-4ccb-aaa9-4a06b9e21c6c' ParentLink='Transform_InputMessagePartRef' LowerBound='33.134' HigherBound='33.154'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='45d41e51-3f2c-46f7-b2e1-a2be1895a1e1' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                        <om:Property Name='Expression' Value='AfterInsuranceCount = xpath(CreateInsuranceMsg.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Insurance__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Insurance__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Insurance__c&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count Insurance' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Decision' OID='3cd0d0d0-0540-4634-a2fe-0aafc7529f88' ParentLink='ComplexStatement_Statement' LowerBound='37.1' HigherBound='45.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Insurance Exists?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='77e7576d-407f-43ef-9d05-ef851b94510d' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                            <om:Property Name='Expression' Value='AfterInsuranceCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Insurance' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Send' OID='0688dc97-90d3-41b0-830e-ccf7aa74daf3' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                                <om:Property Name='PortName' Value='SendSalesForceRequestMsg' />
                                <om:Property Name='MessageName' Value='CreateInsuranceMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Request' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='5c6adb17-0c16-43d4-9159-974c65b4d43f' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='SendSalesForceRequestMsg' />
                                <om:Property Name='MessageName' Value='CreateInsuranceResponseMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Response' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='64fdd219-fe03-4410-a641-8eafc9576bfc' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='69e0e825-34c8-4723-9836-0d8e60ea6e63' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='11' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectInsurance__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SendSalesForceRequestMsg' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='8bffc210-53fc-4af5-9646-b546351a4cea' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='328cec34-d0b0-4aab-bb21-9d1eae94c339' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseInsurance__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='82c14a7c-e0f0-4250-89db-40c4143d3e6d' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='e5cf1a16-0ea6-4e6c-a611-53435dac7c4b' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestInsurance__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='aec36f26-c3e7-4211-bc35-34bea934e905' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceInsurance__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='0e27d342-f892-4671-9664-28cd48c22d24' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectInsurance__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='a45c714e-9259-4716-ba96-9f784ad5280c' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='fe5ed23c-1a6e-43bf-ad14-202a3a52bd56' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.41'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestInsurance__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='936aeda9-39c6-484d-9a89-a8cd923a5ddb' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.43' HigherBound='16.72'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseInsurance__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceInsurance_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceInsurance_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceInsurance")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceInsurance __svc__ = (CallSalesForceInsurance)_service;
                __CallSalesForceInsurance_root_0 __ctx0__ = (__CallSalesForceInsurance_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.SendSalesForceRequestMsg != null)
                {
                    __svc__.SendSalesForceRequestMsg.Close(this, null);
                    __svc__.SendSalesForceRequestMsg = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceInsurance_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceInsurance_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceInsurance")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceInsurance __svc__ = (CallSalesForceInsurance)_service;
                __CallSalesForceInsurance_root_0 __ctx0__ = (__CallSalesForceInsurance_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceInsurance_1 __ctx1__ = (__CallSalesForceInsurance_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateInsuranceResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateInsuranceResponseMsg);
                    __ctx1__.__CreateInsuranceResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateInsuranceMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateInsuranceMsg);
                    __ctx1__.__CreateInsuranceMsg = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateInsuranceMsg")]
            internal StatementRequestInsurance__c __CreateInsuranceMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateInsuranceResponseMsg")]
            internal StatementResponseInsurance__c __CreateInsuranceResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AfterInsuranceCount")]
            internal System.Int32 __AfterInsuranceCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("SendSalesForceRequestMsg")]
        internal CDataServiceSelectInsurance__c SendSalesForceRequestMsg;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectInsurance__c.statement},
                                               typeof(CallSalesForceInsurance).GetField("SendSalesForceRequestMsg", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceInsurance), "SendSalesForceRequestMsg"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "c163ba46-8042-4bbf-a5d0-67defd83cd28", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "c163ba46-8042-4bbf-a5d0-67defd83cd28", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "45d41e51-3f2c-46f7-b2e1-a2be1895a1e1", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "45d41e51-3f2c-46f7-b2e1-a2be1895a1e1", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "3cd0d0d0-0540-4634-a2fe-0aafc7529f88", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "0688dc97-90d3-41b0-830e-ccf7aa74daf3", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "0688dc97-90d3-41b0-830e-ccf7aa74daf3", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "5c6adb17-0c16-43d4-9159-974c65b4d43f", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "5c6adb17-0c16-43d4-9159-974c65b4d43f", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "3cd0d0d0-0540-4634-a2fe-0aafc7529f88", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceInsurance_root_0 __ctx0__ = (__CallSalesForceInsurance_root_0)_stateMgrs[0];
            __CallSalesForceInsurance_1 __ctx1__ = (__CallSalesForceInsurance_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                SendSalesForceRequestMsg = new CDataServiceSelectInsurance__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceInsurance_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceInsurance_root_0 __ctx0__ = (__CallSalesForceInsurance_root_0)_stateMgrs[0];
            __CallSalesForceInsurance_1 __ctx1__ = (__CallSalesForceInsurance_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__AfterInsuranceCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestInsurance__c __CreateInsuranceMsg = new StatementRequestInsurance__c("CreateInsuranceMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Insurance__c.MakeSalesForceInsurance__cRequest), new object[] {__CreateInsuranceMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateInsuranceMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateInsuranceMsg);
                    __ctx1__.__CreateInsuranceMsg = __CreateInsuranceMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateInsuranceMsg);
                }
                __ctx1__.__CreateInsuranceMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateInsuranceMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__AfterInsuranceCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateInsuranceMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Insurance__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Insurance__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Insurance__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__AfterInsuranceCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                SendSalesForceRequestMsg.SendMessage(0, __ctx1__.__CreateInsuranceMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateInsuranceMsg);
                    __edata.PortName = @"SendSalesForceRequestMsg";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!SendSalesForceRequestMsg.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateInsuranceResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateInsuranceResponseMsg);
                __ctx1__.__CreateInsuranceResponseMsg = new StatementResponseInsurance__c("CreateInsuranceResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateInsuranceResponseMsg);
                SendSalesForceRequestMsg.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateInsuranceResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateInsuranceResponseMsg);
                    __edata.PortName = @"SendSalesForceRequestMsg";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateInsuranceResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateInsuranceResponseMsg);
                    __ctx1__.__CreateInsuranceResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__CreateInsuranceMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateInsuranceMsg);
                    __ctx1__.__CreateInsuranceMsg = null;
                }
                if (SendSalesForceRequestMsg != null)
                {
                    SendSalesForceRequestMsg.Close(__ctx1__, __seg__);
                    SendSalesForceRequestMsg = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{639911C8-9A7D-4546-B1F0-179FDBC26D7D}"))
        };

    }
    //#line 261 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Property__c\CallSalesForceProperty__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectProperty__c)
        },
        new System.String[] {
            "CallSalesForcePropertyPort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceProperty__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceProperty__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceProperty__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceProperty__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceProperty__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceProperty__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceProperty__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceProperty__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>f70e2203-d27a-4ffb-80ac-1a8332f8a39c</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>0d5a2b58-64bc-44d2-9a7a-de2819644b01</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>a19a4279-e0be-46bd-8366-91b16e342e9a</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>4ae080a2-9636-4a24-a45f-1c4eb1135092</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct  Property Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>508c18fe-34fc-4ca3-99a1-46ad50772c5f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Create Account</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>2784f36a-2f20-4f84-8ec7-cb4b55c70389</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>473d0af1-f229-4ab4-823e-ef20bfce2425</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>30ed42f6-cc28-4393-9e4d-3fdaca229f50</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>c9b6e3c1-8b22-4311-b49d-374571336cc4</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>5432dcda-5ff1-45c7-afba-4f5a1fe74fbb</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>c7315692-2619-4b56-8b0e-27542fb8154e</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Recreate Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>ebb7ae1c-b984-4fa0-b55e-56517f8ecc5d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Temp Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>b301b70b-196f-4806-8050-31a926a2388e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Temp Msg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>4f4aab21-2055-4d2c-8f77-3e74282dac68</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>eed18b10-5474-45fc-b7fc-cabfc9cc5bab</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Re-construct canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>3d50239b-1fb3-4c3b-9590-f99ab876b1b4</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>c9dd8aec-f8a9-4486-8375-5421a765beab</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Canonical</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>1655b7fb-022d-43dc-95bf-126b80032d8c</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_5</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>229e4ab9-bc12-440c-b9e9-ced66904c130</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_3</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>6e5fa46a-34cc-484b-ab1c-ac8bfdb1c287</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_4</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>d5059d15-259e-4574-8976-81355d2e64ae</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Assign Context Properties</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceProperty__c'</ActionName><IsAtomic>0</IsAtomic><Line>261</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>271</Line><Position>13</Position><ShapeID>'4ae080a2-9636-4a24-a45f-1c4eb1135092'</ShapeID>
<Messages>
	<MsgInfo><name>CreateProperty__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>277</Line><Position>13</Position><ShapeID>'c9b6e3c1-8b22-4311-b49d-374571336cc4'</ShapeID>
<Messages>
	<MsgInfo><name>CreateProperty__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>279</Line><Position>13</Position><ShapeID>'5432dcda-5ff1-45c7-afba-4f5a1fe74fbb'</ShapeID>
<Messages>
	<MsgInfo><name>CreateProperty__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>281</Line><Position>13</Position><ShapeID>'ebb7ae1c-b984-4fa0-b55e-56517f8ecc5d'</ShapeID>
<Messages>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>288</Line><Position>13</Position><ShapeID>'eed18b10-5474-45fc-b7fc-cabfc9cc5bab'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>CreateProperty__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c+table</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>TempApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='6f25aabe-04a8-4db1-9b57-fa28fc7ae9bb' LowerBound='1.1' HigherBound='57.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='58a2df9f-f11c-44cd-b6c9-23bb5445bf32' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='56.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceProperty__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='MessageDeclaration' OID='7b8967cc-0650-41f3-92d4-44b47704d55c' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempApplicationCanonical' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='cdf33ddd-2d27-4a54-a773-f15383e9abbc' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestProperty__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateProperty__cMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='5b7b4719-f746-454c-a875-ef1c3fd7eddd' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseProperty__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateProperty__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='f70e2203-d27a-4ffb-80ac-1a8332f8a39c' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='0d5a2b58-64bc-44d2-9a7a-de2819644b01' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='a19a4279-e0be-46bd-8366-91b16e342e9a' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='39.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='4ae080a2-9636-4a24-a45f-1c4eb1135092' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct  Property Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='508c18fe-34fc-4ca3-99a1-46ad50772c5f' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Property__c.MakeProperty__cMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map to Create Account' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='2784f36a-2f20-4f84-8ec7-cb4b55c70389' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.59'>
                                <om:Property Name='MessageRef' Value='CreateProperty__cMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='473d0af1-f229-4ab4-823e-ef20bfce2425' ParentLink='Transform_InputMessagePartRef' LowerBound='33.120' HigherBound='33.140'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='30ed42f6-cc28-4393-9e4d-3fdaca229f50' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.43'>
                            <om:Property Name='Ref' Value='CreateProperty__cMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Send' OID='c9b6e3c1-8b22-4311-b49d-374571336cc4' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                        <om:Property Name='PortName' Value='CallSalesForcePropertyPort' />
                        <om:Property Name='MessageName' Value='CreateProperty__cMsg' />
                        <om:Property Name='OperationName' Value='statement' />
                        <om:Property Name='OperationMessageName' Value='Request' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Send Request' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Receive' OID='5432dcda-5ff1-45c7-afba-4f5a1fe74fbb' ParentLink='ComplexStatement_Statement' LowerBound='37.1' HigherBound='39.1'>
                        <om:Property Name='Activate' Value='False' />
                        <om:Property Name='PortName' Value='CallSalesForcePropertyPort' />
                        <om:Property Name='MessageName' Value='CreateProperty__cResponseMsg' />
                        <om:Property Name='OperationName' Value='statement' />
                        <om:Property Name='OperationMessageName' Value='Response' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Receive Response' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                </om:Element>
                <om:Element Type='Task' OID='c7315692-2619-4b56-8b0e-27542fb8154e' ParentLink='ServiceBody_Statement' LowerBound='39.1' HigherBound='54.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Recreate Canonical' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='ebb7ae1c-b984-4fa0-b55e-56517f8ecc5d' ParentLink='ComplexStatement_Statement' LowerBound='39.1' HigherBound='46.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Temp Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageAssignment' OID='b301b70b-196f-4806-8050-31a926a2388e' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='45.1'>
                            <om:Property Name='Expression' Value='TempApplicationCanonical=ApplicationCanonical;&#xD;&#xA;TempApplicationCanonical(*)=ApplicationCanonical(*);' />
                            <om:Property Name='ReportToAnalyst' Value='False' />
                            <om:Property Name='Name' Value='Assign Temp Msg' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='MessageRef' OID='4f4aab21-2055-4d2c-8f77-3e74282dac68' ParentLink='Construct_MessageRef' LowerBound='40.23' HigherBound='40.47'>
                            <om:Property Name='Ref' Value='TempApplicationCanonical' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Construct' OID='eed18b10-5474-45fc-b7fc-cabfc9cc5bab' ParentLink='ComplexStatement_Statement' LowerBound='46.1' HigherBound='54.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Re-construct canonical' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageRef' OID='3d50239b-1fb3-4c3b-9590-f99ab876b1b4' ParentLink='Construct_MessageRef' LowerBound='47.23' HigherBound='47.43'>
                            <om:Property Name='Ref' Value='ApplicationCanonical' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='Transform' OID='c9dd8aec-f8a9-4486-8375-5421a765beab' ParentLink='ComplexStatement_Statement' LowerBound='49.1' HigherBound='51.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Property__c.MakeCanonicalWithPropertySalesForceIDs' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Create Canonical' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='1655b7fb-022d-43dc-95bf-126b80032d8c' ParentLink='Transform_OutputMessagePartRef' LowerBound='50.28' HigherBound='50.48'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_5' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='229e4ab9-bc12-440c-b9e9-ced66904c130' ParentLink='Transform_InputMessagePartRef' LowerBound='50.129' HigherBound='50.168'>
                                <om:Property Name='MessageRef' Value='CreateProperty__cResponseMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_3' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='6e5fa46a-34cc-484b-ab1c-ac8bfdb1c287' ParentLink='Transform_InputMessagePartRef' LowerBound='50.170' HigherBound='50.194'>
                                <om:Property Name='MessageRef' Value='TempApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_4' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageAssignment' OID='d5059d15-259e-4574-8976-81355d2e64ae' ParentLink='ComplexStatement_Statement' LowerBound='51.1' HigherBound='53.1'>
                            <om:Property Name='Expression' Value='ApplicationCanonical(*)=TempApplicationCanonical(*);&#xD;&#xA;' />
                            <om:Property Name='ReportToAnalyst' Value='False' />
                            <om:Property Name='Name' Value='Assign Context Properties' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='e667e0f7-9cef-4966-a95c-70cd437f6e24' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='15' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectProperty__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForcePropertyPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='d28c0cff-d3cd-4ba0-abf4-1ee677982965' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='dfc01f81-695c-48be-863c-906ab69f2238' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseProperty__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='ccc02876-936d-4860-9237-c27c767960aa' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='7515d57a-9348-4766-9e10-787332f3fdea' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestProperty__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='e90eb3e7-c985-44d5-a94a-e0bee07823b0' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceDamaged_Property__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='83f79157-2f47-4742-9c02-004498a63a6b' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectProperty__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='afd979ff-f46c-42ba-9e5d-49e3122b3103' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='0bfd5db9-bcde-4484-b1a4-6fe78a3f30b8' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.42' HigherBound='16.70'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseProperty__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='cf19dcd3-0a59-45fa-96aa-6393a9396e2a' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.40'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestProperty__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceProperty__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceProperty__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceProperty__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceProperty__c __svc__ = (CallSalesForceProperty__c)_service;
                __CallSalesForceProperty__c_root_0 __ctx0__ = (__CallSalesForceProperty__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesForcePropertyPort != null)
                {
                    __svc__.CallSalesForcePropertyPort.Close(this, null);
                    __svc__.CallSalesForcePropertyPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceProperty__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceProperty__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceProperty__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceProperty__c __svc__ = (CallSalesForceProperty__c)_service;
                __CallSalesForceProperty__c_root_0 __ctx0__ = (__CallSalesForceProperty__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceProperty__c_1 __ctx1__ = (__CallSalesForceProperty__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateProperty__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateProperty__cMsg);
                    __ctx1__.__CreateProperty__cMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateProperty__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateProperty__cResponseMsg);
                    __ctx1__.__CreateProperty__cResponseMsg = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("TempApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateProperty__cMsg")]
            internal StatementRequestProperty__c __CreateProperty__cMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateProperty__cResponseMsg")]
            internal StatementResponseProperty__c __CreateProperty__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForcePropertyPort")]
        internal CDataServiceSelectProperty__c CallSalesForcePropertyPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectProperty__c.statement},
                                               typeof(CallSalesForceProperty__c).GetField("CallSalesForcePropertyPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceProperty__c), "CallSalesForcePropertyPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "4ae080a2-9636-4a24-a45f-1c4eb1135092", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "4ae080a2-9636-4a24-a45f-1c4eb1135092", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "c9b6e3c1-8b22-4311-b49d-374571336cc4", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "c9b6e3c1-8b22-4311-b49d-374571336cc4", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "5432dcda-5ff1-45c7-afba-4f5a1fe74fbb", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "5432dcda-5ff1-45c7-afba-4f5a1fe74fbb", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "ebb7ae1c-b984-4fa0-b55e-56517f8ecc5d", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "ebb7ae1c-b984-4fa0-b55e-56517f8ecc5d", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "eed18b10-5474-45fc-b7fc-cabfc9cc5bab", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "eed18b10-5474-45fc-b7fc-cabfc9cc5bab", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,4,5,6,6,7,8,8,9,10,10,11,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceProperty__c_root_0 __ctx0__ = (__CallSalesForceProperty__c_root_0)_stateMgrs[0];
            __CallSalesForceProperty__c_1 __ctx1__ = (__CallSalesForceProperty__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesForcePropertyPort = new CDataServiceSelectProperty__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceProperty__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceProperty__c_root_0 __ctx0__ = (__CallSalesForceProperty__c_root_0)_stateMgrs[0];
            __CallSalesForceProperty__c_1 __ctx1__ = (__CallSalesForceProperty__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestProperty__c __CreateProperty__cMsg = new StatementRequestProperty__c("CreateProperty__cMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Property__c.MakeProperty__cMsg), new object[] {__CreateProperty__cMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateProperty__cMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateProperty__cMsg);
                    __ctx1__.__CreateProperty__cMsg = __CreateProperty__cMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateProperty__cMsg);
                }
                __ctx1__.__CreateProperty__cMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateProperty__cMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForcePropertyPort.SendMessage(0, __ctx1__.__CreateProperty__cMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateProperty__cMsg);
                    __edata.PortName = @"CallSalesForcePropertyPort";
                    Tracker.FireEvent(__eventLocations[5],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateProperty__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateProperty__cMsg);
                    __ctx1__.__CreateProperty__cMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if (!CallSalesForcePropertyPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateProperty__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateProperty__cResponseMsg);
                __ctx1__.__CreateProperty__cResponseMsg = new StatementResponseProperty__c("CreateProperty__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateProperty__cResponseMsg);
                CallSalesForcePropertyPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateProperty__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if (CallSalesForcePropertyPort != null)
                {
                    CallSalesForcePropertyPort.Close(__ctx1__, __seg__);
                    CallSalesForcePropertyPort = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateProperty__cResponseMsg);
                    __edata.PortName = @"CallSalesForcePropertyPort";
                    Tracker.FireEvent(__eventLocations[7],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __TempApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("TempApplicationCanonical", __ctx1__);

                    __TempApplicationCanonical.CopyFrom(__ctx1__.__ApplicationCanonical);
                    __TempApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__ApplicationCanonical);

                    if (__ctx1__.__TempApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = __TempApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__TempApplicationCanonical);
                }
                __ctx1__.__TempApplicationCanonical.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[9],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[10],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                {
                    __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Property__c.MakeCanonicalWithPropertySalesForceIDs), new object[] {__ApplicationCanonical.part}, new object[] {__ctx1__.__CreateProperty__cResponseMsg.parameters, __ctx1__.__TempApplicationCanonical.part});
                    __ApplicationCanonical.CopyContextPropertiesFrom(__ctx1__.__TempApplicationCanonical);

                    if (__ctx1__.__ApplicationCanonical != null)
                        __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = __ApplicationCanonical;
                    __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                }
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    __edata.Messages.Add(__ctx1__.__CreateProperty__cResponseMsg);
                    __edata.Messages.Add(__ctx1__.__TempApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[11],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateProperty__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateProperty__cResponseMsg);
                    __ctx1__.__CreateProperty__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__TempApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__TempApplicationCanonical);
                    __ctx1__.__TempApplicationCanonical = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{ADEC3756-C770-4070-8892-4A5150BB4328}"))
        };

    }
    //#line 224 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\IRS_Transcripts__c\CallSalesForceIRS_Transcripts__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectIRS_Transcripts__c)
        },
        new System.String[] {
            "CallSalesForceIRS_Transcrpts__cPort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceIRS_Transcripts__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceIRS_Transcripts__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceIRS_Transcripts__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceIRS_Transcripts__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceIRS_Transcripts__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceIRS_Transcripts__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceIRS_Transcripts__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceIRS_Transcripts__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>a3e4b6f5-c830-4e27-9432-73dea3761332</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>25a72f19-cbd4-46b2-b39a-426b38bc55ef</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>6109d690-c05b-4df5-af80-6c5d470b8a5a</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>8fe72710-5abc-4287-b189-d6aaa62474ec</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Create Account Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>fff50cb5-e914-4026-a9ff-62478f59d4cd</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>f2e54f5d-9f0d-4587-b6c4-339907a0aa54</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Create Account</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>4e097644-26be-4e1a-bd50-5b8edc583e04</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>73427182-95b3-4722-8640-99689257a9f1</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>ac8192e3-f399-4592-9e86-a3fe91d1a8a5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count IRS Transcripts</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>56fe4fa1-775e-4f6d-9a3a-19e2614f0f1a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>IRSTranscripts Exists</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>610057c3-3e35-4fe7-9c68-c6e8587a0854</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>IRSTranscripts</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>5fef0222-a8fe-410f-a9ba-6cc15bba804e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>9ed3a942-cbac-48c0-8b16-24995c6346e3</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>3a982488-9882-42cf-bf76-556663dd13d3</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceIRS_Transcripts__c'</ActionName><IsAtomic>0</IsAtomic><Line>224</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>234</Line><Position>13</Position><ShapeID>'8fe72710-5abc-4287-b189-d6aaa62474ec'</ShapeID>
<Messages>
	<MsgInfo><name>CreateIRS_Transcript__cRequest</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>240</Line><Position>37</Position><ShapeID>'ac8192e3-f399-4592-9e86-a3fe91d1a8a5'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>242</Line><Position>13</Position><ShapeID>'56fe4fa1-775e-4f6d-9a3a-19e2614f0f1a'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>245</Line><Position>17</Position><ShapeID>'5fef0222-a8fe-410f-a9ba-6cc15bba804e'</ShapeID>
<Messages>
	<MsgInfo><name>CreateIRS_Transcript__cRequest</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>247</Line><Position>17</Position><ShapeID>'9ed3a942-cbac-48c0-8b16-24995c6346e3'</ShapeID>
<Messages>
	<MsgInfo><name>CreateIRS_Transcript__cResponse</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='2ab55a14-6b8f-4cc7-a144-e94589959eb7' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='43e30315-803d-4a06-bbe2-21395a0a4fdb' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceIRS_Transcripts__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='48c464fd-1773-45e1-acb3-cbeb0a9950b0' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AfterIRSTranscriptCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='9c1570fe-eaf8-4fb9-bb5b-2a81b3faf0b4' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestIRS_Transcripts__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateIRS_Transcript__cRequest' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='df904d1d-136f-46cf-b08b-cf56a49aeb74' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseIRS_Transcripts__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateIRS_Transcript__cResponse' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='a3e4b6f5-c830-4e27-9432-73dea3761332' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='25a72f19-cbd4-46b2-b39a-426b38bc55ef' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='6109d690-c05b-4df5-af80-6c5d470b8a5a' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='8fe72710-5abc-4287-b189-d6aaa62474ec' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Create Account Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageRef' OID='fff50cb5-e914-4026-a9ff-62478f59d4cd' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.53'>
                            <om:Property Name='Ref' Value='CreateIRS_Transcript__cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='Transform' OID='f2e54f5d-9f0d-4587-b6c4-339907a0aa54' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.IRS_Transcripts__c.MakeIRS_Transcripts__cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map to Create Account' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='4e097644-26be-4e1a-bd50-5b8edc583e04' ParentLink='Transform_InputMessagePartRef' LowerBound='33.148' HigherBound='33.168'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='73427182-95b3-4722-8640-99689257a9f1' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.69'>
                                <om:Property Name='MessageRef' Value='CreateIRS_Transcript__cRequest' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='ac8192e3-f399-4592-9e86-a3fe91d1a8a5' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                        <om:Property Name='Expression' Value='AfterIRSTranscriptCount = xpath(CreateIRS_Transcript__cRequest.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/IRS_Transcripts__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/IRS_Transcripts__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/IRS_Transcripts__c&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count IRS Transcripts' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                    <om:Element Type='Decision' OID='56fe4fa1-775e-4f6d-9a3a-19e2614f0f1a' ParentLink='ComplexStatement_Statement' LowerBound='37.1' HigherBound='45.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='IRSTranscripts Exists' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='610057c3-3e35-4fe7-9c68-c6e8587a0854' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                            <om:Property Name='Expression' Value='AfterIRSTranscriptCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='IRSTranscripts' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Send' OID='5fef0222-a8fe-410f-a9ba-6cc15bba804e' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                                <om:Property Name='PortName' Value='CallSalesForceIRS_Transcrpts__cPort' />
                                <om:Property Name='MessageName' Value='CreateIRS_Transcript__cRequest' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send_1' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='9ed3a942-cbac-48c0-8b16-24995c6346e3' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='CallSalesForceIRS_Transcrpts__cPort' />
                                <om:Property Name='MessageName' Value='CreateIRS_Transcript__cResponse' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive_1' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='3a982488-9882-42cf-bf76-556663dd13d3' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='fedc1df6-ec99-402c-837a-0b759b96c189' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='16' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectIRS_Transcripts__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForceIRS_Transcrpts__cPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='2a3b4a6c-6140-4701-931f-be725937f3cb' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='cad8dedd-2c69-461d-a6e7-c239fefbaf31' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseIRS_Transcripts__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='3189c163-660b-4945-b52c-eab7d3b8a450' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='0cf1f0ce-64b9-4af1-aa9b-ac5e6ccc25c5' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestIRS_Transcripts__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='c7b11b21-b456-419d-9f8b-ed76f68b3f6c' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceIRS_Transcripts__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='7200d00e-fc0a-4f18-885f-ac75753ea59f' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectIRS_Transcripts__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='22d32f6b-8e02-47ce-a6bb-8d3aee949982' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='40c098fd-a52d-425f-9efe-680950b80c09' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.49' HigherBound='16.84'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseIRS_Transcripts__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='e92c1917-f567-43b9-980e-668ca1a1ec13' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.47'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestIRS_Transcripts__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceIRS_Transcripts__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceIRS_Transcripts__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceIRS_Transcripts__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceIRS_Transcripts__c __svc__ = (CallSalesForceIRS_Transcripts__c)_service;
                __CallSalesForceIRS_Transcripts__c_root_0 __ctx0__ = (__CallSalesForceIRS_Transcripts__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesForceIRS_Transcrpts__cPort != null)
                {
                    __svc__.CallSalesForceIRS_Transcrpts__cPort.Close(this, null);
                    __svc__.CallSalesForceIRS_Transcrpts__cPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceIRS_Transcripts__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceIRS_Transcripts__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceIRS_Transcripts__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceIRS_Transcripts__c __svc__ = (CallSalesForceIRS_Transcripts__c)_service;
                __CallSalesForceIRS_Transcripts__c_root_0 __ctx0__ = (__CallSalesForceIRS_Transcripts__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceIRS_Transcripts__c_1 __ctx1__ = (__CallSalesForceIRS_Transcripts__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateIRS_Transcript__cResponse != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateIRS_Transcript__cResponse);
                    __ctx1__.__CreateIRS_Transcript__cResponse = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateIRS_Transcript__cRequest != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateIRS_Transcript__cRequest);
                    __ctx1__.__CreateIRS_Transcript__cRequest = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateIRS_Transcript__cRequest")]
            internal StatementRequestIRS_Transcripts__c __CreateIRS_Transcript__cRequest;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateIRS_Transcript__cResponse")]
            internal StatementResponseIRS_Transcripts__c __CreateIRS_Transcript__cResponse;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AfterIRSTranscriptCount")]
            internal System.Int32 __AfterIRSTranscriptCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForceIRS_Transcrpts__cPort")]
        internal CDataServiceSelectIRS_Transcripts__c CallSalesForceIRS_Transcrpts__cPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectIRS_Transcripts__c.statement},
                                               typeof(CallSalesForceIRS_Transcripts__c).GetField("CallSalesForceIRS_Transcrpts__cPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceIRS_Transcripts__c), "CallSalesForceIRS_Transcrpts__cPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "8fe72710-5abc-4287-b189-d6aaa62474ec", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "8fe72710-5abc-4287-b189-d6aaa62474ec", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "ac8192e3-f399-4592-9e86-a3fe91d1a8a5", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "ac8192e3-f399-4592-9e86-a3fe91d1a8a5", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "56fe4fa1-775e-4f6d-9a3a-19e2614f0f1a", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "5fef0222-a8fe-410f-a9ba-6cc15bba804e", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "5fef0222-a8fe-410f-a9ba-6cc15bba804e", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "9ed3a942-cbac-48c0-8b16-24995c6346e3", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "9ed3a942-cbac-48c0-8b16-24995c6346e3", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "56fe4fa1-775e-4f6d-9a3a-19e2614f0f1a", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceIRS_Transcripts__c_root_0 __ctx0__ = (__CallSalesForceIRS_Transcripts__c_root_0)_stateMgrs[0];
            __CallSalesForceIRS_Transcripts__c_1 __ctx1__ = (__CallSalesForceIRS_Transcripts__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesForceIRS_Transcrpts__cPort = new CDataServiceSelectIRS_Transcripts__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceIRS_Transcripts__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceIRS_Transcripts__c_root_0 __ctx0__ = (__CallSalesForceIRS_Transcripts__c_root_0)_stateMgrs[0];
            __CallSalesForceIRS_Transcripts__c_1 __ctx1__ = (__CallSalesForceIRS_Transcripts__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__AfterIRSTranscriptCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestIRS_Transcripts__c __CreateIRS_Transcript__cRequest = new StatementRequestIRS_Transcripts__c("CreateIRS_Transcript__cRequest", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.IRS_Transcripts__c.MakeIRS_Transcripts__cRequest), new object[] {__CreateIRS_Transcript__cRequest.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateIRS_Transcript__cRequest != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateIRS_Transcript__cRequest);
                    __ctx1__.__CreateIRS_Transcript__cRequest = __CreateIRS_Transcript__cRequest;
                    __ctx1__.RefMessage(__ctx1__.__CreateIRS_Transcript__cRequest);
                }
                __ctx1__.__CreateIRS_Transcript__cRequest.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateIRS_Transcript__cRequest);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__AfterIRSTranscriptCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateIRS_Transcript__cRequest.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/IRS_Transcripts__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/IRS_Transcripts__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/IRS_Transcripts__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__AfterIRSTranscriptCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForceIRS_Transcrpts__cPort.SendMessage(0, __ctx1__.__CreateIRS_Transcript__cRequest, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateIRS_Transcript__cRequest);
                    __edata.PortName = @"CallSalesForceIRS_Transcrpts__cPort";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!CallSalesForceIRS_Transcrpts__cPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateIRS_Transcript__cResponse != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateIRS_Transcript__cResponse);
                __ctx1__.__CreateIRS_Transcript__cResponse = new StatementResponseIRS_Transcripts__c("CreateIRS_Transcript__cResponse", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateIRS_Transcript__cResponse);
                CallSalesForceIRS_Transcrpts__cPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateIRS_Transcript__cResponse, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateIRS_Transcript__cResponse);
                    __edata.PortName = @"CallSalesForceIRS_Transcrpts__cPort";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateIRS_Transcript__cResponse != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateIRS_Transcript__cResponse);
                    __ctx1__.__CreateIRS_Transcript__cResponse = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__CreateIRS_Transcript__cRequest != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateIRS_Transcript__cRequest);
                    __ctx1__.__CreateIRS_Transcript__cRequest = null;
                }
                if (CallSalesForceIRS_Transcrpts__cPort != null)
                {
                    CallSalesForceIRS_Transcrpts__cPort.Close(__ctx1__, __seg__);
                    CallSalesForceIRS_Transcrpts__cPort = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{F3C9A514-8D9A-4DD3-B77A-1278DB258AED}"))
        };

    }
    //#line 192 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Asset_Incomes__c\CallSalesForceAssetIncomes.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectAsset_Incomes__c)
        },
        new System.String[] {
            "CallSalesForce"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed public class CallSalesForceAssetIncomes : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.ePublic;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceAssetIncomes));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceAssetIncomes()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceAssetIncomes_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceAssetIncomes(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceAssetIncomes", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceAssetIncomes(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceAssetIncomes")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>89a03cef-0674-40f7-84ff-30265aa3b15a</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>61d8d467-4fa8-4d38-9574-85356b38b548</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>cbd3a1e8-fd89-4c4e-b247-23302d3e0c42</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Construct Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>b307b12d-7ce6-40c3-81f1-4881c2a5b620</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create SF Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>0ecd197a-8558-4173-b76e-a610f9cbcca5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>b0c67d7e-ad92-45ff-b68e-d7beaad415c7</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>782e6ec0-7009-4cce-a576-8ccedc65ee75</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>ae3560de-18de-48c7-988e-80e9884c6365</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>39859665-ec2c-4d76-bc02-a39197f141fd</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>bd9194b7-dd91-440d-977e-39e763228cc6</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceAssetIncomes'</ActionName><IsAtomic>0</IsAtomic><Line>192</Line><Position>12</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>201</Line><Position>13</Position><ShapeID>'b307b12d-7ce6-40c3-81f1-4881c2a5b620'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAssetIncomesMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>207</Line><Position>13</Position><ShapeID>'39859665-ec2c-4d76-bc02-a39197f141fd'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAssetIncomesMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>209</Line><Position>13</Position><ShapeID>'bd9194b7-dd91-440d-977e-39e763228cc6'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAssetIncomesResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='f9e0ad4d-c7a2-4282-9e70-5b67d739d922' LowerBound='1.1' HigherBound='41.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='b04931f1-3b7c-4708-be2e-bfb74b392f76' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='40.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceAssetIncomes' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='MessageDeclaration' OID='a69785d3-516a-4b79-918a-4f26a8bca162' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestAsset_Incomes__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateAssetIncomesMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='651787f2-c95c-488b-9f11-035e1e739b5b' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseAsset_Incomes__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateAssetIncomesResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='89a03cef-0674-40f7-84ff-30265aa3b15a' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='61d8d467-4fa8-4d38-9574-85356b38b548' ParentLink='ServiceBody_Declaration' LowerBound='26.15' HigherBound='26.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='cbd3a1e8-fd89-4c4e-b247-23302d3e0c42' ParentLink='ServiceBody_Statement' LowerBound='28.1' HigherBound='38.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Construct Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='b307b12d-7ce6-40c3-81f1-4881c2a5b620' ParentLink='ComplexStatement_Statement' LowerBound='28.1' HigherBound='34.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Create SF Request' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='0ecd197a-8558-4173-b76e-a610f9cbcca5' ParentLink='ComplexStatement_Statement' LowerBound='31.1' HigherBound='33.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Asset_Incomes__c.MakeSalesforcesAssetIncomes__cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Create Request' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='b0c67d7e-ad92-45ff-b68e-d7beaad415c7' ParentLink='Transform_InputMessagePartRef' LowerBound='32.145' HigherBound='32.165'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='782e6ec0-7009-4cce-a576-8ccedc65ee75' ParentLink='Transform_OutputMessagePartRef' LowerBound='32.28' HigherBound='32.60'>
                                <om:Property Name='MessageRef' Value='CreateAssetIncomesMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='ae3560de-18de-48c7-988e-80e9884c6365' ParentLink='Construct_MessageRef' LowerBound='29.23' HigherBound='29.44'>
                            <om:Property Name='Ref' Value='CreateAssetIncomesMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Send' OID='39859665-ec2c-4d76-bc02-a39197f141fd' ParentLink='ComplexStatement_Statement' LowerBound='34.1' HigherBound='36.1'>
                        <om:Property Name='PortName' Value='CallSalesForce' />
                        <om:Property Name='MessageName' Value='CreateAssetIncomesMsg' />
                        <om:Property Name='OperationName' Value='statement' />
                        <om:Property Name='OperationMessageName' Value='Request' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Send Request' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Receive' OID='bd9194b7-dd91-440d-977e-39e763228cc6' ParentLink='ComplexStatement_Statement' LowerBound='36.1' HigherBound='38.1'>
                        <om:Property Name='Activate' Value='False' />
                        <om:Property Name='PortName' Value='CallSalesForce' />
                        <om:Property Name='MessageName' Value='CreateAssetIncomesResponseMsg' />
                        <om:Property Name='OperationName' Value='statement' />
                        <om:Property Name='OperationMessageName' Value='Response' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Receive Response' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='782be194-2c29-434b-b303-a6cf84934594' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='15' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectAsset_Incomes__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForce' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='f430eca0-3905-40da-8bf5-acb009c9ce27' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='eb90faf4-e1a8-4fa7-a837-570aeaa8d19e' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseAsset_Incomes__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='a38766bc-ae0f-400e-a71a-c41f2b54cb14' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='a71704a2-24fb-4823-b8f4-ec64bab19dbc' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestAsset_Incomes__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='f5d74009-8fcf-43dc-b87c-30813ecbbb6d' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataService_Asset_Incomes__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='2b43fba4-db0c-429f-967c-dd93d15c4ef7' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectAsset_Incomes__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='d7b15f2e-8bce-4118-8e09-bf07c29f32ef' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='d52fec50-92e7-4d24-97e0-2faa1cbc30e8' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.45'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestAsset_Incomes__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='37f6da26-687d-4fbd-81e9-10fa547eeba0' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.47' HigherBound='16.80'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseAsset_Incomes__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceAssetIncomes_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceAssetIncomes_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceAssetIncomes")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceAssetIncomes __svc__ = (CallSalesForceAssetIncomes)_service;
                __CallSalesForceAssetIncomes_root_0 __ctx0__ = (__CallSalesForceAssetIncomes_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesForce != null)
                {
                    __svc__.CallSalesForce.Close(this, null);
                    __svc__.CallSalesForce = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceAssetIncomes_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceAssetIncomes_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceAssetIncomes")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceAssetIncomes __svc__ = (CallSalesForceAssetIncomes)_service;
                __CallSalesForceAssetIncomes_root_0 __ctx0__ = (__CallSalesForceAssetIncomes_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceAssetIncomes_1 __ctx1__ = (__CallSalesForceAssetIncomes_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateAssetIncomesMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAssetIncomesMsg);
                    __ctx1__.__CreateAssetIncomesMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateAssetIncomesResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAssetIncomesResponseMsg);
                    __ctx1__.__CreateAssetIncomesResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateAssetIncomesMsg")]
            internal StatementRequestAsset_Incomes__c __CreateAssetIncomesMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateAssetIncomesResponseMsg")]
            internal StatementResponseAsset_Incomes__c __CreateAssetIncomesResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForce")]
        internal CDataServiceSelectAsset_Incomes__c CallSalesForce;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectAsset_Incomes__c.statement},
                                               typeof(CallSalesForceAssetIncomes).GetField("CallSalesForce", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceAssetIncomes), "CallSalesForce"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "b307b12d-7ce6-40c3-81f1-4881c2a5b620", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "b307b12d-7ce6-40c3-81f1-4881c2a5b620", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "39859665-ec2c-4d76-bc02-a39197f141fd", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "39859665-ec2c-4d76-bc02-a39197f141fd", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "bd9194b7-dd91-440d-977e-39e763228cc6", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "bd9194b7-dd91-440d-977e-39e763228cc6", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,4,5,6,6,7,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceAssetIncomes_root_0 __ctx0__ = (__CallSalesForceAssetIncomes_root_0)_stateMgrs[0];
            __CallSalesForceAssetIncomes_1 __ctx1__ = (__CallSalesForceAssetIncomes_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesForce = new CDataServiceSelectAsset_Incomes__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceAssetIncomes_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceAssetIncomes_root_0 __ctx0__ = (__CallSalesForceAssetIncomes_root_0)_stateMgrs[0];
            __CallSalesForceAssetIncomes_1 __ctx1__ = (__CallSalesForceAssetIncomes_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestAsset_Incomes__c __CreateAssetIncomesMsg = new StatementRequestAsset_Incomes__c("CreateAssetIncomesMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Asset_Incomes__c.MakeSalesforcesAssetIncomes__cRequest), new object[] {__CreateAssetIncomesMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateAssetIncomesMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateAssetIncomesMsg);
                    __ctx1__.__CreateAssetIncomesMsg = __CreateAssetIncomesMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateAssetIncomesMsg);
                }
                __ctx1__.__CreateAssetIncomesMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateAssetIncomesMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForce.SendMessage(0, __ctx1__.__CreateAssetIncomesMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateAssetIncomesMsg);
                    __edata.PortName = @"CallSalesForce";
                    Tracker.FireEvent(__eventLocations[5],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateAssetIncomesMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAssetIncomesMsg);
                    __ctx1__.__CreateAssetIncomesMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if (!CallSalesForce.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateAssetIncomesResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAssetIncomesResponseMsg);
                __ctx1__.__CreateAssetIncomesResponseMsg = new StatementResponseAsset_Incomes__c("CreateAssetIncomesResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateAssetIncomesResponseMsg);
                CallSalesForce.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateAssetIncomesResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if (CallSalesForce != null)
                {
                    CallSalesForce.Close(__ctx1__, __seg__);
                    CallSalesForce = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateAssetIncomesResponseMsg);
                    __edata.PortName = @"CallSalesForce";
                    Tracker.FireEvent(__eventLocations[7],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateAssetIncomesResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAssetIncomesResponseMsg);
                    __ctx1__.__CreateAssetIncomesResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 16;
            case 16:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{1C97210A-2E7F-4B04-8C45-0B2419530918}"))
        };

    }
    //#line 224 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Mortgage__c\CallSalesForceMortgage__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectMortgage__c)
        },
        new System.String[] {
            "CallSalesForce"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceMortgage__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceMortgage__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceMortgage__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceMortgage__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceMortgage__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceMortgage__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceMortgage__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceMortgage__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>40e4bfe2-fbf0-4e2d-b003-af7aed6ac433</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>440850ff-ff83-47c9-96d1-9af52fdaec66</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>d8326759-2912-44af-a57c-071146d54f77</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Construct Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>d47d20e5-b18e-483d-be4c-e2279a1fd315</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create SF Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>c1368c91-cb3c-48de-a417-58fcd41e5c1e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>e33751b5-e758-4932-bd44-0f727cf15cab</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>f08b4144-c660-492f-b9c6-10e7f4213049</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>24bee083-45fe-4729-a876-4ca45b58cf02</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>7f534599-7993-457b-9972-27fa195d96ea</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Count Mortgage</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>f39642f4-5344-421d-896c-a18c8c837a7c</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Mortgage Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>2531e1ac-1f60-4947-a8dd-f7cfad3cb718</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Mortgage</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>a7c59334-a455-4f2d-8a1d-1362792dc750</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>cef30bf0-0e39-45b0-9f82-aaef84f17108</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>c4c432a7-9513-4ef9-9a23-d43812eb3970</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceMortgage__c'</ActionName><IsAtomic>0</IsAtomic><Line>224</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>234</Line><Position>13</Position><ShapeID>'d47d20e5-b18e-483d-be4c-e2279a1fd315'</ShapeID>
<Messages>
	<MsgInfo><name>SalesForceMortgage__cRequestMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>240</Line><Position>32</Position><ShapeID>'7f534599-7993-457b-9972-27fa195d96ea'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>242</Line><Position>13</Position><ShapeID>'f39642f4-5344-421d-896c-a18c8c837a7c'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>245</Line><Position>17</Position><ShapeID>'a7c59334-a455-4f2d-8a1d-1362792dc750'</ShapeID>
<Messages>
	<MsgInfo><name>SalesForceMortgage__cRequestMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>247</Line><Position>17</Position><ShapeID>'cef30bf0-0e39-45b0-9f82-aaef84f17108'</ShapeID>
<Messages>
	<MsgInfo><name>SalesForceMortgage__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='e930a1ed-6bac-4921-a3bb-7cfe4eb0ec65' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='8018f605-762c-4dbd-bad2-27743926b205' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceMortgage__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='448c79ed-5e88-4cf9-8b31-9f47b9f8d182' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AfterMortgageCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='68b2260c-d22b-4eb0-98f4-9af3ba8c4ded' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestMortgage__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesForceMortgage__cRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='88d05203-e820-4436-97ff-4eca22c2d9cf' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseMortgage__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesForceMortgage__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='40e4bfe2-fbf0-4e2d-b003-af7aed6ac433' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='440850ff-ff83-47c9-96d1-9af52fdaec66' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='d8326759-2912-44af-a57c-071146d54f77' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='35.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Construct Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='d47d20e5-b18e-483d-be4c-e2279a1fd315' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Create SF Request' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='c1368c91-cb3c-48de-a417-58fcd41e5c1e' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Mortgage__c.MakeSalesForceMortgage__cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Create Request' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='e33751b5-e758-4932-bd44-0f727cf15cab' ParentLink='Transform_InputMessagePartRef' LowerBound='33.145' HigherBound='33.165'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='f08b4144-c660-492f-b9c6-10e7f4213049' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.70'>
                                <om:Property Name='MessageRef' Value='SalesForceMortgage__cRequestMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='24bee083-45fe-4729-a876-4ca45b58cf02' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.54'>
                            <om:Property Name='Ref' Value='SalesForceMortgage__cRequestMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
                <om:Element Type='VariableAssignment' OID='7f534599-7993-457b-9972-27fa195d96ea' ParentLink='ServiceBody_Statement' LowerBound='35.1' HigherBound='37.1'>
                    <om:Property Name='Expression' Value='AfterMortgageCount = xpath(SalesForceMortgage__cRequestMsg.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Mortgage__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Mortgage__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Mortgage__c&apos;])&quot;);' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Count Mortgage' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='Decision' OID='f39642f4-5344-421d-896c-a18c8c837a7c' ParentLink='ServiceBody_Statement' LowerBound='37.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Mortgage Exists?' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='DecisionBranch' OID='2531e1ac-1f60-4947-a8dd-f7cfad3cb718' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                        <om:Property Name='Expression' Value='AfterMortgageCount &gt; 0' />
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Mortgage' />
                        <om:Property Name='Signal' Value='False' />
                        <om:Element Type='Send' OID='a7c59334-a455-4f2d-8a1d-1362792dc750' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                            <om:Property Name='PortName' Value='CallSalesForce' />
                            <om:Property Name='MessageName' Value='SalesForceMortgage__cRequestMsg' />
                            <om:Property Name='OperationName' Value='statement' />
                            <om:Property Name='OperationMessageName' Value='Request' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Send_1' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='Receive' OID='cef30bf0-0e39-45b0-9f82-aaef84f17108' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                            <om:Property Name='Activate' Value='False' />
                            <om:Property Name='PortName' Value='CallSalesForce' />
                            <om:Property Name='MessageName' Value='SalesForceMortgage__cResponseMsg' />
                            <om:Property Name='OperationName' Value='statement' />
                            <om:Property Name='OperationMessageName' Value='Response' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Receive_1' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='DecisionBranch' OID='c4c432a7-9513-4ef9-9a23-d43812eb3970' ParentLink='ReallyComplexStatement_Branch'>
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Else' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='2ec9b485-9cc7-4ad5-972d-d8a820849625' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='15' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectMortgage__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForce' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='68c8a849-fa16-4e8e-b752-bd6f24eb1cd3' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='52a7af72-3a74-4088-87fe-7206a9795aeb' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseMortgage__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='21816455-aa9f-4027-b781-6195be54b28c' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='4d182ef0-46ff-418c-9f97-9ca9e772dcda' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestMortgage__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='56a66acd-039f-4420-9074-64f3ed4b11d8' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceMortgage__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='29f8a784-b1f4-4c25-b263-3e1eb0a4a158' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectMortgage__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='2fc5beaf-437c-49c8-8d0e-fd2f9eaa1c4e' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='e38f641c-e277-403e-bc6a-c5973f2660a2' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.42' HigherBound='16.70'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseMortgage__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='296601f2-ca1a-478c-9a5d-ebffd6941bff' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.40'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestMortgage__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceMortgage__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceMortgage__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceMortgage__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceMortgage__c __svc__ = (CallSalesForceMortgage__c)_service;
                __CallSalesForceMortgage__c_root_0 __ctx0__ = (__CallSalesForceMortgage__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesForce != null)
                {
                    __svc__.CallSalesForce.Close(this, null);
                    __svc__.CallSalesForce = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceMortgage__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceMortgage__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceMortgage__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceMortgage__c __svc__ = (CallSalesForceMortgage__c)_service;
                __CallSalesForceMortgage__c_root_0 __ctx0__ = (__CallSalesForceMortgage__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceMortgage__c_1 __ctx1__ = (__CallSalesForceMortgage__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__SalesForceMortgage__cRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesForceMortgage__cRequestMsg);
                    __ctx1__.__SalesForceMortgage__cRequestMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__SalesForceMortgage__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesForceMortgage__cResponseMsg);
                    __ctx1__.__SalesForceMortgage__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesForceMortgage__cRequestMsg")]
            internal StatementRequestMortgage__c __SalesForceMortgage__cRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesForceMortgage__cResponseMsg")]
            internal StatementResponseMortgage__c __SalesForceMortgage__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AfterMortgageCount")]
            internal System.Int32 __AfterMortgageCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForce")]
        internal CDataServiceSelectMortgage__c CallSalesForce;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectMortgage__c.statement},
                                               typeof(CallSalesForceMortgage__c).GetField("CallSalesForce", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceMortgage__c), "CallSalesForce"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "d47d20e5-b18e-483d-be4c-e2279a1fd315", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "d47d20e5-b18e-483d-be4c-e2279a1fd315", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "7f534599-7993-457b-9972-27fa195d96ea", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "7f534599-7993-457b-9972-27fa195d96ea", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "f39642f4-5344-421d-896c-a18c8c837a7c", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "a7c59334-a455-4f2d-8a1d-1362792dc750", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "a7c59334-a455-4f2d-8a1d-1362792dc750", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "cef30bf0-0e39-45b0-9f82-aaef84f17108", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "cef30bf0-0e39-45b0-9f82-aaef84f17108", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "f39642f4-5344-421d-896c-a18c8c837a7c", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceMortgage__c_root_0 __ctx0__ = (__CallSalesForceMortgage__c_root_0)_stateMgrs[0];
            __CallSalesForceMortgage__c_1 __ctx1__ = (__CallSalesForceMortgage__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesForce = new CDataServiceSelectMortgage__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceMortgage__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceMortgage__c_root_0 __ctx0__ = (__CallSalesForceMortgage__c_root_0)_stateMgrs[0];
            __CallSalesForceMortgage__c_1 __ctx1__ = (__CallSalesForceMortgage__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__AfterMortgageCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestMortgage__c __SalesForceMortgage__cRequestMsg = new StatementRequestMortgage__c("SalesForceMortgage__cRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Mortgage__c.MakeSalesForceMortgage__cRequest), new object[] {__SalesForceMortgage__cRequestMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__SalesForceMortgage__cRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__SalesForceMortgage__cRequestMsg);
                    __ctx1__.__SalesForceMortgage__cRequestMsg = __SalesForceMortgage__cRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__SalesForceMortgage__cRequestMsg);
                }
                __ctx1__.__SalesForceMortgage__cRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__SalesForceMortgage__cRequestMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__AfterMortgageCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__SalesForceMortgage__cRequestMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Mortgage__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Mortgage__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Mortgage__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__AfterMortgageCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForce.SendMessage(0, __ctx1__.__SalesForceMortgage__cRequestMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__SalesForceMortgage__cRequestMsg);
                    __edata.PortName = @"CallSalesForce";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!CallSalesForce.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__SalesForceMortgage__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__SalesForceMortgage__cResponseMsg);
                __ctx1__.__SalesForceMortgage__cResponseMsg = new StatementResponseMortgage__c("SalesForceMortgage__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__SalesForceMortgage__cResponseMsg);
                CallSalesForce.ReceiveMessage(0, __msgEnv__, __ctx1__.__SalesForceMortgage__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__SalesForceMortgage__cResponseMsg);
                    __edata.PortName = @"CallSalesForce";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__SalesForceMortgage__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesForceMortgage__cResponseMsg);
                    __ctx1__.__SalesForceMortgage__cResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__SalesForceMortgage__cRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesForceMortgage__cRequestMsg);
                    __ctx1__.__SalesForceMortgage__cRequestMsg = null;
                }
                if (CallSalesForce != null)
                {
                    CallSalesForce.Close(__ctx1__, __seg__);
                    CallSalesForce = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{437D0DA2-CBEA-4A0B-AA68-87F93311B4C6}"))
        };

    }
    //#line 224 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Debts_Expenses__c\CallSalesForceDebts_Expenses__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectDebts_Expenses__c)
        },
        new System.String[] {
            "CallSalesForceDebts_Expenses__cPort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable|Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eExecable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceDebts_Expenses__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = true;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceDebts_Expenses__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceDebts_Expenses__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceDebts_Expenses__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceDebts_Expenses__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceDebts_Expenses__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceDebts_Expenses__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceDebts_Expenses__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>2d12d7f7-dfa0-4068-a178-1d6abaca9ed2</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>de103c9c-e0a4-422b-8e61-e64679f0da78</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>ce933529-7121-4fa7-b302-886425a6ec4a</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Debts</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>4a5a8154-61df-48a9-8809-985512e352b8</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Debts_Expenses Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>01be3094-eae6-490c-b282-1cd5cc5214ee</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Create Account</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>ff17db92-1376-483e-9cc5-4870787f2698</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>e3676fdd-72b6-4239-bb9c-b30ad301dfc4</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>97878459-4e3f-4a1c-9ceb-bb77ae6acc62</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>0e277544-ed3d-4030-b676-302ddac1750f</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count Debts Expenses</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>b414db95-91dd-45e3-a50c-4d2385dfdb49</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Debts Expenses Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>a5069e37-ec9a-46e0-8c89-f664949038ab</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Debts Expenses</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>6d8de275-685f-4093-8ac7-408996f14c97</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>aeea071c-36ee-4748-bb07-dd6ab8179066</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>4368acd5-f116-4da9-9741-6f95f643b235</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceDebts_Expenses__c'</ActionName><IsAtomic>0</IsAtomic><Line>224</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>234</Line><Position>13</Position><ShapeID>'4a5a8154-61df-48a9-8809-985512e352b8'</ShapeID>
<Messages>
	<MsgInfo><name>CreateDebts_Expenses__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>240</Line><Position>37</Position><ShapeID>'0e277544-ed3d-4030-b676-302ddac1750f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>242</Line><Position>13</Position><ShapeID>'b414db95-91dd-45e3-a50c-4d2385dfdb49'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>245</Line><Position>17</Position><ShapeID>'6d8de275-685f-4093-8ac7-408996f14c97'</ShapeID>
<Messages>
	<MsgInfo><name>CreateDebts_Expenses__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>247</Line><Position>17</Position><ShapeID>'aeea071c-36ee-4748-bb07-dd6ab8179066'</ShapeID>
<Messages>
	<MsgInfo><name>CreateDebts_Expenses__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='b422b453-993d-4757-a567-405232281659' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='6e0f6d81-466d-4e5f-b7cd-b7b35d2cec54' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceDebts_Expenses__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='e90354d0-ad60-472b-bb97-5f2754a0a6e8' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AfterDebtsExpensesCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='b0578c24-8206-485a-8ce6-4183672071cc' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestDebts_Expenses__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateDebts_Expenses__cMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='aef20416-6175-400a-8173-792b6820bd4f' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseDebts_Expenses__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateDebts_Expenses__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='2d12d7f7-dfa0-4068-a178-1d6abaca9ed2' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='de103c9c-e0a4-422b-8e61-e64679f0da78' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.110'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='ce933529-7121-4fa7-b302-886425a6ec4a' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Debts' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='4a5a8154-61df-48a9-8809-985512e352b8' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Debts_Expenses Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='01be3094-eae6-490c-b282-1cd5cc5214ee' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.Debts_Expenses__c.MakeSalesForceDebts_Expenses__cRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map to Create Account' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='MessagePartRef' OID='ff17db92-1376-483e-9cc5-4870787f2698' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.65'>
                                <om:Property Name='MessageRef' Value='CreateDebts_Expenses__cMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='e3676fdd-72b6-4239-bb9c-b30ad301dfc4' ParentLink='Transform_InputMessagePartRef' LowerBound='33.152' HigherBound='33.172'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='97878459-4e3f-4a1c-9ceb-bb77ae6acc62' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.49'>
                            <om:Property Name='Ref' Value='CreateDebts_Expenses__cMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='0e277544-ed3d-4030-b676-302ddac1750f' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                        <om:Property Name='Expression' Value='AfterDebtsExpensesCount = xpath(CreateDebts_Expenses__cMsg.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Debts_Expenses__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Debts_Expenses__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Debts_Expenses__c&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count Debts Expenses' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                    <om:Element Type='Decision' OID='b414db95-91dd-45e3-a50c-4d2385dfdb49' ParentLink='ComplexStatement_Statement' LowerBound='37.1' HigherBound='45.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Debts Expenses Exists?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='a5069e37-ec9a-46e0-8c89-f664949038ab' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                            <om:Property Name='Expression' Value='AfterDebtsExpensesCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Debts Expenses' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Send' OID='6d8de275-685f-4093-8ac7-408996f14c97' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                                <om:Property Name='PortName' Value='CallSalesForceDebts_Expenses__cPort' />
                                <om:Property Name='MessageName' Value='CreateDebts_Expenses__cMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Request' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='aeea071c-36ee-4748-bb07-dd6ab8179066' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='CallSalesForceDebts_Expenses__cPort' />
                                <om:Property Name='MessageName' Value='CreateDebts_Expenses__cResponseMsg' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Response' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='4368acd5-f116-4da9-9741-6f95f643b235' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='b97a2b37-25e6-457d-ac75-1cc3bce2b5b6' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='13' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectDebts_Expenses__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CallSalesForceDebts_Expenses__cPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='596edd25-be2e-47bb-a9fa-6e8ecba1d336' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='09087611-dd3e-4ae1-ab44-d60e196874d4' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementResponseDebts_Expenses__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='777ea4ae-8d43-410b-8aac-037b7998856d' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='b87810dc-3939-488d-9303-0d0e7b36e3aa' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata message type: ' />
            <om:Property Name='Name' Value='StatementRequestDebts_Expenses__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='PartDeclaration' OID='7a5ac84d-ed9b-4b30-8bd0-376cf394a0ea' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataServiceDebts_Expenses__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata message part: ' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='ebbc4952-c436-4dac-81a2-7cf7f3cd417e' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Public' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='AnalystComments' Value='Adapter metadata port type: ' />
            <om:Property Name='Name' Value='CDataServiceSelectDebts_Expenses__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='OperationDeclaration' OID='6dd5bd50-2b55-4335-b2d2-d8cff9f6225a' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='AnalystComments' Value='Adapter metadata operation: ' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageRef' OID='89ac43ee-7663-43b7-8aa9-fff843f82b57' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.48' HigherBound='16.82'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseDebts_Expenses__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='MessageRef' OID='6e7ac6ad-a38b-429e-9bb6-ec96773e2490' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.46'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestDebts_Expenses__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='AnalystComments' Value='Adapter metadata operation message: ' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceDebts_Expenses__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceDebts_Expenses__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceDebts_Expenses__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceDebts_Expenses__c __svc__ = (CallSalesForceDebts_Expenses__c)_service;
                __CallSalesForceDebts_Expenses__c_root_0 __ctx0__ = (__CallSalesForceDebts_Expenses__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CallSalesForceDebts_Expenses__cPort != null)
                {
                    __svc__.CallSalesForceDebts_Expenses__cPort.Close(this, null);
                    __svc__.CallSalesForceDebts_Expenses__cPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceDebts_Expenses__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceDebts_Expenses__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceDebts_Expenses__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceDebts_Expenses__c __svc__ = (CallSalesForceDebts_Expenses__c)_service;
                __CallSalesForceDebts_Expenses__c_root_0 __ctx0__ = (__CallSalesForceDebts_Expenses__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceDebts_Expenses__c_1 __ctx1__ = (__CallSalesForceDebts_Expenses__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateDebts_Expenses__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDebts_Expenses__cResponseMsg);
                    __ctx1__.__CreateDebts_Expenses__cResponseMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateDebts_Expenses__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDebts_Expenses__cMsg);
                    __ctx1__.__CreateDebts_Expenses__cMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateDebts_Expenses__cMsg")]
            internal StatementRequestDebts_Expenses__c __CreateDebts_Expenses__cMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateDebts_Expenses__cResponseMsg")]
            internal StatementResponseDebts_Expenses__c __CreateDebts_Expenses__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AfterDebtsExpensesCount")]
            internal System.Int32 __AfterDebtsExpensesCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CallSalesForceDebts_Expenses__cPort")]
        internal CDataServiceSelectDebts_Expenses__c CallSalesForceDebts_Expenses__cPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectDebts_Expenses__c.statement},
                                               typeof(CallSalesForceDebts_Expenses__c).GetField("CallSalesForceDebts_Expenses__cPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceDebts_Expenses__c), "CallSalesForceDebts_Expenses__cPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "4a5a8154-61df-48a9-8809-985512e352b8", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "4a5a8154-61df-48a9-8809-985512e352b8", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "0e277544-ed3d-4030-b676-302ddac1750f", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "0e277544-ed3d-4030-b676-302ddac1750f", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "b414db95-91dd-45e3-a50c-4d2385dfdb49", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "6d8de275-685f-4093-8ac7-408996f14c97", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "6d8de275-685f-4093-8ac7-408996f14c97", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "aeea071c-36ee-4748-bb07-dd6ab8179066", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "aeea071c-36ee-4748-bb07-dd6ab8179066", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "b414db95-91dd-45e3-a50c-4d2385dfdb49", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceDebts_Expenses__c_root_0 __ctx0__ = (__CallSalesForceDebts_Expenses__c_root_0)_stateMgrs[0];
            __CallSalesForceDebts_Expenses__c_1 __ctx1__ = (__CallSalesForceDebts_Expenses__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CallSalesForceDebts_Expenses__cPort = new CDataServiceSelectDebts_Expenses__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceDebts_Expenses__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceDebts_Expenses__c_root_0 __ctx0__ = (__CallSalesForceDebts_Expenses__c_root_0)_stateMgrs[0];
            __CallSalesForceDebts_Expenses__c_1 __ctx1__ = (__CallSalesForceDebts_Expenses__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom((Microsoft.XLANGs.Core.XMessage)Args[0]);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__AfterDebtsExpensesCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestDebts_Expenses__c __CreateDebts_Expenses__cMsg = new StatementRequestDebts_Expenses__c("CreateDebts_Expenses__cMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.Debts_Expenses__c.MakeSalesForceDebts_Expenses__cRequest), new object[] {__CreateDebts_Expenses__cMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateDebts_Expenses__cMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateDebts_Expenses__cMsg);
                    __ctx1__.__CreateDebts_Expenses__cMsg = __CreateDebts_Expenses__cMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateDebts_Expenses__cMsg);
                }
                __ctx1__.__CreateDebts_Expenses__cMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateDebts_Expenses__cMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__AfterDebtsExpensesCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateDebts_Expenses__cMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Debts_Expenses__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Debts_Expenses__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Debts_Expenses__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__AfterDebtsExpensesCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CallSalesForceDebts_Expenses__cPort.SendMessage(0, __ctx1__.__CreateDebts_Expenses__cMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateDebts_Expenses__cMsg);
                    __edata.PortName = @"CallSalesForceDebts_Expenses__cPort";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!CallSalesForceDebts_Expenses__cPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateDebts_Expenses__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDebts_Expenses__cResponseMsg);
                __ctx1__.__CreateDebts_Expenses__cResponseMsg = new StatementResponseDebts_Expenses__c("CreateDebts_Expenses__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateDebts_Expenses__cResponseMsg);
                CallSalesForceDebts_Expenses__cPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateDebts_Expenses__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateDebts_Expenses__cResponseMsg);
                    __edata.PortName = @"CallSalesForceDebts_Expenses__cPort";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateDebts_Expenses__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDebts_Expenses__cResponseMsg);
                    __ctx1__.__CreateDebts_Expenses__cResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__CreateDebts_Expenses__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDebts_Expenses__cMsg);
                    __ctx1__.__CreateDebts_Expenses__cMsg = null;
                }
                if (CallSalesForceDebts_Expenses__cPort != null)
                {
                    CallSalesForceDebts_Expenses__cPort.Close(__ctx1__, __seg__);
                    CallSalesForceDebts_Expenses__cPort = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{0E382AB7-51C9-47A1-AF4B-F25F6F87C284}"))
        };

    }
    //#line 279 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\DLAP Application Error Analyzer.odx"
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class Error_Analyzer : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eNone,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String EventNotificationMessageTemplate,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String EventNotificationApplicationNumber,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String EventNotificationProcessStep,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] ref System.String EventNotificationMessage,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.Exception excpCap)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(Error_Analyzer));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static Error_Analyzer()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __Error_Analyzer_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public Error_Analyzer(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "Error_Analyzer", tracker)
        {
            ConstructorHelper();
        }

        public Error_Analyzer(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "Error_Analyzer")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>11893d0d-c7ad-44aa-bd13-ca7d23d4abbe</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>c65b5091-c8ab-4da4-897c-7fa8ff32769c</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>EventNotificationMessageTemplate</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>648eb382-8f48-484a-b7d6-ecbba65ff117</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>EventNotificationApplicationNumber</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>dee04a09-49d6-4507-b7db-a7442040d097</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>EventNotificationProcessStep</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>c4308715-7914-4560-b05c-50747a446e18</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>EventNotificationMessage</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>ecd1d5a0-eca6-42f2-82ab-522f08def6f0</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>excpCap</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>5c60e468-8321-48c0-9591-058aef039bcd</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Exception has Message Data?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>dbc986b4-62a4-4310-b8c4-7f2d212f5a76</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Test Errors</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>22c2a2a8-bd52-43a3-91b0-459d4a922834</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Oracle Checks</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>08fcd8cf-4eb2-473a-b0ff-4d0685fe808a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Bad Oracle Logon</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>221e93e9-9194-47f1-8d7b-55e81118cba5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Did a logon to Oracle fail?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>986cdcfc-9744-4b7e-a66b-35a424b92ec4</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Logon Failed</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>9f326045-851b-4039-8557-bf34f3726a5a</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Fault Error</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>341bdf10-6e5f-4c70-80d9-b8d1ad50e850</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>55286032-221d-48c5-9c8b-c9334823c02c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Bad Oracle TNS Entry</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>50df4e4d-13dd-489f-a98b-ecd4f72dfd8b</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Did a logon to Oracle fail?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>ef51e6c8-2155-4a5a-a187-fd5b7cfe814f</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>TNS Entry Bad</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>102b2e63-781a-4514-98c1-201cf3549268</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Fault Error</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>5ecb59ca-ec52-449d-a371-1b6380cab712</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>c022a8cf-1cd9-4611-849d-ce51125b448e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Salesforce Checks</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>a5c7a843-5c1a-4f24-88cf-ee8c1398d507</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Bad SF logon</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>78b713ec-4004-44a0-84e6-42a51db381e4</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Did a logon to SF fail?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>d06dc35b-17d8-4827-9dc8-f01e48c7a03e</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>SF Logon Bad</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>a5a9361b-2a48-446b-8bc3-3b3891381c27</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Fault Error</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>7b54e201-8eeb-4dc2-bca7-90c07c4060ce</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>cdb171ca-8273-439b-8b4c-6ad05499f7de</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Bad SF Server Name</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>ac55ce8d-0918-48ed-9c3c-e0915f95ede6</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Did a logon to SF fail?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>32787bbe-4382-4817-b574-8a4acd7aeb36</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>SF Server Bad</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>b9a22284-859a-4a8b-bf1d-7b2cb884bc75</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Fault Error</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>75d69b28-d86e-4aba-926b-883c992ed037</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>77f666e7-38e7-4758-a168-ef93128efdad</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'Error_Analyzer'</ActionName><IsAtomic>0</IsAtomic><Line>279</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>296</Line><Position>13</Position><ShapeID>'5c60e468-8321-48c0-9591-058aef039bcd'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>299</Line><Position>23</Position><ShapeID>'08fcd8cf-4eb2-473a-b0ff-4d0685fe808a'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>302</Line><Position>17</Position><ShapeID>'221e93e9-9194-47f1-8d7b-55e81118cba5'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>305</Line><Position>50</Position><ShapeID>'9f326045-851b-4039-8557-bf34f3726a5a'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>316</Line><Position>23</Position><ShapeID>'55286032-221d-48c5-9c8b-c9334823c02c'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>319</Line><Position>17</Position><ShapeID>'50df4e4d-13dd-489f-a98b-ecd4f72dfd8b'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>322</Line><Position>50</Position><ShapeID>'102b2e63-781a-4514-98c1-201cf3549268'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>331</Line><Position>23</Position><ShapeID>'a5c7a843-5c1a-4f24-88cf-ee8c1398d507'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>334</Line><Position>17</Position><ShapeID>'78b713ec-4004-44a0-84e6-42a51db381e4'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>337</Line><Position>50</Position><ShapeID>'a5a9361b-2a48-446b-8bc3-3b3891381c27'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>348</Line><Position>23</Position><ShapeID>'cdb171ca-8273-439b-8b4c-6ad05499f7de'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>351</Line><Position>17</Position><ShapeID>'ac55ce8d-0918-48ed-9c3c-e0915f95ede6'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>354</Line><Position>50</Position><ShapeID>'b9a22284-859a-4a8b-bf1d-7b2cb884bc75'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='6d40cd79-81c3-45fa-859e-d7b81ce160c3' LowerBound='1.1' HigherBound='95.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='ServiceDeclaration' OID='626a85d7-6462-4727-b8d5-0fc53698edc2' ParentLink='Module_ServiceDeclaration' LowerBound='4.1' HigherBound='94.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='Error_Analyzer' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='VariableDeclaration' OID='c7e46956-13fd-499e-8441-eadebf5f8c68' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='7.1' HigherBound='8.1'>
                <om:Property Name='UseDefaultConstructor' Value='True' />
                <om:Property Name='Type' Value='System.Text.StringBuilder' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='exceptionMessage' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='aef82567-9eb6-42c0-af6b-c995a6cf223c' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='8.1' HigherBound='9.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Text.RegularExpressions.Regex' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='regEx' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='28b4b3d2-2bbe-4c95-916d-ae2e707a4cde' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='9.1' HigherBound='10.1'>
                <om:Property Name='InitialValue' Value='@&quot;Could not execute the specified command: INVALID_LOGIN: Invalid username, password, security token; or user locked out.&quot;' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='logonExceptionSFRegex' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='c7c8f1aa-c8fc-4740-9ace-022b512d0f6f' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Text.RegularExpressions.MatchCollection' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='regMatchCollection' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='6373669d-9142-4539-981b-b446056498e7' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='11.1' HigherBound='12.1'>
                <om:Property Name='InitialValue' Value='@&quot;ORA-01017: invalid username/password; logon denied&quot;' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='logonExceptionRegex' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='171d8065-7b5c-4d3a-af37-b96fe6d24c31' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='12.1' HigherBound='13.1'>
                <om:Property Name='InitialValue' Value='@&quot;ORA-12154: TNS:could not resolve the connect identifier specified&quot;' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='badTNSRegex' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='cc5d9a56-ceb6-489f-93c1-f07cbfbba385' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='13.1' HigherBound='14.1'>
                <om:Property Name='InitialValue' Value='@&quot;System error: No such host is known&quot;' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='badSFServerName' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='11893d0d-c7ad-44aa-bd13-ca7d23d4abbe' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='VariableDeclaration' OID='c65b5091-c8ab-4da4-897c-7fa8ff32769c' ParentLink='ServiceBody_Declaration' LowerBound='14.15' HigherBound='14.61'>
                    <om:Property Name='InitialValue' Value='@&quot;Application Import:\nThis application {0} {1} during the {2} Process Step.\n&quot;' />
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='EventNotificationMessageTemplate' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='648eb382-8f48-484a-b7d6-ecbba65ff117' ParentLink='ServiceBody_Declaration' LowerBound='14.63' HigherBound='14.111'>
                    <om:Property Name='InitialValue' Value='&quot;&quot;' />
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='EventNotificationApplicationNumber' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='dee04a09-49d6-4507-b7db-a7442040d097' ParentLink='ServiceBody_Declaration' LowerBound='14.113' HigherBound='14.155'>
                    <om:Property Name='InitialValue' Value='&quot;Initial Setup&quot;' />
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='EventNotificationProcessStep' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='c4308715-7914-4560-b05c-50747a446e18' ParentLink='ServiceBody_Declaration' LowerBound='14.157' HigherBound='14.199'>
                    <om:Property Name='InitialValue' Value='&quot;Order LV Inspection Event was Successfully transferred to Loss Verification.&quot;' />
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='EventNotificationMessage' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='ecd1d5a0-eca6-42f2-82ab-522f08def6f0' ParentLink='ServiceBody_Declaration' LowerBound='14.201' HigherBound='14.225'>
                    <om:Property Name='UseDefaultConstructor' Value='True' />
                    <om:Property Name='Type' Value='System.Exception' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='excpCap' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Decision' OID='5c60e468-8321-48c0-9591-058aef039bcd' ParentLink='ServiceBody_Statement' LowerBound='21.1' HigherBound='92.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Exception has Message Data?' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='DecisionBranch' OID='dbc986b4-62a4-4310-b8c4-7f2d212f5a76' ParentLink='ReallyComplexStatement_Branch' LowerBound='22.13' HigherBound='92.1'>
                        <om:Property Name='Expression' Value='! System.String.IsNullOrEmpty(excpCap.Message)' />
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Test Errors' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Task' OID='22c2a2a8-bd52-43a3-91b0-459d4a922834' ParentLink='ComplexStatement_Statement' LowerBound='24.1' HigherBound='56.1'>
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Oracle Checks' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='VariableAssignment' OID='08fcd8cf-4eb2-473a-b0ff-4d0685fe808a' ParentLink='ComplexStatement_Statement' LowerBound='24.1' HigherBound='27.1'>
                                <om:Property Name='Expression' Value='regEx = new System.Text.RegularExpressions.Regex(logonExceptionRegex);&#xD;&#xA;regMatchCollection = regEx.Matches(excpCap.Message);&#xD;&#xA;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Bad Oracle Logon' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='Decision' OID='221e93e9-9194-47f1-8d7b-55e81118cba5' ParentLink='ComplexStatement_Statement' LowerBound='27.1' HigherBound='41.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Did a logon to Oracle fail?' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='DecisionBranch' OID='986cdcfc-9744-4b7e-a66b-35a424b92ec4' ParentLink='ReallyComplexStatement_Branch' LowerBound='28.17' HigherBound='41.1'>
                                    <om:Property Name='Expression' Value='regMatchCollection.Count &gt; 0' />
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Logon Failed' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='9f326045-851b-4039-8557-bf34f3726a5a' ParentLink='ComplexStatement_Statement' LowerBound='30.1' HigherBound='40.1'>
                                        <om:Property Name='Expression' Value='exceptionMessage.AppendFormat(&#xD;&#xA;EventNotificationMessageTemplate, &#xD;&#xA;EventNotificationApplicationNumber,&#xD;&#xA;@&quot;failed when attempting to logon to DLAP ELA Oracle due to an incorrect connect setting in the BizTalk Send or Receive Port&quot;, &#xD;&#xA;EventNotificationProcessStep );&#xD;&#xA;&#xD;&#xA;SBA.BizTalk.Shared.MessageHelper.Exceptions.ExceptionFormatter.BuildExceptionString(ref exceptionMessage, excpCap);&#xD;&#xA;&#xD;&#xA;EventNotificationMessage = exceptionMessage.ToString();&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Fault Error' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='DecisionBranch' OID='341bdf10-6e5f-4c70-80d9-b8d1ad50e850' ParentLink='ReallyComplexStatement_Branch'>
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Else' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                            <om:Element Type='VariableAssignment' OID='55286032-221d-48c5-9c8b-c9334823c02c' ParentLink='ComplexStatement_Statement' LowerBound='41.1' HigherBound='44.1'>
                                <om:Property Name='Expression' Value='regEx = new System.Text.RegularExpressions.Regex(badTNSRegex);&#xD;&#xA;regMatchCollection = regEx.Matches(excpCap.Message);&#xD;&#xA;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Bad Oracle TNS Entry' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='Decision' OID='50df4e4d-13dd-489f-a98b-ecd4f72dfd8b' ParentLink='ComplexStatement_Statement' LowerBound='44.1' HigherBound='56.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Did a logon to Oracle fail?' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='DecisionBranch' OID='ef51e6c8-2155-4a5a-a187-fd5b7cfe814f' ParentLink='ReallyComplexStatement_Branch' LowerBound='45.17' HigherBound='56.1'>
                                    <om:Property Name='Expression' Value='regMatchCollection.Count &gt; 0' />
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='TNS Entry Bad' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='102b2e63-781a-4514-98c1-201cf3549268' ParentLink='ComplexStatement_Statement' LowerBound='47.1' HigherBound='55.1'>
                                        <om:Property Name='Expression' Value='exceptionMessage.AppendFormat(&#xD;&#xA;EventNotificationMessageTemplate, &#xD;&#xA;EventNotificationApplicationNumber,&#xD;&#xA;@&quot;failed when attempting to connect to the Oracle Server due to a bad Oracle Server name setting in the associated BizTalk send port&quot;, &#xD;&#xA;EventNotificationProcessStep );&#xD;&#xA;&#xD;&#xA;EventNotificationMessage = exceptionMessage.ToString();&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Fault Error' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='DecisionBranch' OID='5ecb59ca-ec52-449d-a371-1b6380cab712' ParentLink='ReallyComplexStatement_Branch'>
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Else' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                        </om:Element>
                        <om:Element Type='Task' OID='c022a8cf-1cd9-4611-849d-ce51125b448e' ParentLink='ComplexStatement_Statement' LowerBound='56.1' HigherBound='91.1'>
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Salesforce Checks' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='VariableAssignment' OID='a5c7a843-5c1a-4f24-88cf-ee8c1398d507' ParentLink='ComplexStatement_Statement' LowerBound='56.1' HigherBound='59.1'>
                                <om:Property Name='Expression' Value='regEx = new System.Text.RegularExpressions.Regex(logonExceptionSFRegex);&#xD;&#xA;regMatchCollection = regEx.Matches(excpCap.Message);&#xD;&#xA;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Bad SF logon' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='Decision' OID='78b713ec-4004-44a0-84e6-42a51db381e4' ParentLink='ComplexStatement_Statement' LowerBound='59.1' HigherBound='73.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Did a logon to SF fail?' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='DecisionBranch' OID='d06dc35b-17d8-4827-9dc8-f01e48c7a03e' ParentLink='ReallyComplexStatement_Branch' LowerBound='60.17' HigherBound='73.1'>
                                    <om:Property Name='Expression' Value='regMatchCollection.Count &gt; 0' />
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='SF Logon Bad' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='a5a9361b-2a48-446b-8bc3-3b3891381c27' ParentLink='ComplexStatement_Statement' LowerBound='62.1' HigherBound='72.1'>
                                        <om:Property Name='Expression' Value='exceptionMessage.AppendFormat(&#xD;&#xA;EventNotificationMessageTemplate, &#xD;&#xA;EventNotificationApplicationNumber,&#xD;&#xA;@&quot;failed when attempting to logon to Salesforce&quot;, &#xD;&#xA;EventNotificationProcessStep );&#xD;&#xA;&#xD;&#xA;SBA.BizTalk.Shared.MessageHelper.Exceptions.ExceptionFormatter.BuildExceptionString(ref exceptionMessage, excpCap);&#xD;&#xA;&#xD;&#xA;EventNotificationMessage = exceptionMessage.ToString();&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Fault Error' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='DecisionBranch' OID='7b54e201-8eeb-4dc2-bca7-90c07c4060ce' ParentLink='ReallyComplexStatement_Branch'>
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Else' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                            <om:Element Type='VariableAssignment' OID='cdb171ca-8273-439b-8b4c-6ad05499f7de' ParentLink='ComplexStatement_Statement' LowerBound='73.1' HigherBound='76.1'>
                                <om:Property Name='Expression' Value='regEx = new System.Text.RegularExpressions.Regex(badSFServerName);&#xD;&#xA;regMatchCollection = regEx.Matches(excpCap.Message);' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Bad SF Server Name' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Decision' OID='ac55ce8d-0918-48ed-9c3c-e0915f95ede6' ParentLink='ComplexStatement_Statement' LowerBound='76.1' HigherBound='91.1'>
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Did a logon to SF fail?' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='DecisionBranch' OID='32787bbe-4382-4817-b574-8a4acd7aeb36' ParentLink='ReallyComplexStatement_Branch' LowerBound='77.17' HigherBound='91.1'>
                                    <om:Property Name='Expression' Value='regMatchCollection.Count &gt; 0' />
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='SF Server Bad' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='b9a22284-859a-4a8b-bf1d-7b2cb884bc75' ParentLink='ComplexStatement_Statement' LowerBound='79.1' HigherBound='90.1'>
                                        <om:Property Name='Expression' Value='exceptionMessage.AppendFormat(&#xD;&#xA;EventNotificationMessageTemplate, &#xD;&#xA;EventNotificationApplicationNumber,&#xD;&#xA;@&quot;failed when attempting to connect to Salesforce because the server name in the connection string is wrong.&#xD;&#xA;Correct the connection string in the BizTalk Send port to resolve this&quot;, &#xD;&#xA;EventNotificationProcessStep );&#xD;&#xA;&#xD;&#xA;SBA.BizTalk.Shared.MessageHelper.Exceptions.ExceptionFormatter.BuildExceptionString(ref exceptionMessage, excpCap);&#xD;&#xA;&#xD;&#xA;EventNotificationMessage = exceptionMessage.ToString();&#xD;&#xA;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Fault Error' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='DecisionBranch' OID='75d69b28-d86e-4aba-926b-883c992ed037' ParentLink='ReallyComplexStatement_Branch'>
                                    <om:Property Name='IsGhostBranch' Value='True' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Else' />
                                    <om:Property Name='Signal' Value='False' />
                                </om:Element>
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type='DecisionBranch' OID='77f666e7-38e7-4758-a168-ef93128efdad' ParentLink='ReallyComplexStatement_Branch'>
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Else' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __Error_Analyzer_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __Error_Analyzer_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "Error_Analyzer")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                Error_Analyzer __svc__ = (Error_Analyzer)_service;
                base.Finally();
            }

        }


        [System.SerializableAttribute]
        public class __Error_Analyzer_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __Error_Analyzer_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "Error_Analyzer")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                Error_Analyzer __svc__ = (Error_Analyzer)_service;
                __Error_Analyzer_1 __ctx1__ = (__Error_Analyzer_1)(__svc__._stateMgrs[1]);

                if (__ctx1__ != null)
                    __ctx1__.__badTNSRegex = null;
                if (__ctx1__ != null)
                    __ctx1__.__exceptionMessage = null;
                if (__ctx1__ != null)
                    __ctx1__.__regEx = null;
                if (__ctx1__ != null)
                    __ctx1__.__logonExceptionSFRegex = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationMessage = null;
                if (__ctx1__ != null)
                    __ctx1__.__badSFServerName = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationProcessStep = null;
                if (__ctx1__ != null)
                    __ctx1__.__logonExceptionRegex = null;
                if (__ctx1__ != null)
                    __ctx1__.__regMatchCollection = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationMessageTemplate = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationApplicationNumber = null;
                if (__ctx1__ != null)
                    __ctx1__.__excpCap = null;
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("exceptionMessage")]
            internal System.Text.StringBuilder __exceptionMessage;
            [Microsoft.XLANGs.Core.UserVariableAttribute("regEx")]
            internal System.Text.RegularExpressions.Regex __regEx;
            [Microsoft.XLANGs.Core.UserVariableAttribute("logonExceptionSFRegex")]
            internal System.String __logonExceptionSFRegex;
            [Microsoft.XLANGs.Core.UserVariableAttribute("regMatchCollection")]
            internal System.Text.RegularExpressions.MatchCollection __regMatchCollection;
            [Microsoft.XLANGs.Core.UserVariableAttribute("logonExceptionRegex")]
            internal System.String __logonExceptionRegex;
            [Microsoft.XLANGs.Core.UserVariableAttribute("badTNSRegex")]
            internal System.String __badTNSRegex;
            [Microsoft.XLANGs.Core.UserVariableAttribute("badSFServerName")]
            internal System.String __badSFServerName;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EventNotificationMessageTemplate")]
            internal System.String __EventNotificationMessageTemplate;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EventNotificationApplicationNumber")]
            internal System.String __EventNotificationApplicationNumber;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EventNotificationProcessStep")]
            internal System.String __EventNotificationProcessStep;
            [Microsoft.XLANGs.Core.UserVariableAttribute("EventNotificationMessage")]
            internal System.String __EventNotificationMessage;
            [Microsoft.XLANGs.Core.UserVariableAttribute("excpCap")]
            internal System.Exception __excpCap;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }


        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] { };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return null; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "5c60e468-8321-48c0-9591-058aef039bcd", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "08fcd8cf-4eb2-473a-b0ff-4d0685fe808a", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "08fcd8cf-4eb2-473a-b0ff-4d0685fe808a", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "221e93e9-9194-47f1-8d7b-55e81118cba5", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "9f326045-851b-4039-8557-bf34f3726a5a", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "9f326045-851b-4039-8557-bf34f3726a5a", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "221e93e9-9194-47f1-8d7b-55e81118cba5", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "55286032-221d-48c5-9c8b-c9334823c02c", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "55286032-221d-48c5-9c8b-c9334823c02c", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "50df4e4d-13dd-489f-a98b-ecd4f72dfd8b", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "102b2e63-781a-4514-98c1-201cf3549268", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "102b2e63-781a-4514-98c1-201cf3549268", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "50df4e4d-13dd-489f-a98b-ecd4f72dfd8b", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "a5c7a843-5c1a-4f24-88cf-ee8c1398d507", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(16, "a5c7a843-5c1a-4f24-88cf-ee8c1398d507", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(17, "78b713ec-4004-44a0-84e6-42a51db381e4", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(18, "a5a9361b-2a48-446b-8bc3-3b3891381c27", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(19, "a5a9361b-2a48-446b-8bc3-3b3891381c27", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(20, "78b713ec-4004-44a0-84e6-42a51db381e4", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(21, "cdb171ca-8273-439b-8b4c-6ad05499f7de", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(22, "cdb171ca-8273-439b-8b4c-6ad05499f7de", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(23, "ac55ce8d-0918-48ed-9c3c-e0915f95ede6", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(24, "b9a22284-859a-4a8b-bf1d-7b2cb884bc75", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(25, "b9a22284-859a-4a8b-bf1d-7b2cb884bc75", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(26, "ac55ce8d-0918-48ed-9c3c-e0915f95ede6", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(27, "5c60e468-8321-48c0-9591-058aef039bcd", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,1,1,1,1,1,2,2,3,3,4,4,5,5,6,6,7,7,7,8,9,9,10,10,11,11,12,12,13,13,14,15,15,16,16,17,17,18,18,19,19,19,20,21,21,22,22,23,23,24,24,25,25,25,26,27,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __Error_Analyzer_root_0 __ctx0__ = (__Error_Analyzer_root_0)_stateMgrs[0];
            __Error_Analyzer_1 __ctx1__ = (__Error_Analyzer_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __Error_Analyzer_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __Error_Analyzer_root_0 __ctx0__ = (__Error_Analyzer_root_0)_stateMgrs[0];
            __Error_Analyzer_1 __ctx1__ = (__Error_Analyzer_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__EventNotificationMessageTemplate = (System.String)Args[0];
                __ctx1__.__EventNotificationApplicationNumber = (System.String)Args[1];
                __ctx1__.__EventNotificationProcessStep = (System.String)Args[2];
                __ctx1__.__EventNotificationMessage = (System.String)Args[3];
                __ctx1__.__excpCap = (System.Exception)Args[4];
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__exceptionMessage = default(System.Text.StringBuilder);
                __ctx1__.__regEx = default(System.Text.RegularExpressions.Regex);
                __ctx1__.__logonExceptionSFRegex = default(System.String);
                __ctx1__.__regMatchCollection = default(System.Text.RegularExpressions.MatchCollection);
                __ctx1__.__logonExceptionRegex = default(System.String);
                __ctx1__.__badTNSRegex = default(System.String);
                __ctx1__.__badSFServerName = default(System.String);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __ctx1__.__exceptionMessage = new System.Text.StringBuilder();
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.__logonExceptionSFRegex = @"Could not execute the specified command: INVALID_LOGIN: Invalid username, password, security token; or user locked out.";
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                __ctx1__.__logonExceptionRegex = @"ORA-01017: invalid username/password; logon denied";
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                __ctx1__.__badTNSRegex = @"ORA-12154: TNS:could not resolve the connect identifier specified";
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                __ctx1__.__badSFServerName = @"System error: No such host is known";
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                __condition__ = !System.String.IsNullOrEmpty(__ctx1__.__excpCap.Message);
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 57 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 57;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[3],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                __ctx1__.__regEx = new System.Text.RegularExpressions.Regex(__ctx1__.__logonExceptionRegex);
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                __ctx1__.__regMatchCollection = __ctx1__.__regEx.Matches(__ctx1__.__excpCap.Message);
                if ( !PostProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                __condition__ = __ctx1__.__regMatchCollection.Count > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 21;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 16;
            case 16:
                if ( !PreProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 17;
            case 17:
                __ctx1__.__exceptionMessage.AppendFormat(__ctx1__.__EventNotificationMessageTemplate, __ctx1__.__EventNotificationApplicationNumber, @"failed when attempting to logon to DLAP ELA Oracle due to an incorrect connect setting in the BizTalk Send or Receive Port", __ctx1__.__EventNotificationProcessStep);
                if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                SBA.BizTalk.Shared.MessageHelper.Exceptions.ExceptionFormatter.BuildExceptionString(ref __ctx1__.__exceptionMessage, __ctx1__.__excpCap);
                if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 20;
            case 20:
                __ctx1__.__EventNotificationMessage = __ctx1__.__exceptionMessage.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 22;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                __ctx1__.__regEx = new System.Text.RegularExpressions.Regex(__ctx1__.__badTNSRegex);
                if ( !PostProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 24;
            case 24:
                if ( !PreProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[10],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 25;
            case 25:
                __ctx1__.__regMatchCollection = __ctx1__.__regEx.Matches(__ctx1__.__excpCap.Message);
                if ( !PostProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 26;
            case 26:
                if ( !PreProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[11],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 27;
            case 27:
                __condition__ = __ctx1__.__regMatchCollection.Count > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 32 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 32;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 28;
            case 28:
                if ( !PreProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[12],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 29;
            case 29:
                __ctx1__.__exceptionMessage.AppendFormat(__ctx1__.__EventNotificationMessageTemplate, __ctx1__.__EventNotificationApplicationNumber, @"failed when attempting to connect to the Oracle Server due to a bad Oracle Server name setting in the associated BizTalk send port", __ctx1__.__EventNotificationProcessStep);
                if ( !PostProgressInc( __seg__, __ctx__, 30 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 30;
            case 30:
                if ( !PreProgressInc( __seg__, __ctx__, 31 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 31;
            case 31:
                __ctx1__.__EventNotificationMessage = __ctx1__.__exceptionMessage.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 32 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 32;
            case 32:
                if ( !PreProgressInc( __seg__, __ctx__, 33 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[14],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 33;
            case 33:
                if ( !PreProgressInc( __seg__, __ctx__, 34 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[15],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 34;
            case 34:
                __ctx1__.__regEx = new System.Text.RegularExpressions.Regex(__ctx1__.__logonExceptionSFRegex);
                if ( !PostProgressInc( __seg__, __ctx__, 35 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 35;
            case 35:
                if ( !PreProgressInc( __seg__, __ctx__, 36 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[16],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 36;
            case 36:
                __ctx1__.__regMatchCollection = __ctx1__.__regEx.Matches(__ctx1__.__excpCap.Message);
                if ( !PostProgressInc( __seg__, __ctx__, 37 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 37;
            case 37:
                if ( !PreProgressInc( __seg__, __ctx__, 38 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[17],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 38;
            case 38:
                __condition__ = __ctx1__.__regMatchCollection.Count > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 44 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 44;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 39 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 39;
            case 39:
                if ( !PreProgressInc( __seg__, __ctx__, 40 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[18],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 40;
            case 40:
                __ctx1__.__exceptionMessage.AppendFormat(__ctx1__.__EventNotificationMessageTemplate, __ctx1__.__EventNotificationApplicationNumber, @"failed when attempting to logon to Salesforce", __ctx1__.__EventNotificationProcessStep);
                if ( !PostProgressInc( __seg__, __ctx__, 41 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 41;
            case 41:
                if ( !PreProgressInc( __seg__, __ctx__, 42 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[19],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 42;
            case 42:
                SBA.BizTalk.Shared.MessageHelper.Exceptions.ExceptionFormatter.BuildExceptionString(ref __ctx1__.__exceptionMessage, __ctx1__.__excpCap);
                if ( !PostProgressInc( __seg__, __ctx__, 43 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 43;
            case 43:
                __ctx1__.__EventNotificationMessage = __ctx1__.__exceptionMessage.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 44 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 44;
            case 44:
                if ( !PreProgressInc( __seg__, __ctx__, 45 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[20],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 45;
            case 45:
                if ( !PreProgressInc( __seg__, __ctx__, 46 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[21],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 46;
            case 46:
                __ctx1__.__regEx = new System.Text.RegularExpressions.Regex(__ctx1__.__badSFServerName);
                if ( !PostProgressInc( __seg__, __ctx__, 47 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 47;
            case 47:
                if ( !PreProgressInc( __seg__, __ctx__, 48 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[22],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 48;
            case 48:
                __ctx1__.__regMatchCollection = __ctx1__.__regEx.Matches(__ctx1__.__excpCap.Message);
                if (__ctx1__ != null)
                    __ctx1__.__regEx = null;
                if ( !PostProgressInc( __seg__, __ctx__, 49 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 49;
            case 49:
                if ( !PreProgressInc( __seg__, __ctx__, 50 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[23],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 50;
            case 50:
                __condition__ = __ctx1__.__regMatchCollection.Count > 0;
                if (__ctx1__ != null)
                    __ctx1__.__regMatchCollection = null;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 56 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 56;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 51 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 51;
            case 51:
                if ( !PreProgressInc( __seg__, __ctx__, 52 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[24],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 52;
            case 52:
                __ctx1__.__exceptionMessage.AppendFormat(__ctx1__.__EventNotificationMessageTemplate, __ctx1__.__EventNotificationApplicationNumber, @"failed when attempting to connect to Salesforce because the server name in the connection string is wrong.
                    Correct the connection string in the BizTalk Send port to resolve this", __ctx1__.__EventNotificationProcessStep);
                if ( !PostProgressInc( __seg__, __ctx__, 53 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 53;
            case 53:
                if ( !PreProgressInc( __seg__, __ctx__, 54 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[25],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 54;
            case 54:
                SBA.BizTalk.Shared.MessageHelper.Exceptions.ExceptionFormatter.BuildExceptionString(ref __ctx1__.__exceptionMessage, __ctx1__.__excpCap);
                if ( !PostProgressInc( __seg__, __ctx__, 55 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 55;
            case 55:
                __ctx1__.__EventNotificationMessage = __ctx1__.__exceptionMessage.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 56 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 56;
            case 56:
                if ( !PreProgressInc( __seg__, __ctx__, 57 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[26],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 57;
            case 57:
                if ( !PreProgressInc( __seg__, __ctx__, 58 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__excpCap = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationProcessStep = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationApplicationNumber = null;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationMessageTemplate = null;
                if (__ctx1__ != null)
                    __ctx1__.__badSFServerName = null;
                if (__ctx1__ != null)
                    __ctx1__.__badTNSRegex = null;
                if (__ctx1__ != null)
                    __ctx1__.__logonExceptionRegex = null;
                if (__ctx1__ != null)
                    __ctx1__.__logonExceptionSFRegex = null;
                if (__ctx1__ != null)
                    __ctx1__.__exceptionMessage = null;
                Tracker.FireEvent(__eventLocations[27],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 58;
            case 58:
                if ( !PreProgressInc( __seg__, __ctx__, 59 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[0],__eventData[0],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 59;
            case 59:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 60 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 60;
            case 60:
                if ( !PreProgressInc( __seg__, __ctx__, 61 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 61;
            case 61:
                Args[3] = __ctx1__.__EventNotificationMessage;
                if (__ctx1__ != null)
                    __ctx1__.__EventNotificationMessage = null;
                if ( !PostProgressInc( __seg__, __ctx__, 62 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 62;
            case 62:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
    }
    //#line 292 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\OracleMultpleApplicationsDebatcher.odx"
    [Microsoft.XLANGs.BaseTypes.StaticSubscriptionAttribute(
        0, "DLAPELAOraclePollingPort", "Operation", -1, -1, true
    )]
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eImplements,
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.OraclePollingPortType),
            typeof(Application_Import_Logic.DLAPSingleApplicationImportPortType)
        },
        new System.String[] {
            "DLAPELAOraclePollingPort",
            "DLAPSingleApplicationImportPort"
        },
        new System.Type[] {
            null,
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eNone
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class OracleMultpleApplicationsDebatcherLogic : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eNone,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy()
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(OracleMultpleApplicationsDebatcherLogic));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return true; } }

        internal bool IsExeced = false;

        static OracleMultpleApplicationsDebatcherLogic()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment2), 1, 2, 2),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment3), 1, 3, 3),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment4), 1, 3, 4),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment5), 1, 2, 5)
            };

            _Locks = 0;
            _rootContext = new __OracleMultpleApplicationsDebatcherLogic_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[4];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public OracleMultpleApplicationsDebatcherLogic(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "OracleMultpleApplicationsDebatcherLogic", tracker)
        {
            ConstructorHelper();
        }

        public OracleMultpleApplicationsDebatcherLogic(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "OracleMultpleApplicationsDebatcherLogic")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>4cd386b9-9c1b-4865-aaed-e28c5f2ee9d4</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>cdba6f7c-6638-4a7f-b82d-adf5ec3057aa</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Receive Multiple ELA Applications</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>6512daf2-8840-4fbc-a8a8-eee0200976ab</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Debacting Multiple Applications</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ScopeShape</shapeType>      <ShapeID>cb4ca1af-311f-4141-aec2-26ad34fd7c0e</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Multiple Applications Error Scope</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>5952b103-9330-439c-9cc4-9159eec7588c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Application Count</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>WhileShape</shapeType>      <ShapeID>d2692334-9f54-4f14-a6c8-943098fa0bdd</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Loop Through Applications</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ScopeShape</shapeType>      <ShapeID>d806fe37-13bb-4080-b537-8dea3c49b8aa</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Applicant Processing</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>aca9f4d0-803c-481e-bc2c-4d6c8eb15f99</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Single Application Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>f2d798b6-6ca6-4c26-b27a-4a4a83caf967</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Application Message</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>0f26056a-f83a-4940-956b-b4e0d9e95c6c</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CatchShape</shapeType>      <ShapeID>b17f0127-3d85-461d-bb50-1604d77f631f</ShapeID>      <ParentLink>Scope_Catch</ParentLink>                <shapeText>System Exception</shapeText>                      <ExceptionType>System.Exception</ExceptionType>            
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>901f96a0-bc7a-473a-97c6-8d92b6aab7f1</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Error Info</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TerminateShape</shapeType>      <ShapeID>8779a074-d469-4bd6-97ae-f7239316f28e</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Terminate</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>c8a293ea-39d8-4cfe-a988-b405a0e46829</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Single Application</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CatchShape</shapeType>      <ShapeID>f9b7ebf8-9ab1-47ca-be03-eec292fb9e02</ShapeID>      <ParentLink>Scope_Catch</ParentLink>                <shapeText>System Exception</shapeText>                      <ExceptionType>System.Exception</ExceptionType>            
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>70f1a494-540e-4797-9ce3-25c8c29c2177</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Error Info</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TerminateShape</shapeType>      <ShapeID>36268f47-5d68-4334-8148-6c6431c68a74</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Terminate</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'OracleMultpleApplicationsDebatcherLogic'</ActionName><IsAtomic>0</IsAtomic><Line>292</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
</TrkMetadata>

<TrkMetadata>
<Line>308</Line><Position>22</Position><ShapeID>'cdba6f7c-6638-4a7f-b82d-adf5ec3057aa'</ShapeID>
<Messages>
	<MsgInfo><name>OraclePollingMultipleApplicationsMsg</name><part>MessagePart</part><schema>Application_Import_Definition.OraclePollingMultipleApplications+POLLINGSTMT</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<ActionName>'??__scope39'</ActionName><IsAtomic>0</IsAtomic><Line>314</Line><Position>13</Position><ShapeID>'cb4ca1af-311f-4141-aec2-26ad34fd7c0e'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>320</Line><Position>38</Position><ShapeID>'5952b103-9330-439c-9cc4-9159eec7588c'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>322</Line><Position>21</Position><ShapeID>'d2692334-9f54-4f14-a6c8-943098fa0bdd'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<ActionName>'??__scope40'</ActionName><IsAtomic>0</IsAtomic><Line>325</Line><Position>25</Position><ShapeID>'d806fe37-13bb-4080-b537-8dea3c49b8aa'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>330</Line><Position>33</Position><ShapeID>'aca9f4d0-803c-481e-bc2c-4d6c8eb15f99'</ShapeID>
<Messages>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>353</Line><Position>33</Position><ShapeID>'b17f0127-3d85-461d-bb50-1604d77f631f'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>356</Line><Position>75</Position><ShapeID>'901f96a0-bc7a-473a-97c6-8d92b6aab7f1'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>358</Line><Position>37</Position><ShapeID>'8779a074-d469-4bd6-97ae-f7239316f28e'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>363</Line><Position>25</Position><ShapeID>'c8a293ea-39d8-4cfe-a988-b405a0e46829'</ShapeID>
<Messages>
	<MsgInfo><name>Application</name><part>Application</part><schema>Application_Import_Definition.HomeDisasterLoanApplication</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>369</Line><Position>21</Position><ShapeID>'f9b7ebf8-9ab1-47ca-be03-eec292fb9e02'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>372</Line><Position>63</Position><ShapeID>'70f1a494-540e-4797-9ce3-25c8c29c2177'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>374</Line><Position>25</Position><ShapeID>'36268f47-5d68-4334-8148-6c6431c68a74'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='736741b2-f6d7-43ba-8e6e-9de3fabfa391' LowerBound='1.1' HigherBound='112.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='PortType' OID='e53c0560-843f-4a7c-9b17-4749d0b292ce' ParentLink='Module_PortType' LowerBound='8.1' HigherBound='15.1'>
            <om:Property Name='Synchronous' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='OraclePollingPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='4e3704a9-cd4f-42aa-bfbd-96b38954905b' ParentLink='PortType_OperationDeclaration' LowerBound='10.1' HigherBound='14.1'>
                <om:Property Name='OperationType' Value='OneWay' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='f7b67f93-0c9d-4b75-af7d-68477d180ea0' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='12.13' HigherBound='12.50'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.OraclePollingMultipleApplicationsType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='df176f46-4878-4018-907e-8e750c66584d' ParentLink='Module_PortType' LowerBound='15.1' HigherBound='22.1'>
            <om:Property Name='Synchronous' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='DLAPSingleApplicationImportPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='a0801202-7940-45bb-9c5e-92707e87b7d5' ParentLink='PortType_OperationDeclaration' LowerBound='17.1' HigherBound='21.1'>
                <om:Property Name='OperationType' Value='OneWay' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='62d2cd4b-83b7-4123-8f2d-14da8735e67e' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='19.13' HigherBound='19.31'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.ApplicationMsgType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='cb9d756f-0b0f-4adb-a7ac-f256d37e7b8f' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='OraclePollingMultipleApplicationsType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='76cda512-1bee-4745-9858-8e0422e9a8a6' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Application_Import_Definition.OraclePollingMultipleApplications.POLLINGSTMT' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='ServiceDeclaration' OID='e84028b5-2726-483a-aaa4-8d0034242a5d' ParentLink='Module_ServiceDeclaration' LowerBound='22.1' HigherBound='111.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='False' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='OracleMultpleApplicationsDebatcherLogic' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='VariableDeclaration' OID='fc18aa3c-8b63-47f7-bd5a-9c0c5f2e513e' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='31.1' HigherBound='32.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicationCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='b844a4c7-0726-4037-8cc2-988c3a23c236' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='32.1' HigherBound='33.1'>
                <om:Property Name='InitialValue' Value='1' />
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='LoopCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='0e6777e8-5a55-4871-b994-039116d4eb7e' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='33.1' HigherBound='34.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicationXpath' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='96eaa7ce-4ee9-4ecf-8c5a-e522aa0f0e41' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='34.1' HigherBound='35.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='ApplicationNode' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='8075e401-71e2-4a8c-b70d-c42834481d72' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='35.1' HigherBound='36.1'>
                <om:Property Name='UseDefaultConstructor' Value='True' />
                <om:Property Name='Type' Value='System.Xml.XmlDocument' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempSingleApplicationMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='3a1bc390-31b5-48c0-b064-4d1633ee0ccd' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='29.1' HigherBound='30.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.OraclePollingMultipleApplicationsType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OraclePollingMultipleApplicationsMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='fa0182a0-4821-48e2-b7e6-dddb8a1c85f0' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='30.1' HigherBound='31.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.ApplicationMsgType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Application' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='4cd386b9-9c1b-4865-aaed-e28c5f2ee9d4' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='Receive' OID='cdba6f7c-6638-4a7f-b82d-adf5ec3057aa' ParentLink='ServiceBody_Statement' LowerBound='38.1' HigherBound='44.1'>
                    <om:Property Name='Activate' Value='True' />
                    <om:Property Name='PortName' Value='DLAPELAOraclePollingPort' />
                    <om:Property Name='MessageName' Value='OraclePollingMultipleApplicationsMsg' />
                    <om:Property Name='OperationName' Value='Operation' />
                    <om:Property Name='OperationMessageName' Value='Request' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Receive Multiple ELA Applications' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='6512daf2-8840-4fbc-a8a8-eee0200976ab' ParentLink='ServiceBody_Statement' LowerBound='44.1' HigherBound='109.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Debacting Multiple Applications' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Scope' OID='cb4ca1af-311f-4141-aec2-26ad34fd7c0e' ParentLink='ComplexStatement_Statement' LowerBound='44.1' HigherBound='109.1'>
                        <om:Property Name='InitializedTransactionType' Value='True' />
                        <om:Property Name='IsSynchronized' Value='False' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Multiple Applications Error Scope' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='VariableAssignment' OID='5952b103-9330-439c-9cc4-9159eec7588c' ParentLink='ComplexStatement_Statement' LowerBound='49.1' HigherBound='52.1'>
                            <om:Property Name='Expression' Value='&#xD;&#xA;ApplicationCount = System.Convert.ToInt32(xpath(OraclePollingMultipleApplicationsMsg.MessagePart, &quot;count(/*[local-name()=&apos;POLLINGSTMT&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;]/*[local-name()=&apos;POLLINGSTMTRECORD&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;]/*[local-name()=&apos;POLLINGSTMTRECORD&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;]/*[local-name()=&apos;APP_DATA_FINAL_XML&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;])&quot;));&#xD;&#xA;' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Application Count' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='While' OID='d2692334-9f54-4f14-a6c8-943098fa0bdd' ParentLink='ComplexStatement_Statement' LowerBound='52.1' HigherBound='96.1'>
                            <om:Property Name='Expression' Value='LoopCount &lt;= ApplicationCount' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Loop Through Applications' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='Scope' OID='d806fe37-13bb-4080-b537-8dea3c49b8aa' ParentLink='ComplexStatement_Statement' LowerBound='55.1' HigherBound='93.1'>
                                <om:Property Name='InitializedTransactionType' Value='True' />
                                <om:Property Name='IsSynchronized' Value='False' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Applicant Processing' />
                                <om:Property Name='Signal' Value='True' />
                                <om:Element Type='Construct' OID='aca9f4d0-803c-481e-bc2c-4d6c8eb15f99' ParentLink='ComplexStatement_Statement' LowerBound='60.1' HigherBound='80.1'>
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='Construct Single Application Message' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='MessageAssignment' OID='f2d798b6-6ca6-4c26-b27a-4a4a83caf967' ParentLink='ComplexStatement_Statement' LowerBound='63.1' HigherBound='79.1'>
                                        <om:Property Name='Expression' Value='ApplicationXpath = System.String.Format(&quot;string(/*[local-name()=&apos;POLLINGSTMT&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;]/*[local-name()=&apos;POLLINGSTMTRECORD&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;]/*[local-name()=&apos;POLLINGSTMTRECORD&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;][{0}]/*[local-name()=&apos;APP_DATA_FINAL_XML&apos; and namespace-uri()=&apos;http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer&apos;])&quot;,LoopCount);&#xD;&#xA;&#xD;&#xA;ApplicationNode = xpath(OraclePollingMultipleApplicationsMsg.MessagePart, ApplicationXpath);&#xD;&#xA;&#xD;&#xA;ApplicationNode = ApplicationNode.Replace(&quot;&amp;lt;&quot;,&quot;&lt;&quot;);&#xD;&#xA;&#xD;&#xA;ApplicationNode = ApplicationNode.Replace(&quot;&amp;gt;&quot;,&quot;&gt;&quot;);&#xD;&#xA;&#xD;&#xA;TempSingleApplicationMsg = new System.Xml.XmlDocument();&#xD;&#xA;&#xD;&#xA;TempSingleApplicationMsg.LoadXml(ApplicationNode);&#xD;&#xA;&#xD;&#xA;Application.Application = TempSingleApplicationMsg;&#xD;&#xA;&#xD;&#xA;LoopCount = LoopCount + 1;' />
                                        <om:Property Name='ReportToAnalyst' Value='False' />
                                        <om:Property Name='Name' Value='Make Application Message' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='MessageRef' OID='0f26056a-f83a-4940-956b-b4e0d9e95c6c' ParentLink='Construct_MessageRef' LowerBound='61.43' HigherBound='61.54'>
                                        <om:Property Name='Ref' Value='Application' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                                <om:Element Type='Catch' OID='b17f0127-3d85-461d-bb50-1604d77f631f' ParentLink='Scope_Catch' LowerBound='83.1' HigherBound='91.1'>
                                    <om:Property Name='ExceptionName' Value='ELAEx' />
                                    <om:Property Name='ExceptionType' Value='System.Exception' />
                                    <om:Property Name='IsFaultMessage' Value='False' />
                                    <om:Property Name='ReportToAnalyst' Value='True' />
                                    <om:Property Name='Name' Value='System Exception' />
                                    <om:Property Name='Signal' Value='True' />
                                    <om:Element Type='VariableAssignment' OID='901f96a0-bc7a-473a-97c6-8d92b6aab7f1' ParentLink='Catch_Statement' LowerBound='86.1' HigherBound='88.1'>
                                        <om:Property Name='Expression' Value='System.Diagnostics.EventLog.WriteEntry(&quot;DLAP ELA Application Import Exception:Multiple Applications Debatcher &quot;,ELAEx.Message,System.Diagnostics.EventLogEntryType.Error);' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Error Info' />
                                        <om:Property Name='Signal' Value='True' />
                                    </om:Element>
                                    <om:Element Type='Terminate' OID='8779a074-d469-4bd6-97ae-f7239316f28e' ParentLink='Catch_Statement' LowerBound='88.1' HigherBound='90.1'>
                                        <om:Property Name='ErrorMessage' Value='&quot;An error occurred while processing DLAP ELA Application Import:Multiple Applications Debatcher&quot;;' />
                                        <om:Property Name='ReportToAnalyst' Value='True' />
                                        <om:Property Name='Name' Value='Terminate' />
                                        <om:Property Name='Signal' Value='False' />
                                    </om:Element>
                                </om:Element>
                            </om:Element>
                            <om:Element Type='Send' OID='c8a293ea-39d8-4cfe-a988-b405a0e46829' ParentLink='ComplexStatement_Statement' LowerBound='93.1' HigherBound='95.1'>
                                <om:Property Name='PortName' Value='DLAPSingleApplicationImportPort' />
                                <om:Property Name='MessageName' Value='Application' />
                                <om:Property Name='OperationName' Value='Operation' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Single Application' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='Catch' OID='f9b7ebf8-9ab1-47ca-be03-eec292fb9e02' ParentLink='Scope_Catch' LowerBound='99.1' HigherBound='107.1'>
                            <om:Property Name='ExceptionName' Value='ELAEx' />
                            <om:Property Name='ExceptionType' Value='System.Exception' />
                            <om:Property Name='IsFaultMessage' Value='False' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='System Exception' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='VariableAssignment' OID='70f1a494-540e-4797-9ce3-25c8c29c2177' ParentLink='Catch_Statement' LowerBound='102.1' HigherBound='104.1'>
                                <om:Property Name='Expression' Value='System.Diagnostics.EventLog.WriteEntry(&quot;DLAP ELA Application Import Exception:Multiple Applications Debatcher &quot;,ELAEx.Message,System.Diagnostics.EventLogEntryType.Error);' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Error Info' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Terminate' OID='36268f47-5d68-4334-8148-6c6431c68a74' ParentLink='Catch_Statement' LowerBound='104.1' HigherBound='106.1'>
                                <om:Property Name='ErrorMessage' Value='&quot;An error occurred while processing DLAP ELA Application Import:Multiple Applications Debatcher&quot;;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Terminate' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='ab57c0bc-d6fe-4478-9ec9-ef67409510cb' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='25.1' HigherBound='27.1'>
                <om:Property Name='PortModifier' Value='Implements' />
                <om:Property Name='Orientation' Value='Left' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.OraclePollingPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DLAPELAOraclePollingPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='LogicalBindingAttribute' OID='9fcef847-6c99-4e14-8b8a-a111a10a7c71' ParentLink='PortDeclaration_CLRAttribute' LowerBound='25.1' HigherBound='26.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='8dc058a6-7759-4be0-8fef-d0c09cd3a246' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='27.1' HigherBound='29.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Left' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.DLAPSingleApplicationImportPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DLAPSingleApplicationImportPort' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='DirectBindingAttribute' OID='205d5899-e0bb-41ff-8d6b-c391b624aeb0' ParentLink='PortDeclaration_CLRAttribute' LowerBound='27.1' HigherBound='28.1'>
                    <om:Property Name='PartnerPort' Value='DLAPSingleApplicationImportPort' />
                    <om:Property Name='PartnerService' Value='Application_Import_Logic.OracleMultpleApplicationsDebatcherLogic' />
                    <om:Property Name='DirectBindingType' Value='PartnerPort' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __OracleMultpleApplicationsDebatcherLogic_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __OracleMultpleApplicationsDebatcherLogic_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "OracleMultpleApplicationsDebatcherLogic")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                OracleMultpleApplicationsDebatcherLogic __svc__ = (OracleMultpleApplicationsDebatcherLogic)_service;
                __OracleMultpleApplicationsDebatcherLogic_root_0 __ctx0__ = (__OracleMultpleApplicationsDebatcherLogic_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.DLAPELAOraclePollingPort != null)
                {
                    __svc__.DLAPELAOraclePollingPort.Close(this, null);
                    __svc__.DLAPELAOraclePollingPort = null;
                }
                if (__svc__.DLAPSingleApplicationImportPort != null)
                {
                    __svc__.DLAPSingleApplicationImportPort.Close(this, null);
                    __svc__.DLAPSingleApplicationImportPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __OracleMultpleApplicationsDebatcherLogic_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __OracleMultpleApplicationsDebatcherLogic_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "OracleMultpleApplicationsDebatcherLogic")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                OracleMultpleApplicationsDebatcherLogic __svc__ = (OracleMultpleApplicationsDebatcherLogic)_service;
                __OracleMultpleApplicationsDebatcherLogic_1 __ctx1__ = (__OracleMultpleApplicationsDebatcherLogic_1)(__svc__._stateMgrs[1]);

                if (__ctx1__ != null)
                    __ctx1__.__ApplicationXpath = null;
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationNode = null;
                if (__ctx1__ != null)
                    __ctx1__.__TempSingleApplicationMsg = null;
                if (__ctx1__ != null && __ctx1__.__OraclePollingMultipleApplicationsMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__OraclePollingMultipleApplicationsMsg);
                    __ctx1__.__OraclePollingMultipleApplicationsMsg = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("OraclePollingMultipleApplicationsMsg")]
            internal OraclePollingMultipleApplicationsType __OraclePollingMultipleApplicationsMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Application")]
            internal ApplicationMsgType __Application;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCount")]
            internal System.Int32 __ApplicationCount;
            [Microsoft.XLANGs.Core.UserVariableAttribute("LoopCount")]
            internal System.Int32 __LoopCount;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationXpath")]
            internal System.String __ApplicationXpath;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationNode")]
            internal System.String __ApplicationNode;
            [Microsoft.XLANGs.Core.UserVariableAttribute("TempSingleApplicationMsg")]
            internal Microsoft.XLANGs.RuntimeTypes.XmlDocumentSerializationProxy __TempSingleApplicationMsg;
        }


        [System.SerializableAttribute]
        public class ____scope39_2 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public ____scope39_2(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "??__scope39")
            {
            }

            public override int Index { get { return 2; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[2]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[2]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Microsoft.XLANGs.Core.Segment __seg__;
                Microsoft.XLANGs.Core.FaultReceiveException __fault__;

                __exv__ = _exception;
                if (!(__exv__ is Microsoft.XLANGs.Core.UnknownException))
                {
                    __fault__ = __exv__ as Microsoft.XLANGs.Core.FaultReceiveException;
                    if ((__fault__ == null) && (__exv__ is System.Exception))
                    {
                        __seg__ = _service._segments[5];
                        __seg__.Reset(1);
                        __seg__.PredecessorDone(_service);
                        return true;
                    }
                }

                Finally();
                return false;
            }

            public override void Finally()
            {
                OracleMultpleApplicationsDebatcherLogic __svc__ = (OracleMultpleApplicationsDebatcherLogic)_service;
                __OracleMultpleApplicationsDebatcherLogic_1 __ctx1__ = (__OracleMultpleApplicationsDebatcherLogic_1)(__svc__._stateMgrs[1]);
                ____scope39_2 __ctx2__ = (____scope39_2)(__svc__._stateMgrs[2]);

                if (__ctx1__ != null && __ctx1__.__Application != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__Application);
                    __ctx1__.__Application = null;
                }
                if (__ctx2__ != null)
                    __ctx2__.__ELAEx_0 = null;
                base.Finally();
            }

            internal object __exv__;
            internal System.Exception __ELAEx_0
            {
                get { return (System.Exception)__exv__; }
                set { __exv__ = value; }
            }
        }


        [System.SerializableAttribute]
        public class ____scope40_3 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public ____scope40_3(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "??__scope40")
            {
            }

            public override int Index { get { return 3; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[3]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[3]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Microsoft.XLANGs.Core.Segment __seg__;
                Microsoft.XLANGs.Core.FaultReceiveException __fault__;

                __exv__ = _exception;
                if (!(__exv__ is Microsoft.XLANGs.Core.UnknownException))
                {
                    __fault__ = __exv__ as Microsoft.XLANGs.Core.FaultReceiveException;
                    if ((__fault__ == null) && (__exv__ is System.Exception))
                    {
                        __seg__ = _service._segments[4];
                        __seg__.Reset(1);
                        __seg__.PredecessorDone(_service);
                        return true;
                    }
                }

                Finally();
                return false;
            }

            public override void Finally()
            {
                OracleMultpleApplicationsDebatcherLogic __svc__ = (OracleMultpleApplicationsDebatcherLogic)_service;
                ____scope40_3 __ctx3__ = (____scope40_3)(__svc__._stateMgrs[3]);

                if (__ctx3__ != null)
                    __ctx3__.__ELAEx_0 = null;
                base.Finally();
            }

            internal object __exv__;
            internal System.Exception __ELAEx_0
            {
                get { return (System.Exception)__exv__; }
                set { __exv__ = value; }
            }
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eImplements
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("DLAPELAOraclePollingPort")]
        internal OraclePollingPortType DLAPELAOraclePollingPort;
        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute(typeof(OracleMultpleApplicationsDebatcherLogic), "DLAPSingleApplicationImportPort")]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("DLAPSingleApplicationImportPort")]
        internal DLAPSingleApplicationImportPortType DLAPSingleApplicationImportPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {OraclePollingPortType.Operation},
                                               typeof(OracleMultpleApplicationsDebatcherLogic).GetField("DLAPELAOraclePollingPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.implements,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(OracleMultpleApplicationsDebatcherLogic), "DLAPELAOraclePollingPort"),
                                               null),
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {DLAPSingleApplicationImportPortType.Operation},
                                               typeof(OracleMultpleApplicationsDebatcherLogic).GetField("DLAPSingleApplicationImportPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(OracleMultpleApplicationsDebatcherLogic), "DLAPSingleApplicationImportPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                h[_portInfo[1].Name] = _portInfo[1];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static object[] StaticSubscriptionsInformation {
            get {
                return new object[1]{
                     new object[5] { _portInfo[0], 0, null , -1, true }
                };
            }
        }

        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "cdba6f7c-6638-4a7f-b82d-adf5ec3057aa", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "cdba6f7c-6638-4a7f-b82d-adf5ec3057aa", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "cb4ca1af-311f-4141-aec2-26ad34fd7c0e", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "00000000-0000-0000-0000-000000000000", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "5952b103-9330-439c-9cc4-9159eec7588c", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "5952b103-9330-439c-9cc4-9159eec7588c", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "d2692334-9f54-4f14-a6c8-943098fa0bdd", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "d806fe37-13bb-4080-b537-8dea3c49b8aa", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "00000000-0000-0000-0000-000000000000", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "aca9f4d0-803c-481e-bc2c-4d6c8eb15f99", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "aca9f4d0-803c-481e-bc2c-4d6c8eb15f99", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "b17f0127-3d85-461d-bb50-1604d77f631f", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "901f96a0-bc7a-473a-97c6-8d92b6aab7f1", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "901f96a0-bc7a-473a-97c6-8d92b6aab7f1", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(16, "8779a074-d469-4bd6-97ae-f7239316f28e", 4, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(17, "b17f0127-3d85-461d-bb50-1604d77f631f", 4, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(18, "d806fe37-13bb-4080-b537-8dea3c49b8aa", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(19, "c8a293ea-39d8-4cfe-a988-b405a0e46829", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(20, "c8a293ea-39d8-4cfe-a988-b405a0e46829", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(21, "d2692334-9f54-4f14-a6c8-943098fa0bdd", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(22, "f9b7ebf8-9ab1-47ca-be03-eec292fb9e02", 5, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(23, "70f1a494-540e-4797-9ce3-25c8c29c2177", 5, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(24, "70f1a494-540e-4797-9ce3-25c8c29c2177", 5, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(25, "36268f47-5d68-4334-8148-6c6431c68a74", 5, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(26, "f9b7ebf8-9ab1-47ca-be03-eec292fb9e02", 5, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(27, "cb4ca1af-311f-4141-aec2-26ad34fd7c0e", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Scope),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.WhileBody),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.While),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Catch),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Terminate),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Catch),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Scope),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.While),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.WhileBody),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,3,3,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,1,2,2,2,2,2,4,4,4,27,3,3,3,3,};
        public static int[] __progressLocation2 = new int[] { 6,6,6,7,8,8,8,9,9,9,18,19,19,19,20,21,21,21,21,21,21,};
        public static int[] __progressLocation3 = new int[] { 11,11,11,12,12,12,12,};
        public static int[] __progressLocation4 = new int[] { 13,13,14,14,15,16,16,17,17,};
        public static int[] __progressLocation5 = new int[] { 22,22,23,23,24,25,25,26,26,};

        public static int[][] __progressLocations = new int[6] [] {__progressLocation0,__progressLocation1,__progressLocation2,__progressLocation3,__progressLocation4,__progressLocation5};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __OracleMultpleApplicationsDebatcherLogic_root_0 __ctx0__ = (__OracleMultpleApplicationsDebatcherLogic_root_0)_stateMgrs[0];
            __OracleMultpleApplicationsDebatcherLogic_1 __ctx1__ = (__OracleMultpleApplicationsDebatcherLogic_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                DLAPELAOraclePollingPort = new OraclePollingPortType(0, this);
                DLAPSingleApplicationImportPort = new DLAPSingleApplicationImportPortType(1, this);
                __ctx__.PrologueCompleted = true;
                __ctx0__.__subWrapper0 = new Microsoft.XLANGs.Core.SubscriptionWrapper(ActivationSubGuids[0], DLAPELAOraclePollingPort, this);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __OracleMultpleApplicationsDebatcherLogic_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __OracleMultpleApplicationsDebatcherLogic_root_0 __ctx0__ = (__OracleMultpleApplicationsDebatcherLogic_root_0)_stateMgrs[0];
            __OracleMultpleApplicationsDebatcherLogic_1 __ctx1__ = (__OracleMultpleApplicationsDebatcherLogic_1)_stateMgrs[1];
            ____scope39_2 __ctx2__ = (____scope39_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCount = default(System.Int32);
                __ctx1__.__LoopCount = default(System.Int32);
                __ctx1__.__ApplicationXpath = default(System.String);
                __ctx1__.__ApplicationNode = default(System.String);
                __ctx1__.__TempSingleApplicationMsg = new Microsoft.XLANGs.RuntimeTypes.XmlDocumentSerializationProxy();
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[0],__eventData[0],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if (!DLAPELAOraclePollingPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx1__.__OraclePollingMultipleApplicationsMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__OraclePollingMultipleApplicationsMsg);
                __ctx1__.__OraclePollingMultipleApplicationsMsg = new OraclePollingMultipleApplicationsType("OraclePollingMultipleApplicationsMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__OraclePollingMultipleApplicationsMsg);
                DLAPELAOraclePollingPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__OraclePollingMultipleApplicationsMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if (DLAPELAOraclePollingPort != null)
                {
                    DLAPELAOraclePollingPort.Close(__ctx1__, __seg__);
                    DLAPELAOraclePollingPort = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__OraclePollingMultipleApplicationsMsg);
                    __edata.PortName = @"DLAPELAOraclePollingPort";
                    Tracker.FireEvent(__eventLocations[2],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                __ctx1__.__LoopCount = 1;
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                __ctx1__.__ApplicationXpath = "";
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                __ctx1__.__ApplicationNode = "";
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                __ctx1__.__TempSingleApplicationMsg.UnderlyingXmlDocument = new System.Xml.XmlDocument();
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __ctx2__ = new ____scope39_2(this);
                _stateMgrs[2] = __ctx2__;
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                __ctx1__.StartContext(__seg__, __ctx2__);
                if ( !PostProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__TempSingleApplicationMsg = null;
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationNode = null;
                if (__ctx1__ != null)
                    __ctx1__.__ApplicationXpath = null;
                if (__ctx1__ != null && __ctx1__.__OraclePollingMultipleApplicationsMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__OraclePollingMultipleApplicationsMsg);
                    __ctx1__.__OraclePollingMultipleApplicationsMsg = null;
                }
                if (DLAPSingleApplicationImportPort != null)
                {
                    DLAPSingleApplicationImportPort.Close(__ctx1__, __seg__);
                    DLAPSingleApplicationImportPort = null;
                }
                Tracker.FireEvent(__eventLocations[27],__eventData[11],_stateMgrs[1].TrackDataStream );
                __ctx2__.Finally();
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[3],__eventData[15],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 16;
            case 16:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment2(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[2];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[2];
            __OracleMultpleApplicationsDebatcherLogic_root_0 __ctx0__ = (__OracleMultpleApplicationsDebatcherLogic_root_0)_stateMgrs[0];
            __OracleMultpleApplicationsDebatcherLogic_1 __ctx1__ = (__OracleMultpleApplicationsDebatcherLogic_1)_stateMgrs[1];
            ____scope39_2 __ctx2__ = (____scope39_2)_stateMgrs[2];
            ____scope40_3 __ctx3__ = (____scope40_3)_stateMgrs[3];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[3],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                __ctx1__.__ApplicationCount = System.Convert.ToInt32(Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__OraclePollingMultipleApplicationsMsg.MessagePart, "count(/*[local-name()='POLLINGSTMT' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer']/*[local-name()='POLLINGSTMTRECORD' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer']/*[local-name()='POLLINGSTMTRECORD' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer']/*[local-name()='APP_DATA_FINAL_XML' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer'])", typeof(System.Object)));
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[4],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[5],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                __condition__ = __ctx1__.__LoopCount <= __ctx1__.__ApplicationCount;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 17;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[6],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[2],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                __ctx3__ = new ____scope40_3(this);
                _stateMgrs[3] = __ctx3__;
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                __ctx2__.StartContext(__seg__, __ctx3__);
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[18],__eventData[11],_stateMgrs[2].TrackDataStream );
                __ctx3__.Finally();
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[19],__eventData[12],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx2__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                DLAPSingleApplicationImportPort.SendMessage(0, __ctx1__.__Application, null, null, __ctx2__, __seg__ , Microsoft.XLANGs.Core.ActivityFlags.None );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__Application);
                    __edata.PortName = @"DLAPSingleApplicationImportPort";
                    Tracker.FireEvent(__eventLocations[20],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__Application != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__Application);
                    __ctx1__.__Application = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[21],__eventData[13],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[21],__eventData[14],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if (!__ctx2__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx2__.OnCommit();
                goto case 20;
            case 20:
                __seg__.SegmentDone();
                _segments[1].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment3(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[3];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[3];
            __OracleMultpleApplicationsDebatcherLogic_1 __ctx1__ = (__OracleMultpleApplicationsDebatcherLogic_1)_stateMgrs[1];
            ____scope39_2 __ctx2__ = (____scope39_2)_stateMgrs[2];
            ____scope40_3 __ctx3__ = (____scope40_3)_stateMgrs[3];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[11],__eventData[7],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                {
                    ApplicationMsgType __Application = new ApplicationMsgType("Application", __ctx1__);

                    __ctx1__.__ApplicationXpath = System.String.Format("string(/*[local-name()='POLLINGSTMT' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer']/*[local-name()='POLLINGSTMTRECORD' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer']/*[local-name()='POLLINGSTMTRECORD' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer'][{0}]/*[local-name()='APP_DATA_FINAL_XML' and namespace-uri()='http://Microsoft.LobServices.OracleDB/2007/03/POLLINGSTMTdlap_files_for_transfer'])", __ctx1__.__LoopCount);
                    __ctx1__.__ApplicationNode = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__OraclePollingMultipleApplicationsMsg.MessagePart, __ctx1__.__ApplicationXpath, typeof(System.String));
                    __ctx1__.__ApplicationNode = __ctx1__.__ApplicationNode.Replace("&lt;", "<");
                    __ctx1__.__ApplicationNode = __ctx1__.__ApplicationNode.Replace("&gt;", ">");
                    __ctx1__.__TempSingleApplicationMsg.UnderlyingXmlDocument = new System.Xml.XmlDocument();
                    __ctx1__.__TempSingleApplicationMsg.UnderlyingXmlDocument.LoadXml(__ctx1__.__ApplicationNode);
                    __Application.Application.LoadFrom((System.Xml.XmlDocument)__ctx1__.__TempSingleApplicationMsg.UnderlyingXmlDocument);
                    __ctx1__.__LoopCount = __ctx1__.__LoopCount + 1;

                    if (__ctx1__.__Application != null)
                        __ctx1__.UnrefMessage(__ctx1__.__Application);
                    __ctx1__.__Application = __Application;
                    __ctx1__.RefMessage(__ctx1__.__Application);
                }
                __ctx1__.__Application.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__Application);
                    Tracker.FireEvent(__eventLocations[12],__edata,_stateMgrs[3].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                if (!__ctx3__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx3__.OnCommit();
                goto case 6;
            case 6:
                __seg__.SegmentDone();
                _segments[2].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment4(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[4];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[3];
            ____scope40_3 __ctx3__ = (____scope40_3)_stateMgrs[3];

            switch (__seg__.Progress)
            {
            case 0:
                OnBeginCatchHandler(3);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[8],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[14],__eventData[3],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                System.Diagnostics.EventLog.WriteEntry("DLAP ELA Application Import Exception:Multiple Applications Debatcher ", __ctx3__.__ELAEx_0.Message, System.Diagnostics.EventLogEntryType.Error);
                if (__ctx3__ != null)
                    __ctx3__.__ELAEx_0 = null;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[15],__eventData[4],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[16],__eventData[9],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                RequestTerminate(__ctx3__,"An error occurred while processing DLAP ELA Application Import:Multiple Applications Debatcher");
                __seg__.SegmentDone();
                break;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[17],__eventData[10],_stateMgrs[3].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                __ctx3__.__exv__ = null;
                OnEndCatchHandler(3, __seg__);
                __seg__.SegmentDone();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment5(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[5];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[2];
            ____scope39_2 __ctx2__ = (____scope39_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                OnBeginCatchHandler(2);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[22],__eventData[8],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[23],__eventData[3],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                System.Diagnostics.EventLog.WriteEntry("DLAP ELA Application Import Exception:Multiple Applications Debatcher ", __ctx2__.__ELAEx_0.Message, System.Diagnostics.EventLogEntryType.Error);
                if (__ctx2__ != null)
                    __ctx2__.__ELAEx_0 = null;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[24],__eventData[4],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[25],__eventData[9],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                RequestTerminate(__ctx2__,"An error occurred while processing DLAP ELA Application Import:Multiple Applications Debatcher");
                __seg__.SegmentDone();
                break;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[26],__eventData[10],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                __ctx2__.__exv__ = null;
                OnEndCatchHandler(2, __seg__);
                __seg__.SegmentDone();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
    }
    //#line 351 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Event_Request__c\Call_Event_Request__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.RestEventPortType)
        },
        new System.String[] {
            "RestEventPort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable|Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eExecable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class Call_Event_Request__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = true;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String Application_Number__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String SObject_ID__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String Log_Message__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String SObject_Name__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String Stage__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String Status__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.String Auto_Decline_Reason__c,
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eVariable, "") ] System.Guid OrchestrationInstanceId)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(Call_Event_Request__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static Call_Event_Request__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment2), 1, 2, 2),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment3), 1, 2, 3)
            };

            _Locks = 0;
            _rootContext = new __Call_Event_Request__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[3];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public Call_Event_Request__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "Call_Event_Request__c", tracker)
        {
            ConstructorHelper();
        }

        public Call_Event_Request__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "Call_Event_Request__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>2ee6dff8-07f1-4535-87b4-ca35f04552ce</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>a676f29c-3ad3-441a-9f17-93e93bcf3594</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>Application_Number__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>2cc70f21-fb1e-44c1-aa0a-270226a1cb6b</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>SObject_ID__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>abf6e77a-f970-4150-8b96-a18764dee685</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>Log_Message__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>9c3da375-0e18-4100-93a5-95e54e96444f</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>SObject_Name__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>5ea50e81-ba95-40b0-b919-e29bb55068a1</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>Stage__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>6037bce8-4a3d-4cbd-981d-a85a9a4bd78c</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>Status__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>180e5926-6764-420e-bc34-850c915c92de</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>Auto_Decline_Reason__c</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableDeclarationShape</shapeType>      <ShapeID>8f5afe28-20b3-40a6-be0e-e3c5f9e35113</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>OrchestrationInstanceId</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ScopeShape</shapeType>      <ShapeID>61ef889c-c133-47f8-8712-f61df5ca6902</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Event Request Scope</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>f84d8b89-0605-4efc-a0fa-b6bca8404099</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Rest Event Request Msg</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessageAssignmentShape</shapeType>      <ShapeID>7c03b257-1f9d-4a02-b591-aea5f1667fe7</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Request Msg</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>e7aaa676-ad3b-4b9b-a092-1ae10c02d9bb</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>6d47e91d-bd62-40ed-9a49-af24cec37cc9</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Rest Event Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>6e81659d-4305-431e-a67a-e169f0f4aabe</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Rest Event Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>4e2545d2-ecc7-4ca1-bcad-2f4353b80172</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Extract Rest Response Values</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>44959a26-f92d-497f-9aa1-06f7f6d620ed</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Valid Response</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>2cfef060-e72d-44a3-a34d-56fd2039d9f5</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Valid</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>6ff03e1e-3641-4a82-b9f7-6880d2f549e0</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>00b132f4-940c-42b1-92bb-d57eee62f630</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Rest Exception</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ThrowShape</shapeType>      <ShapeID>51c4c890-e3fd-4445-90f1-1d0b5c39fffd</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Rest Error </shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>CatchShape</shapeType>      <ShapeID>bcfe77c6-08d5-4014-9a89-940ada438d6b</ShapeID>      <ParentLink>Scope_Catch</ParentLink>                <shapeText>Catch Rest Exception</shapeText>                      <ExceptionType>System.Exception</ExceptionType>            
<children>                          
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>4943ce37-6eb7-4684-a37c-30dceb48fd68</ShapeID>      <ParentLink>Catch_Statement</ParentLink>                <shapeText>Assign Variables</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'Call_Event_Request__c'</ActionName><IsAtomic>0</IsAtomic><Line>351</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<ActionName>'??__scope41'</ActionName><IsAtomic>0</IsAtomic><Line>377</Line><Position>13</Position><ShapeID>'61ef889c-c133-47f8-8712-f61df5ca6902'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>382</Line><Position>21</Position><ShapeID>'f84d8b89-0605-4efc-a0fa-b6bca8404099'</ShapeID>
<Messages>
	<MsgInfo><name>RestEventRequestMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequest</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>409</Line><Position>21</Position><ShapeID>'6d47e91d-bd62-40ed-9a49-af24cec37cc9'</ShapeID>
<Messages>
	<MsgInfo><name>RestEventRequestMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequest</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>411</Line><Position>21</Position><ShapeID>'6e81659d-4305-431e-a67a-e169f0f4aabe'</ShapeID>
<Messages>
	<MsgInfo><name>RestEventResponseMsg</name><part>MessagePart</part><schema>Salesforce_Application_Import_Definition.Event_Request__c.RestEventResponse</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>413</Line><Position>40</Position><ShapeID>'4e2545d2-ecc7-4ca1-bcad-2f4353b80172'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>421</Line><Position>21</Position><ShapeID>'44959a26-f92d-497f-9aa1-06f7f6d620ed'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>427</Line><Position>51</Position><ShapeID>'00b132f4-940c-42b1-92bb-d57eee62f630'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>435</Line><Position>25</Position><ShapeID>'51c4c890-e3fd-4445-90f1-1d0b5c39fffd'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>441</Line><Position>21</Position><ShapeID>'bcfe77c6-08d5-4014-9a89-940ada438d6b'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>446</Line><Position>25</Position><ShapeID>'4943ce37-6eb7-4684-a37c-30dceb48fd68'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='bbcbebda-889c-43dd-8d4b-e041fb1ae986' LowerBound='1.1' HigherBound='140.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='PortType' OID='07b579c5-839a-4e4d-a217-7913da78764d' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestEventPortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='36a52f52-fb4b-4e31-a633-efdd4af743a9' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='425e8e1f-f6d6-4ae9-9ee4-9e16e783be00' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.33'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestEventRequestType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='d5e4a510-d20b-4445-a7b8-b6dab9dd707d' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.35' HigherBound='16.56'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.RestEventResponseType' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='ef8a0adb-5611-46ed-b4e2-b0d6fdede31d' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestEventRequestType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='043cbdb6-b282-4738-81d9-208829dc2e67' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Event_Request__c.RestEventRequest' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='73fe28fb-8f44-4787-a6e3-d0761df92d6e' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='RestEventResponseType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='eb73e6ae-3df9-4856-9b63-37e17334d5f3' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.Event_Request__c.RestEventResponse' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessagePart' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='ServiceDeclaration' OID='337f13cb-d5ce-4a15-be06-bbf4dd36692c' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='139.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='Call_Event_Request__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='8fdeac09-2c4f-4ce7-8adb-ac78e1512acd' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='True' />
                <om:Property Name='Type' Value='System.Xml.XmlDocument' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='TempXml' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='a95680b5-d687-4fa0-9f64-730e1fe273ca' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='27.1' HigherBound='28.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='GUID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='5a1cffbd-c271-4c01-9e89-5a2ce56f8a96' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='28.1' HigherBound='29.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestResponseStatus' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='22cb571d-9fbd-44a9-a10a-316b4b787cf1' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='29.1' HigherBound='30.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestCountSFID' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='e5bb61b2-c66d-4686-955b-ccd1de46a1de' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='30.1' HigherBound='31.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestResponseErrorMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='2423db4b-68f2-4dc0-afc9-f61054ea5434' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='31.1' HigherBound='32.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestResponseWarningMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='c113a6b9-c311-4b14-ab40-a9ffe351fb2e' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='32.1' HigherBound='33.1'>
                <om:Property Name='UseDefaultConstructor' Value='True' />
                <om:Property Name='Type' Value='System.Exception' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestDLAPAppEventException' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='ffb8ff8a-a69a-4408-810d-f2fcf44c048e' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='33.1' HigherBound='34.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Message' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='VariableDeclaration' OID='41914789-eacf-420b-8d25-f4c8358ba6ed' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='34.1' HigherBound='35.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.String' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='MessageTemp' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='6e7fe960-d5a3-4467-b7ea-c1cd8a4a3046' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestEventRequestType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='ea9f32f2-a444-40e6-a63a-fdc3f7748aec' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.RestEventResponseType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='2ee6dff8-07f1-4535-87b4-ca35f04552ce' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='VariableDeclaration' OID='a676f29c-3ad3-441a-9f17-93e93bcf3594' ParentLink='ServiceBody_Declaration' LowerBound='35.15' HigherBound='35.50'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Application_Number__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='2cc70f21-fb1e-44c1-aa0a-270226a1cb6b' ParentLink='ServiceBody_Declaration' LowerBound='35.52' HigherBound='35.79'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='SObject_ID__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='abf6e77a-f970-4150-8b96-a18764dee685' ParentLink='ServiceBody_Declaration' LowerBound='35.81' HigherBound='35.109'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Log_Message__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='9c3da375-0e18-4100-93a5-95e54e96444f' ParentLink='ServiceBody_Declaration' LowerBound='35.111' HigherBound='35.140'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='SObject_Name__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='5ea50e81-ba95-40b0-b919-e29bb55068a1' ParentLink='ServiceBody_Declaration' LowerBound='35.142' HigherBound='35.164'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Stage__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='6037bce8-4a3d-4cbd-981d-a85a9a4bd78c' ParentLink='ServiceBody_Declaration' LowerBound='35.166' HigherBound='35.189'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Status__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='180e5926-6764-420e-bc34-850c915c92de' ParentLink='ServiceBody_Declaration' LowerBound='35.191' HigherBound='35.227'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.String' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Auto_Decline_Reason__c' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='VariableDeclaration' OID='8f5afe28-20b3-40a6-be0e-e3c5f9e35113' ParentLink='ServiceBody_Declaration' LowerBound='35.229' HigherBound='35.264'>
                    <om:Property Name='UseDefaultConstructor' Value='False' />
                    <om:Property Name='Type' Value='System.Guid' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='OrchestrationInstanceId' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Scope' OID='61ef889c-c133-47f8-8712-f61df5ca6902' ParentLink='ServiceBody_Statement' LowerBound='45.1' HigherBound='137.1'>
                    <om:Property Name='InitializedTransactionType' Value='True' />
                    <om:Property Name='IsSynchronized' Value='False' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Event Request Scope' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='f84d8b89-0605-4efc-a0fa-b6bca8404099' ParentLink='ComplexStatement_Statement' LowerBound='50.1' HigherBound='77.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Rest Event Request Msg' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessageAssignment' OID='7c03b257-1f9d-4a02-b591-aea5f1667fe7' ParentLink='ComplexStatement_Statement' LowerBound='53.1' HigherBound='76.1'>
                            <om:Property Name='Expression' Value='TempXml = new System.Xml.XmlDocument();&#xD;&#xA;&#xD;&#xA;Status__c = System.Security.SecurityElement.Escape(Status__c); &#xD;&#xA;&#xD;&#xA;Stage__c = System.Security.SecurityElement.Escape(Stage__c);&#xD;&#xA; &#xD;&#xA;Application_Number__c = System.Security.SecurityElement.Escape(Application_Number__c); &#xD;&#xA;&#xD;&#xA;SObject_Name__c = System.Security.SecurityElement.Escape(SObject_Name__c); &#xD;&#xA;&#xD;&#xA;SObject_ID__c= System.Security.SecurityElement.Escape(SObject_ID__c); &#xD;&#xA;&#xD;&#xA;Log_Message__c = System.Security.SecurityElement.Escape(Log_Message__c); &#xD;&#xA;&#xD;&#xA;GUID = System.DateTime.Now.ToString(&quot;yyyyMMddHHmmssfffffff&quot;)+&quot;--&quot;+System.Convert.ToString(OrchestrationInstanceId);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;TempXml.LoadXml(System.String.Format(&quot;&lt;ns0:SaveRequest xmlns:ns0=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventRequest&apos;&gt;&lt;ns0:allOrNone&gt;true&lt;/ns0:allOrNone&gt;&lt;ns0:records type=&apos;Event_Request__c&apos;&gt;&lt;ns0:Application_Number__c&gt;{0}&lt;/ns0:Application_Number__c&gt;&lt;ns0:SObject_ID__c&gt;{1}&lt;/ns0:SObject_ID__c&gt;&lt;ns0:Log_Message__c&gt;{2}&lt;/ns0:Log_Message__c&gt;&lt;ns0:SObject_Name__c&gt;{3}&lt;/ns0:SObject_Name__c&gt;&lt;ns0:Stage__c&gt;{4}&lt;/ns0:Stage__c&gt;&lt;ns0:Status__c&gt;{5}&lt;/ns0:Status__c&gt;&lt;ns0:Auto_Decline_Reason__c&gt;{6}&lt;/ns0:Auto_Decline_Reason__c&gt;&lt;ns0:GUID__c&gt;{7}&lt;/ns0:GUID__c&gt;&lt;/ns0:records&gt;&lt;/ns0:SaveRequest&gt;&quot;,Application_Number__c,SObject_ID__c,Log_Message__c,SObject_Name__c,Stage__c,Status__c,Auto_Decline_Reason__c,GUID));&#xD;&#xA;&#xD;&#xA;RestEventRequestMsg.MessagePart = TempXml;&#xD;&#xA;&#xD;&#xA;' />
                            <om:Property Name='ReportToAnalyst' Value='False' />
                            <om:Property Name='Name' Value='Make Request Msg' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='MessageRef' OID='e7aaa676-ad3b-4b9b-a092-1ae10c02d9bb' ParentLink='Construct_MessageRef' LowerBound='51.31' HigherBound='51.50'>
                            <om:Property Name='Ref' Value='RestEventRequestMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Send' OID='6d47e91d-bd62-40ed-9a49-af24cec37cc9' ParentLink='ComplexStatement_Statement' LowerBound='77.1' HigherBound='79.1'>
                        <om:Property Name='PortName' Value='RestEventPort' />
                        <om:Property Name='MessageName' Value='RestEventRequestMsg' />
                        <om:Property Name='OperationName' Value='Operation' />
                        <om:Property Name='OperationMessageName' Value='Request' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Send Rest Event Request' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Receive' OID='6e81659d-4305-431e-a67a-e169f0f4aabe' ParentLink='ComplexStatement_Statement' LowerBound='79.1' HigherBound='81.1'>
                        <om:Property Name='Activate' Value='False' />
                        <om:Property Name='PortName' Value='RestEventPort' />
                        <om:Property Name='MessageName' Value='RestEventResponseMsg' />
                        <om:Property Name='OperationName' Value='Operation' />
                        <om:Property Name='OperationMessageName' Value='Response' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Receive Rest Event Response' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='4e2545d2-ecc7-4ca1-bcad-2f4353b80172' ParentLink='ComplexStatement_Statement' LowerBound='81.1' HigherBound='89.1'>
                        <om:Property Name='Expression' Value='RestResponseStatus = xpath(RestEventResponseMsg.MessagePart, &quot;string(/*[local-name()=&apos;results&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;result&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;success&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;RestCountSFID = System.Convert.ToInt32(xpath(RestEventResponseMsg.MessagePart, &quot;count(/*[local-name()=&apos;results&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;result&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;id&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;])&quot;));&#xD;&#xA;&#xD;&#xA;RestResponseErrorMsg = xpath(RestEventResponseMsg.MessagePart, &quot;string(/*[local-name()=&apos;results&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;result&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;errors&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;message&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;])&quot;);&#xD;&#xA;&#xD;&#xA;RestResponseWarningMsg = xpath(RestEventResponseMsg.MessagePart, &quot;string(/*[local-name()=&apos;results&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;result&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[loca"+
@"l-name()=&apos;warnings&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;]/*[local-name()=&apos;message&apos; and namespace-uri()=&apos;http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Extract Rest Response Values' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Decision' OID='44959a26-f92d-497f-9aa1-06f7f6d620ed' ParentLink='ComplexStatement_Statement' LowerBound='89.1' HigherBound='106.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Valid Response' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='2cfef060-e72d-44a3-a34d-56fd2039d9f5' ParentLink='ReallyComplexStatement_Branch' LowerBound='90.21' HigherBound='93.1'>
                            <om:Property Name='Expression' Value='(RestCountSFID &gt; 0)&amp;&amp;(RestResponseStatus == &quot;true&quot;)' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Valid' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='6ff03e1e-3641-4a82-b9f7-6880d2f549e0' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='VariableAssignment' OID='00b132f4-940c-42b1-92bb-d57eee62f630' ParentLink='ComplexStatement_Statement' LowerBound='95.1' HigherBound='103.1'>
                                <om:Property Name='Expression' Value='RestDLAPAppEventException = new System.Exception(&quot;DLAP Application Import - EventRequest Rest Exception Occurred: An Error while attempting to Inserting EventRequest Data   &quot;+RestResponseErrorMsg+&quot; &quot; +RestResponseWarningMsg);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import Event Request Exception&quot;, RestDLAPAppEventException.Message+Application_Number__c);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Rest Exception' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='Throw' OID='51c4c890-e3fd-4445-90f1-1d0b5c39fffd' ParentLink='ComplexStatement_Statement' LowerBound='103.1' HigherBound='105.1'>
                                <om:Property Name='ThrownReference' Value='RestDLAPAppEventException' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Rest Error ' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                    </om:Element>
                    <om:Element Type='Catch' OID='bcfe77c6-08d5-4014-9a89-940ada438d6b' ParentLink='Scope_Catch' LowerBound='109.1' HigherBound='135.1'>
                        <om:Property Name='ExceptionName' Value='EREx' />
                        <om:Property Name='ExceptionType' Value='System.Exception' />
                        <om:Property Name='IsFaultMessage' Value='False' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Catch Rest Exception' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='VariableAssignment' OID='4943ce37-6eb7-4684-a37c-30dceb48fd68' ParentLink='Catch_Statement' LowerBound='112.1' HigherBound='134.1'>
                            <om:Property Name='Expression' Value='&#xD;&#xA;&#xD;&#xA;if(EREx.InnerException != null)&#xD;&#xA;{&#xD;&#xA;MessageTemp = &quot;Event Request&quot;+ &quot; - &quot;+ EREx.InnerException.ToString();&#xD;&#xA;&#xD;&#xA;Message = MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000, MessageTemp.Length))) +&quot;Total Error String Length:&quot;+MessageTemp.Length.ToString();&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import Event Request Exception&quot;, EREx.Message+Application_Number__c);&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;else&#xD;&#xA;{&#xD;&#xA;MessageTemp = &quot;Event Request&quot;+ &quot; - &quot;+ EREx.Message.ToString();&#xD;&#xA;&#xD;&#xA;Message = MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000, MessageTemp.Length))) +&quot;Total Error String Length:&quot;+MessageTemp.Length.ToString();&#xD;&#xA;&#xD;&#xA;System.Diagnostics.EventLog.WriteEntry(&quot;DLAP Application Import Exception&quot;, EREx.Message+Application_Number__c);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Assign Variables' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='e730237c-d203-49ea-aabb-c5922f587297' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.RestEventPortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='RestEventPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='LogicalBindingAttribute' OID='cb8f9576-30e9-40b2-8d5e-878631c8bbfd' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __Call_Event_Request__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __Call_Event_Request__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "Call_Event_Request__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                Call_Event_Request__c __svc__ = (Call_Event_Request__c)_service;
                __Call_Event_Request__c_root_0 __ctx0__ = (__Call_Event_Request__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.RestEventPort != null)
                {
                    __svc__.RestEventPort.Close(this, null);
                    __svc__.RestEventPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __Call_Event_Request__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __Call_Event_Request__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "Call_Event_Request__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                Call_Event_Request__c __svc__ = (Call_Event_Request__c)_service;
                __Call_Event_Request__c_1 __ctx1__ = (__Call_Event_Request__c_1)(__svc__._stateMgrs[1]);

                if (__ctx1__ != null)
                    __ctx1__.__GUID = null;
                if (__ctx1__ != null)
                    __ctx1__.__MessageTemp = null;
                if (__ctx1__ != null)
                    __ctx1__.__Log_Message__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__TempXml = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestResponseWarningMsg = null;
                if (__ctx1__ != null)
                    __ctx1__.__Stage__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__Status__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__Auto_Decline_Reason__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestResponseErrorMsg = null;
                if (__ctx1__ != null)
                    __ctx1__.__Application_Number__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestDLAPAppEventException = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestResponseStatus = null;
                if (__ctx1__ != null)
                    __ctx1__.__Message = null;
                if (__ctx1__ != null)
                    __ctx1__.__SObject_Name__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__SObject_ID__c = null;
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventRequestMsg")]
            internal RestEventRequestType __RestEventRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventResponseMsg")]
            internal RestEventResponseType __RestEventResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("TempXml")]
            internal Microsoft.XLANGs.RuntimeTypes.XmlDocumentSerializationProxy __TempXml;
            [Microsoft.XLANGs.Core.UserVariableAttribute("GUID")]
            internal System.String __GUID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestResponseStatus")]
            internal System.String __RestResponseStatus;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestCountSFID")]
            internal System.Int32 __RestCountSFID;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestResponseErrorMsg")]
            internal System.String __RestResponseErrorMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestResponseWarningMsg")]
            internal System.String __RestResponseWarningMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("RestDLAPAppEventException")]
            internal System.Exception __RestDLAPAppEventException;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Message")]
            internal System.String __Message;
            [Microsoft.XLANGs.Core.UserVariableAttribute("MessageTemp")]
            internal System.String __MessageTemp;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Application_Number__c")]
            internal System.String __Application_Number__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SObject_ID__c")]
            internal System.String __SObject_ID__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Log_Message__c")]
            internal System.String __Log_Message__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SObject_Name__c")]
            internal System.String __SObject_Name__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Stage__c")]
            internal System.String __Stage__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Status__c")]
            internal System.String __Status__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("Auto_Decline_Reason__c")]
            internal System.String __Auto_Decline_Reason__c;
            [Microsoft.XLANGs.Core.UserVariableAttribute("OrchestrationInstanceId")]
            internal System.Guid __OrchestrationInstanceId;
        }


        [System.SerializableAttribute]
        public class ____scope41_2 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public ____scope41_2(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "??__scope41")
            {
            }

            public override int Index { get { return 2; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[2]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[2]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Microsoft.XLANGs.Core.Segment __seg__;
                Microsoft.XLANGs.Core.FaultReceiveException __fault__;

                __exv__ = _exception;
                if (!(__exv__ is Microsoft.XLANGs.Core.UnknownException))
                {
                    __fault__ = __exv__ as Microsoft.XLANGs.Core.FaultReceiveException;
                    if ((__fault__ == null) && (__exv__ is System.Exception))
                    {
                        __seg__ = _service._segments[3];
                        __seg__.Reset(1);
                        __seg__.PredecessorDone(_service);
                        return true;
                    }
                }

                Finally();
                return false;
            }

            public override void Finally()
            {
                Call_Event_Request__c __svc__ = (Call_Event_Request__c)_service;
                __Call_Event_Request__c_root_0 __ctx0__ = (__Call_Event_Request__c_root_0)(__svc__._stateMgrs[0]);
                __Call_Event_Request__c_1 __ctx1__ = (__Call_Event_Request__c_1)(__svc__._stateMgrs[1]);
                ____scope41_2 __ctx2__ = (____scope41_2)(__svc__._stateMgrs[2]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__RestEventRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestMsg);
                    __ctx1__.__RestEventRequestMsg = null;
                }
                if (__ctx2__ != null)
                    __ctx2__.__EREx_0 = null;
                if (__ctx1__ != null && __ctx1__.__RestEventResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventResponseMsg);
                    __ctx1__.__RestEventResponseMsg = null;
                }
                base.Finally();
            }

            internal object __exv__;
            internal System.Exception __EREx_0
            {
                get { return (System.Exception)__exv__; }
                set { __exv__ = value; }
            }
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("RestEventPort")]
        internal RestEventPortType RestEventPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {RestEventPortType.Operation},
                                               typeof(Call_Event_Request__c).GetField("RestEventPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(Call_Event_Request__c), "RestEventPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "61ef889c-c133-47f8-8712-f61df5ca6902", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "00000000-0000-0000-0000-000000000000", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "f84d8b89-0605-4efc-a0fa-b6bca8404099", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "f84d8b89-0605-4efc-a0fa-b6bca8404099", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "6d47e91d-bd62-40ed-9a49-af24cec37cc9", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "6d47e91d-bd62-40ed-9a49-af24cec37cc9", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "6e81659d-4305-431e-a67a-e169f0f4aabe", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "6e81659d-4305-431e-a67a-e169f0f4aabe", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "4e2545d2-ecc7-4ca1-bcad-2f4353b80172", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "4e2545d2-ecc7-4ca1-bcad-2f4353b80172", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(12, "00000000-0000-0000-0000-000000000000", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(13, "44959a26-f92d-497f-9aa1-06f7f6d620ed", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(14, "00b132f4-940c-42b1-92bb-d57eee62f630", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(15, "00b132f4-940c-42b1-92bb-d57eee62f630", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(16, "51c4c890-e3fd-4445-90f1-1d0b5c39fffd", 2, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(17, "44959a26-f92d-497f-9aa1-06f7f6d620ed", 2, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(18, "bcfe77c6-08d5-4014-9a89-940ada438d6b", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(19, "4943ce37-6eb7-4684-a37c-30dceb48fd68", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(20, "00000000-0000-0000-0000-000000000000", 3, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(21, "00000000-0000-0000-0000-000000000000", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(22, "4943ce37-6eb7-4684-a37c-30dceb48fd68", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(23, "bcfe77c6-08d5-4014-9a89-940ada438d6b", 3, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(24, "61ef889c-c133-47f8-8712-f61df5ca6902", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Scope),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Throw),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Catch),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Catch),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Scope)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,1,1,1,1,1,1,1,1,2,2,2,24,1,1,1,1,};
        public static int[] __progressLocation2 = new int[] { 4,4,4,5,6,6,6,7,8,8,9,10,10,11,11,11,11,13,13,13,14,14,15,15,16,16,17,17,17,17,};
        public static int[] __progressLocation3 = new int[] { 18,18,19,19,19,19,19,19,19,19,19,22,23,23,};

        public static int[][] __progressLocations = new int[4] [] {__progressLocation0,__progressLocation1,__progressLocation2,__progressLocation3};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __Call_Event_Request__c_root_0 __ctx0__ = (__Call_Event_Request__c_root_0)_stateMgrs[0];
            __Call_Event_Request__c_1 __ctx1__ = (__Call_Event_Request__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                RestEventPort = new RestEventPortType(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __Call_Event_Request__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __Call_Event_Request__c_root_0 __ctx0__ = (__Call_Event_Request__c_root_0)_stateMgrs[0];
            __Call_Event_Request__c_1 __ctx1__ = (__Call_Event_Request__c_1)_stateMgrs[1];
            ____scope41_2 __ctx2__ = (____scope41_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__Application_Number__c = (System.String)Args[0];
                __ctx1__.__SObject_ID__c = (System.String)Args[1];
                __ctx1__.__Log_Message__c = (System.String)Args[2];
                __ctx1__.__SObject_Name__c = (System.String)Args[3];
                __ctx1__.__Stage__c = (System.String)Args[4];
                __ctx1__.__Status__c = (System.String)Args[5];
                __ctx1__.__Auto_Decline_Reason__c = (System.String)Args[6];
                __ctx1__.__OrchestrationInstanceId = (System.Guid)Args[7];
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__TempXml = new Microsoft.XLANGs.RuntimeTypes.XmlDocumentSerializationProxy();
                __ctx1__.__GUID = default(System.String);
                __ctx1__.__RestResponseStatus = default(System.String);
                __ctx1__.__RestCountSFID = default(System.Int32);
                __ctx1__.__RestResponseErrorMsg = default(System.String);
                __ctx1__.__RestResponseWarningMsg = default(System.String);
                __ctx1__.__RestDLAPAppEventException = default(System.Exception);
                __ctx1__.__Message = default(System.String);
                __ctx1__.__MessageTemp = default(System.String);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __ctx1__.__TempXml.UnderlyingXmlDocument = new System.Xml.XmlDocument();
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.__GUID = "";
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                __ctx1__.__RestResponseStatus = "";
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                __ctx1__.__RestResponseErrorMsg = "";
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                __ctx1__.__RestResponseWarningMsg = "";
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                __ctx1__.__RestDLAPAppEventException = new System.Exception();
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                __ctx1__.__Message = "";
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                __ctx1__.__MessageTemp = "";
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                __ctx2__ = new ____scope41_2(this);
                _stateMgrs[2] = __ctx2__;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                __ctx1__.StartContext(__seg__, __ctx2__);
                if ( !PostProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null)
                    __ctx1__.__Auto_Decline_Reason__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__Status__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__Stage__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__SObject_Name__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__Log_Message__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__SObject_ID__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__Application_Number__c = null;
                if (__ctx1__ != null)
                    __ctx1__.__MessageTemp = null;
                if (__ctx1__ != null)
                    __ctx1__.__Message = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestDLAPAppEventException = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestResponseWarningMsg = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestResponseErrorMsg = null;
                if (__ctx1__ != null)
                    __ctx1__.__RestResponseStatus = null;
                if (__ctx1__ != null)
                    __ctx1__.__GUID = null;
                if (__ctx1__ != null)
                    __ctx1__.__TempXml = null;
                if (RestEventPort != null)
                {
                    RestEventPort.Close(__ctx1__, __seg__);
                    RestEventPort = null;
                }
                Tracker.FireEvent(__eventLocations[24],__eventData[13],_stateMgrs[1].TrackDataStream );
                __ctx2__.Finally();
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[0],__eventData[0],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 18;
            case 18:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment2(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[2];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[2];
            __Call_Event_Request__c_root_0 __ctx0__ = (__Call_Event_Request__c_root_0)_stateMgrs[0];
            __Call_Event_Request__c_1 __ctx1__ = (__Call_Event_Request__c_1)_stateMgrs[1];
            ____scope41_2 __ctx2__ = (____scope41_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                {
                    RestEventRequestType __RestEventRequestMsg = new RestEventRequestType("RestEventRequestMsg", __ctx1__);

                    __ctx1__.__TempXml.UnderlyingXmlDocument = new System.Xml.XmlDocument();
                    __ctx1__.__Status__c = System.Security.SecurityElement.Escape(__ctx1__.__Status__c);
                    __ctx1__.__Stage__c = System.Security.SecurityElement.Escape(__ctx1__.__Stage__c);
                    __ctx1__.__Application_Number__c = System.Security.SecurityElement.Escape(__ctx1__.__Application_Number__c);
                    __ctx1__.__SObject_Name__c = System.Security.SecurityElement.Escape(__ctx1__.__SObject_Name__c);
                    __ctx1__.__SObject_ID__c = System.Security.SecurityElement.Escape(__ctx1__.__SObject_ID__c);
                    __ctx1__.__Log_Message__c = System.Security.SecurityElement.Escape(__ctx1__.__Log_Message__c);
                    __ctx1__.__GUID = System.DateTime.Now.ToString("yyyyMMddHHmmssfffffff") + "--" + System.Convert.ToString(__ctx1__.__OrchestrationInstanceId);
                    __ctx1__.__TempXml.UnderlyingXmlDocument.LoadXml(System.String.Format("<ns0:SaveRequest xmlns:ns0='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventRequest'><ns0:allOrNone>true</ns0:allOrNone><ns0:records type='Event_Request__c'><ns0:Application_Number__c>{0}</ns0:Application_Number__c><ns0:SObject_ID__c>{1}</ns0:SObject_ID__c><ns0:Log_Message__c>{2}</ns0:Log_Message__c><ns0:SObject_Name__c>{3}</ns0:SObject_Name__c><ns0:Stage__c>{4}</ns0:Stage__c><ns0:Status__c>{5}</ns0:Status__c><ns0:Auto_Decline_Reason__c>{6}</ns0:Auto_Decline_Reason__c><ns0:GUID__c>{7}</ns0:GUID__c></ns0:records></ns0:SaveRequest>", __ctx1__.__Application_Number__c, __ctx1__.__SObject_ID__c, __ctx1__.__Log_Message__c, __ctx1__.__SObject_Name__c, __ctx1__.__Stage__c, __ctx1__.__Status__c, __ctx1__.__Auto_Decline_Reason__c, __ctx1__.__GUID));
                    __RestEventRequestMsg.MessagePart.LoadFrom((System.Xml.XmlDocument)__ctx1__.__TempXml.UnderlyingXmlDocument);

                    if (__ctx1__.__RestEventRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestMsg);
                    __ctx1__.__RestEventRequestMsg = __RestEventRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__RestEventRequestMsg);
                }
                __ctx1__.__RestEventRequestMsg.ConstructionCompleteEvent(false);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__RestEventRequestMsg);
                    Tracker.FireEvent(__eventLocations[5],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                if ( !PreProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[4],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 5;
            case 5:
                if (!__ctx2__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                RestEventPort.SendMessage(0, __ctx1__.__RestEventRequestMsg, null, null, out __ctx0__.__subWrapper0, __ctx2__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 7;
            case 7:
                if ( !PreProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__RestEventRequestMsg);
                    __edata.PortName = @"RestEventPort";
                    Tracker.FireEvent(__eventLocations[7],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__RestEventRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventRequestMsg);
                    __ctx1__.__RestEventRequestMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[8],__eventData[5],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if (!RestEventPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__RestEventResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventResponseMsg);
                __ctx1__.__RestEventResponseMsg = new RestEventResponseType("RestEventResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__RestEventResponseMsg);
                RestEventPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__RestEventResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[2], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                if ( !PreProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__RestEventResponseMsg);
                    __edata.PortName = @"RestEventPort";
                    Tracker.FireEvent(__eventLocations[9],__edata,_stateMgrs[2].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[10],__eventData[6],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                __ctx1__.__RestResponseStatus = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventResponseMsg.MessagePart, "string(/*[local-name()='results' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='result' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='success' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse'])", typeof(System.String));
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[11],__eventData[7],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 14;
            case 14:
                __ctx1__.__RestCountSFID = System.Convert.ToInt32(Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventResponseMsg.MessagePart, "count(/*[local-name()='results' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='result' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='id' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse'])", typeof(System.Object)));
                if ( !PostProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 15;
            case 15:
                __ctx1__.__RestResponseErrorMsg = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventResponseMsg.MessagePart, "string(/*[local-name()='results' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='result' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='errors' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='message' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse'])", typeof(System.String));
                if ( !PostProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 16;
            case 16:
                __ctx1__.__RestResponseWarningMsg = (System.String)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__RestEventResponseMsg.MessagePart, "string(/*[local-name()='results' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='result' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='warnings' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse']/*[local-name()='message' and namespace-uri()='http://SBA.gov/DLAPApplicationImport/REST/INSERT/EventResponse'])", typeof(System.String));
                if (__ctx1__ != null && __ctx1__.__RestEventResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__RestEventResponseMsg);
                    __ctx1__.__RestEventResponseMsg = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[13],__eventData[8],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                __condition__ = (__ctx1__.__RestCountSFID > 0) && (__ctx1__.__RestResponseStatus == "true");
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 20;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 19;
            case 19:
                if ( !PostProgressInc( __seg__, __ctx__, 26 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 26;
            case 20:
                if ( !PreProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[14],__eventData[6],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 21;
            case 21:
                __ctx1__.__RestDLAPAppEventException = new System.Exception("DLAP Application Import - EventRequest Rest Exception Occurred: An Error while attempting to Inserting EventRequest Data   " + __ctx1__.__RestResponseErrorMsg + " " + __ctx1__.__RestResponseWarningMsg);
                if ( !PostProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 22;
            case 22:
                if ( !PreProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[15],__eventData[7],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 23;
            case 23:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import Event Request Exception", __ctx1__.__RestDLAPAppEventException.Message + __ctx1__.__Application_Number__c);
                if ( !PostProgressInc( __seg__, __ctx__, 24 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 24;
            case 24:
                if ( !PreProgressInc( __seg__, __ctx__, 25 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[16],__eventData[9],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 25;
            case 25:
                throw __ctx1__.__RestDLAPAppEventException;
            case 26:
                if ( !PreProgressInc( __seg__, __ctx__, 27 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[17],__eventData[10],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 27;
            case 27:
                if (!__ctx2__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 28 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 28;
            case 28:
                if ( !PreProgressInc( __seg__, __ctx__, 29 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx2__.OnCommit();
                goto case 29;
            case 29:
                __seg__.SegmentDone();
                _segments[1].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment3(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[3];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[2];
            __Call_Event_Request__c_1 __ctx1__ = (__Call_Event_Request__c_1)_stateMgrs[1];
            ____scope41_2 __ctx2__ = (____scope41_2)_stateMgrs[2];

            switch (__seg__.Progress)
            {
            case 0:
                OnBeginCatchHandler(2);
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                if ( !PreProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[18],__eventData[11],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[19],__eventData[8],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                __condition__ = __ctx2__.__EREx_0.InnerException != null;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 8;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.__MessageTemp = "Event Request" + " - " + __ctx2__.__EREx_0.InnerException.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                __ctx1__.__Message = __ctx1__.__MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000U, __ctx1__.__MessageTemp.Length))) + "Total Error String Length:" + __ctx1__.__MessageTemp.Length.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 6;
            case 6:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import Event Request Exception", __ctx2__.__EREx_0.Message + __ctx1__.__Application_Number__c);
                if ( !PostProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 7;
            case 7:
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 8:
                __ctx1__.__MessageTemp = "Event Request" + " - " + __ctx2__.__EREx_0.Message.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 9;
            case 9:
                __ctx1__.__Message = __ctx1__.__MessageTemp.Substring(0, System.Convert.ToInt32(System.Math.Min(10000U, __ctx1__.__MessageTemp.Length))) + "Total Error String Length:" + __ctx1__.__MessageTemp.Length.ToString();
                if ( !PostProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 10;
            case 10:
                System.Diagnostics.EventLog.WriteEntry("DLAP Application Import Exception", __ctx2__.__EREx_0.Message + __ctx1__.__Application_Number__c);
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx2__ != null)
                    __ctx2__.__EREx_0 = null;
                Tracker.FireEvent(__eventLocations[22],__eventData[10],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if ( !PreProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[23],__eventData[12],_stateMgrs[2].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 13;
            case 13:
                __ctx2__.__exv__ = null;
                OnEndCatchHandler(2, __seg__);
                __seg__.SegmentDone();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{3C95B2ED-0AF7-4D88-BA71-AE6F9264A8A9}"))
        };

    }
    //#line 211 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Other_Assistance__c\CallSalesforceOther_Assistance__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectOther_Assistance__c)
        },
        new System.String[] {
            "CDataServiceSelectOtherAssistancePort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesforceOther_Assistance__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesforceOther_Assistance__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesforceOther_Assistance__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesforceOther_Assistance__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesforceOther_Assistance__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesforceOther_Assistance__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesforceOther_Assistance__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesforceOther_Assistance__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>01118a2c-4406-457e-b671-3b5f55b5b6c3</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>f5ce3980-9b92-4309-88e8-64cc1309030a</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>acdc3707-2f3e-44a5-a325-169f8e680942</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Construct Other Assistance Request Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>8c112f3f-17cb-44b4-8d0c-f995a2bcdf9d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Make Other Assistance Request Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>0e0c3d36-f35a-4b21-870a-3323237334cd</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>1413b0f3-0370-44e0-9c38-52f814a87604</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>4cdf412b-a31b-46c0-9212-541a128cd30a</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>bf693a6d-321d-4936-ae46-c4aef7168cf3</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Count Other Asisstance</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>f04f759f-2655-424a-bfc8-28c48c362f66</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Other Assistance Exists?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>40f311ee-6b90-4851-88d9-2c6eb1c75eea</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Other Assistance</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>7036b611-109f-420f-ab52-edbc75e8d390</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Other Assistance Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>c0991332-1330-48cd-ad99-79aa04d99313</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Other Assistance Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>32dfb8ad-e375-4986-9909-aaff36a6f22c</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesforceOther_Assistance__c'</ActionName><IsAtomic>0</IsAtomic><Line>211</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>221</Line><Position>13</Position><ShapeID>'acdc3707-2f3e-44a5-a325-169f8e680942'</ShapeID>
<Messages>
	<MsgInfo><name>SalesforceOther_Assistance__cRequestMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>227</Line><Position>34</Position><ShapeID>'bf693a6d-321d-4936-ae46-c4aef7168cf3'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>229</Line><Position>13</Position><ShapeID>'f04f759f-2655-424a-bfc8-28c48c362f66'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>232</Line><Position>17</Position><ShapeID>'7036b611-109f-420f-ab52-edbc75e8d390'</ShapeID>
<Messages>
	<MsgInfo><name>SalesforceOther_Assistance__cRequestMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>234</Line><Position>17</Position><ShapeID>'c0991332-1330-48cd-ad99-79aa04d99313'</ShapeID>
<Messages>
	<MsgInfo><name>SalesforceOther_Assistance__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='a927c628-21be-4980-9937-802a0aef2e84' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='PortType' OID='4a2cbb8b-599b-4642-8921-aff9f3d08228' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CDataServiceSelectOther_Assistance__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='c98eff81-a90b-427e-b389-fafc6467dce1' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='a1ee39e9-be74-4010-8566-4a5a76a56d54' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.48'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestOther_Assistance__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='3ea09562-8457-43f2-8909-f86f3569e2dc' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.50' HigherBound='16.86'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseOther_Assistance__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='ca891112-c39e-4ea4-a440-ced6cf4ec1ad' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementRequestOther_Assistance__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='29585e01-9ea1-47b0-bbdc-559fb940e941' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='96512b42-8660-4e96-9b95-3fac6766306c' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementResponseOther_Assistance__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='ff5dd39b-506c-409f-a88a-abffe6d62114' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataServiceOther_Assistance__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='ServiceDeclaration' OID='978a1568-ea0f-45b8-b31e-ad1db6a80534' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesforceOther_Assistance__c' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='bfe9ed77-565b-4e09-b499-b74d8000382b' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='OtherAssistanceCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='a58935dc-0101-4b00-89f7-f65f20c2cfc6' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestOther_Assistance__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesforceOther_Assistance__cRequestMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='40021aa8-809b-4f8d-98d0-90033e093b6a' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseOther_Assistance__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='SalesforceOther_Assistance__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='01118a2c-4406-457e-b671-3b5f55b5b6c3' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='f5ce3980-9b92-4309-88e8-64cc1309030a' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Construct' OID='acdc3707-2f3e-44a5-a325-169f8e680942' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='35.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Construct Other Assistance Request Message' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Transform' OID='8c112f3f-17cb-44b4-8d0c-f995a2bcdf9d' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                        <om:Property Name='ClassName' Value='Application_Import_Logic.MakeOtherAssistanceRequestMessage' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Make Other Assistance Request Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='MessagePartRef' OID='0e0c3d36-f35a-4b21-870a-3323237334cd' ParentLink='Transform_InputMessagePartRef' LowerBound='33.142' HigherBound='33.162'>
                            <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='MessagePartReference_1' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                        <om:Element Type='MessagePartRef' OID='1413b0f3-0370-44e0-9c38-52f814a87604' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.78'>
                            <om:Property Name='MessageRef' Value='SalesforceOther_Assistance__cRequestMsg' />
                            <om:Property Name='PartRef' Value='parameters' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='MessagePartReference_2' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='MessageRef' OID='4cdf412b-a31b-46c0-9212-541a128cd30a' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.62'>
                        <om:Property Name='Ref' Value='SalesforceOther_Assistance__cRequestMsg' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                </om:Element>
                <om:Element Type='VariableAssignment' OID='bf693a6d-321d-4936-ae46-c4aef7168cf3' ParentLink='ServiceBody_Statement' LowerBound='35.1' HigherBound='37.1'>
                    <om:Property Name='Expression' Value='OtherAssistanceCount = xpath(SalesforceOther_Assistance__cRequestMsg.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Other_Assistance__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Other_Assistance__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Other_Assistance__c&apos;])&quot;);' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Count Other Asisstance' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='Decision' OID='f04f759f-2655-424a-bfc8-28c48c362f66' ParentLink='ServiceBody_Statement' LowerBound='37.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Other Assistance Exists?' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='DecisionBranch' OID='40f311ee-6b90-4851-88d9-2c6eb1c75eea' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                        <om:Property Name='Expression' Value='OtherAssistanceCount &gt; 0' />
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Other Assistance' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Send' OID='7036b611-109f-420f-ab52-edbc75e8d390' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                            <om:Property Name='PortName' Value='CDataServiceSelectOtherAssistancePort' />
                            <om:Property Name='MessageName' Value='SalesforceOther_Assistance__cRequestMsg' />
                            <om:Property Name='OperationName' Value='statement' />
                            <om:Property Name='OperationMessageName' Value='Request' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Send Other Assistance Request' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                        <om:Element Type='Receive' OID='c0991332-1330-48cd-ad99-79aa04d99313' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                            <om:Property Name='Activate' Value='False' />
                            <om:Property Name='PortName' Value='CDataServiceSelectOtherAssistancePort' />
                            <om:Property Name='MessageName' Value='SalesforceOther_Assistance__cResponseMsg' />
                            <om:Property Name='OperationName' Value='statement' />
                            <om:Property Name='OperationMessageName' Value='Response' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Receive Other Assistance Response' />
                            <om:Property Name='Signal' Value='True' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='DecisionBranch' OID='32dfb8ad-e375-4986-9909-aaff36a6f22c' ParentLink='ReallyComplexStatement_Branch'>
                        <om:Property Name='IsGhostBranch' Value='True' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Else' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='e3963a73-6fc7-4199-b405-39528d337257' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectOther_Assistance__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CDataServiceSelectOtherAssistancePort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='DirectBindingAttribute' OID='ccc44193-fdc6-4514-a0be-c7cc66e306f0' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesforceOther_Assistance__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesforceOther_Assistance__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesforceOther_Assistance__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesforceOther_Assistance__c __svc__ = (CallSalesforceOther_Assistance__c)_service;
                __CallSalesforceOther_Assistance__c_root_0 __ctx0__ = (__CallSalesforceOther_Assistance__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CDataServiceSelectOtherAssistancePort != null)
                {
                    __svc__.CDataServiceSelectOtherAssistancePort.Close(this, null);
                    __svc__.CDataServiceSelectOtherAssistancePort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesforceOther_Assistance__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesforceOther_Assistance__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesforceOther_Assistance__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesforceOther_Assistance__c __svc__ = (CallSalesforceOther_Assistance__c)_service;
                __CallSalesforceOther_Assistance__c_root_0 __ctx0__ = (__CallSalesforceOther_Assistance__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesforceOther_Assistance__c_1 __ctx1__ = (__CallSalesforceOther_Assistance__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__SalesforceOther_Assistance__cRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesforceOther_Assistance__cRequestMsg);
                    __ctx1__.__SalesforceOther_Assistance__cRequestMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__SalesforceOther_Assistance__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesforceOther_Assistance__cResponseMsg);
                    __ctx1__.__SalesforceOther_Assistance__cResponseMsg = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesforceOther_Assistance__cRequestMsg")]
            internal StatementRequestOther_Assistance__c __SalesforceOther_Assistance__cRequestMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("SalesforceOther_Assistance__cResponseMsg")]
            internal StatementResponseOther_Assistance__c __SalesforceOther_Assistance__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("OtherAssistanceCount")]
            internal System.Int32 __OtherAssistanceCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CDataServiceSelectOtherAssistancePort")]
        internal CDataServiceSelectOther_Assistance__c CDataServiceSelectOtherAssistancePort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectOther_Assistance__c.statement},
                                               typeof(CallSalesforceOther_Assistance__c).GetField("CDataServiceSelectOtherAssistancePort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesforceOther_Assistance__c), "CDataServiceSelectOtherAssistancePort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "acdc3707-2f3e-44a5-a325-169f8e680942", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "acdc3707-2f3e-44a5-a325-169f8e680942", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "bf693a6d-321d-4936-ae46-c4aef7168cf3", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "bf693a6d-321d-4936-ae46-c4aef7168cf3", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "f04f759f-2655-424a-bfc8-28c48c362f66", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "7036b611-109f-420f-ab52-edbc75e8d390", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "7036b611-109f-420f-ab52-edbc75e8d390", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "c0991332-1330-48cd-ad99-79aa04d99313", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "c0991332-1330-48cd-ad99-79aa04d99313", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "f04f759f-2655-424a-bfc8-28c48c362f66", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesforceOther_Assistance__c_root_0 __ctx0__ = (__CallSalesforceOther_Assistance__c_root_0)_stateMgrs[0];
            __CallSalesforceOther_Assistance__c_1 __ctx1__ = (__CallSalesforceOther_Assistance__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CDataServiceSelectOtherAssistancePort = new CDataServiceSelectOther_Assistance__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesforceOther_Assistance__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesforceOther_Assistance__c_root_0 __ctx0__ = (__CallSalesforceOther_Assistance__c_root_0)_stateMgrs[0];
            __CallSalesforceOther_Assistance__c_1 __ctx1__ = (__CallSalesforceOther_Assistance__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__OtherAssistanceCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestOther_Assistance__c __SalesforceOther_Assistance__cRequestMsg = new StatementRequestOther_Assistance__c("SalesforceOther_Assistance__cRequestMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeOtherAssistanceRequestMessage), new object[] {__SalesforceOther_Assistance__cRequestMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__SalesforceOther_Assistance__cRequestMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__SalesforceOther_Assistance__cRequestMsg);
                    __ctx1__.__SalesforceOther_Assistance__cRequestMsg = __SalesforceOther_Assistance__cRequestMsg;
                    __ctx1__.RefMessage(__ctx1__.__SalesforceOther_Assistance__cRequestMsg);
                }
                __ctx1__.__SalesforceOther_Assistance__cRequestMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__SalesforceOther_Assistance__cRequestMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__OtherAssistanceCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__SalesforceOther_Assistance__cRequestMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Other_Assistance__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Other_Assistance__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Other_Assistance__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__OtherAssistanceCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CDataServiceSelectOtherAssistancePort.SendMessage(0, __ctx1__.__SalesforceOther_Assistance__cRequestMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__SalesforceOther_Assistance__cRequestMsg);
                    __edata.PortName = @"CDataServiceSelectOtherAssistancePort";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!CDataServiceSelectOtherAssistancePort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__SalesforceOther_Assistance__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__SalesforceOther_Assistance__cResponseMsg);
                __ctx1__.__SalesforceOther_Assistance__cResponseMsg = new StatementResponseOther_Assistance__c("SalesforceOther_Assistance__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__SalesforceOther_Assistance__cResponseMsg);
                CDataServiceSelectOtherAssistancePort.ReceiveMessage(0, __msgEnv__, __ctx1__.__SalesforceOther_Assistance__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__SalesforceOther_Assistance__cResponseMsg);
                    __edata.PortName = @"CDataServiceSelectOtherAssistancePort";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__SalesforceOther_Assistance__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesforceOther_Assistance__cResponseMsg);
                    __ctx1__.__SalesforceOther_Assistance__cResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__SalesforceOther_Assistance__cRequestMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__SalesforceOther_Assistance__cRequestMsg);
                    __ctx1__.__SalesforceOther_Assistance__cRequestMsg = null;
                }
                if (CDataServiceSelectOtherAssistancePort != null)
                {
                    CDataServiceSelectOtherAssistancePort.Close(__ctx1__, __seg__);
                    CDataServiceSelectOtherAssistancePort = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{6595FCDD-8495-4D50-8109-B14F8271E514}"))
        };

    }
    //#line 216 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Additional_Contact__c\CallAddtionalContact.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceSelectAddtional_Contact__c)
        },
        new System.String[] {
            "CDataServiceSelectAddtional_Contact__cPort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable|Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eExecable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallAddtionalContact : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = true;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallAddtionalContact));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallAddtionalContact()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallAddtionalContact_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallAddtionalContact(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallAddtionalContact", tracker)
        {
            ConstructorHelper();
        }

        public CallAddtionalContact(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallAddtionalContact")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>5e05efcb-2e6d-4ba1-bf52-f05f1f1d6731</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>1466b11e-fbb7-4bfc-aefb-0682f4aef8f7</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>bc30093c-c967-4ddd-8581-17aea6a86a25</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Addtional Contact</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>734d0e66-22a8-4519-b00b-fa9a7de6ab16</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Addtional Contact Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>f43133c0-0375-4aca-b861-d7079bfe5558</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map Addtional Conatct</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>58162540-c4f5-437b-9930-de6492f4a667</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>b7dd5092-842a-495f-acf8-b634e757363d</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>0d62dfa3-c665-4b77-8d57-dec0a7090dff</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>5862edf7-dfe7-4c26-91ae-c6afea5f8d64</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count Addtional Contact</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>b441f5a3-e5d3-495c-8a42-096a225572a8</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Addtional Contact Exits?</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>e9ce03bb-0a73-4427-8d38-d20ec2beb9b9</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Addtional Contact</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>d535ed20-4689-4d5f-bdac-a36a3f6a548c</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Addtional Contact</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>7472974d-9c5f-4bb7-90a1-b2b86055e7a5</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Addtional Contact</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>ffc95fa5-4c2a-4642-a1db-55999821b962</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallAddtionalContact'</ActionName><IsAtomic>0</IsAtomic><Line>216</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>226</Line><Position>13</Position><ShapeID>'734d0e66-22a8-4519-b00b-fa9a7de6ab16'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAddtionalContactRequest</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>232</Line><Position>35</Position><ShapeID>'5862edf7-dfe7-4c26-91ae-c6afea5f8d64'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>234</Line><Position>13</Position><ShapeID>'b441f5a3-e5d3-495c-8a42-096a225572a8'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>237</Line><Position>17</Position><ShapeID>'d535ed20-4689-4d5f-bdac-a36a3f6a548c'</ShapeID>
<Messages>
	<MsgInfo><name>CreateAddtionalContactRequest</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>239</Line><Position>17</Position><ShapeID>'7472974d-9c5f-4bb7-90a1-b2b86055e7a5'</ShapeID>
<Messages>
	<MsgInfo><name>AddtionalConatctResponse</name><part>parameters</part><schema>Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='53dee200-7874-4143-977a-254d2627d396' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='PortType' OID='0bfb73bd-78be-468d-b18b-db37e751309a' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CDataServiceSelectAddtional_Contact__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='86ac6dfb-ee7a-4b5a-8452-c9456c2fcdaa' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='statement' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='6edda02a-44a4-4c6d-a648-c96e29180039' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.50'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestAdditional_Contact__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='55169e44-3fc0-4625-8c30-26c6dc9c8200' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.52' HigherBound='16.90'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseAdditional_Contact__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='5f976957-9800-4bf1-b2a5-c781b91ab4ae' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementRequestAdditional_Contact__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='74c1c45e-bab8-430c-962f-20980c85e51b' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='5fb07452-6b37-4b73-ac3c-d77ae267fb5d' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementResponseAdditional_Contact__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='52f098d2-304e-41e1-8c88-e528ecdc8e3b' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition.CDataService_Additional_Contact__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='ServiceDeclaration' OID='93497369-5592-434a-b6f4-18f68146ce01' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallAddtionalContact' />
            <om:Property Name='Signal' Value='False' />
            <om:Element Type='VariableDeclaration' OID='8bc0e986-d08a-4899-b596-343d91e943a7' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AddtionalContactCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='4c668de2-2f78-41bc-aff1-badcdc60b018' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestAdditional_Contact__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateAddtionalContactRequest' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='20892050-b313-4cf6-a756-6f4d042cea02' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseAdditional_Contact__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AddtionalConatctResponse' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='5e05efcb-2e6d-4ba1-bf52-f05f1f1d6731' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='MessageDeclaration' OID='1466b11e-fbb7-4bfc-aefb-0682f4aef8f7' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.110'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='In' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
                <om:Element Type='Task' OID='bc30093c-c967-4ddd-8581-17aea6a86a25' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Addtional Contact' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='734d0e66-22a8-4519-b00b-fa9a7de6ab16' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Addtional Contact Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='f43133c0-0375-4aca-b861-d7079bfe5558' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.MakeAddtionalConatct' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map Addtional Conatct' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='58162540-c4f5-437b-9930-de6492f4a667' ParentLink='Transform_InputMessagePartRef' LowerBound='33.119' HigherBound='33.139'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='b7dd5092-842a-495f-acf8-b634e757363d' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.68'>
                                <om:Property Name='MessageRef' Value='CreateAddtionalContactRequest' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='0d62dfa3-c665-4b77-8d57-dec0a7090dff' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.52'>
                            <om:Property Name='Ref' Value='CreateAddtionalContactRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='5862edf7-dfe7-4c26-91ae-c6afea5f8d64' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                        <om:Property Name='Expression' Value='AddtionalContactCount = xpath(CreateAddtionalContactRequest.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Additional_Contact__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Additional_Contact__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Additional_Contact__c&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count Addtional Contact' />
                        <om:Property Name='Signal' Value='False' />
                    </om:Element>
                    <om:Element Type='Decision' OID='b441f5a3-e5d3-495c-8a42-096a225572a8' ParentLink='ComplexStatement_Statement' LowerBound='37.1' HigherBound='45.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Addtional Contact Exits?' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='e9ce03bb-0a73-4427-8d38-d20ec2beb9b9' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                            <om:Property Name='Expression' Value='AddtionalContactCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Addtional Contact' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Send' OID='d535ed20-4689-4d5f-bdac-a36a3f6a548c' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                                <om:Property Name='PortName' Value='CDataServiceSelectAddtional_Contact__cPort' />
                                <om:Property Name='MessageName' Value='CreateAddtionalContactRequest' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Addtional Contact' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='7472974d-9c5f-4bb7-90a1-b2b86055e7a5' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='CDataServiceSelectAddtional_Contact__cPort' />
                                <om:Property Name='MessageName' Value='AddtionalConatctResponse' />
                                <om:Property Name='OperationName' Value='statement' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Addtional Contact' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='ffc95fa5-4c2a-4642-a1db-55999821b962' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='323cc877-9a07-4853-ab10-523f5e9785a6' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceSelectAddtional_Contact__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CDataServiceSelectAddtional_Contact__cPort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='DirectBindingAttribute' OID='fc277e0b-d81a-45d1-809b-ed4c555f4b82' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='DirectBindingType' Value='MessageBox' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallAddtionalContact_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallAddtionalContact_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallAddtionalContact")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallAddtionalContact __svc__ = (CallAddtionalContact)_service;
                __CallAddtionalContact_root_0 __ctx0__ = (__CallAddtionalContact_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.CDataServiceSelectAddtional_Contact__cPort != null)
                {
                    __svc__.CDataServiceSelectAddtional_Contact__cPort.Close(this, null);
                    __svc__.CDataServiceSelectAddtional_Contact__cPort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallAddtionalContact_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallAddtionalContact_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallAddtionalContact")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallAddtionalContact __svc__ = (CallAddtionalContact)_service;
                __CallAddtionalContact_root_0 __ctx0__ = (__CallAddtionalContact_root_0)(__svc__._stateMgrs[0]);
                __CallAddtionalContact_1 __ctx1__ = (__CallAddtionalContact_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__AddtionalConatctResponse != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__AddtionalConatctResponse);
                    __ctx1__.__AddtionalConatctResponse = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateAddtionalContactRequest != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAddtionalContactRequest);
                    __ctx1__.__CreateAddtionalContactRequest = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateAddtionalContactRequest")]
            internal StatementRequestAdditional_Contact__c __CreateAddtionalContactRequest;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AddtionalConatctResponse")]
            internal StatementResponseAdditional_Contact__c __AddtionalConatctResponse;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AddtionalContactCount")]
            internal System.Int32 __AddtionalContactCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.DirectBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("CDataServiceSelectAddtional_Contact__cPort")]
        internal CDataServiceSelectAddtional_Contact__c CDataServiceSelectAddtional_Contact__cPort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceSelectAddtional_Contact__c.statement},
                                               typeof(CallAddtionalContact).GetField("CDataServiceSelectAddtional_Contact__cPort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallAddtionalContact), "CDataServiceSelectAddtional_Contact__cPort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "734d0e66-22a8-4519-b00b-fa9a7de6ab16", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "734d0e66-22a8-4519-b00b-fa9a7de6ab16", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "5862edf7-dfe7-4c26-91ae-c6afea5f8d64", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "5862edf7-dfe7-4c26-91ae-c6afea5f8d64", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "b441f5a3-e5d3-495c-8a42-096a225572a8", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "d535ed20-4689-4d5f-bdac-a36a3f6a548c", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "d535ed20-4689-4d5f-bdac-a36a3f6a548c", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "7472974d-9c5f-4bb7-90a1-b2b86055e7a5", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "7472974d-9c5f-4bb7-90a1-b2b86055e7a5", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "b441f5a3-e5d3-495c-8a42-096a225572a8", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallAddtionalContact_root_0 __ctx0__ = (__CallAddtionalContact_root_0)_stateMgrs[0];
            __CallAddtionalContact_1 __ctx1__ = (__CallAddtionalContact_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                CDataServiceSelectAddtional_Contact__cPort = new CDataServiceSelectAddtional_Contact__c(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallAddtionalContact_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallAddtionalContact_root_0 __ctx0__ = (__CallAddtionalContact_root_0)_stateMgrs[0];
            __CallAddtionalContact_1 __ctx1__ = (__CallAddtionalContact_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom((Microsoft.XLANGs.Core.XMessage)Args[0]);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__AddtionalContactCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestAdditional_Contact__c __CreateAddtionalContactRequest = new StatementRequestAdditional_Contact__c("CreateAddtionalContactRequest", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeAddtionalConatct), new object[] {__CreateAddtionalContactRequest.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateAddtionalContactRequest != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateAddtionalContactRequest);
                    __ctx1__.__CreateAddtionalContactRequest = __CreateAddtionalContactRequest;
                    __ctx1__.RefMessage(__ctx1__.__CreateAddtionalContactRequest);
                }
                __ctx1__.__CreateAddtionalContactRequest.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateAddtionalContactRequest);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__AddtionalContactCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateAddtionalContactRequest.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Additional_Contact__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Additional_Contact__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Additional_Contact__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__AddtionalContactCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                CDataServiceSelectAddtional_Contact__cPort.SendMessage(0, __ctx1__.__CreateAddtionalContactRequest, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateAddtionalContactRequest);
                    __edata.PortName = @"CDataServiceSelectAddtional_Contact__cPort";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!CDataServiceSelectAddtional_Contact__cPort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__AddtionalConatctResponse != null)
                    __ctx1__.UnrefMessage(__ctx1__.__AddtionalConatctResponse);
                __ctx1__.__AddtionalConatctResponse = new StatementResponseAdditional_Contact__c("AddtionalConatctResponse", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__AddtionalConatctResponse);
                CDataServiceSelectAddtional_Contact__cPort.ReceiveMessage(0, __msgEnv__, __ctx1__.__AddtionalConatctResponse, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__AddtionalConatctResponse);
                    __edata.PortName = @"CDataServiceSelectAddtional_Contact__cPort";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__AddtionalConatctResponse != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__AddtionalConatctResponse);
                    __ctx1__.__AddtionalConatctResponse = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__CreateAddtionalContactRequest != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateAddtionalContactRequest);
                    __ctx1__.__CreateAddtionalContactRequest = null;
                }
                if (CDataServiceSelectAddtional_Contact__cPort != null)
                {
                    CDataServiceSelectAddtional_Contact__cPort.Close(__ctx1__, __seg__);
                    CDataServiceSelectAddtional_Contact__cPort = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{5461EDB2-8848-4BD3-88AD-AC2E2D273413}"))
        };

    }
    //#line 215 "C:\Users\skyeniga\Source\Repos\Biztalk\DLAP Application Import\Application Import Logic\Decline_Withdrawal_Code__c\CallDecline_Withdrawal_Code__c.odx"
    [Microsoft.XLANGs.BaseTypes.ServicePortsAttribute(
        new Microsoft.XLANGs.BaseTypes.EXLangSParameter[] {
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.ePort|Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        },
        new System.Type[] {
            typeof(Application_Import_Logic.CDataServiceDeclineWithdrawalCodePortType)
        },
        new System.String[] {
            "DeclineWithdrawalCodePort"
        },
        new System.Type[] {
            null
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceCallTreeAttribute(
        new System.Type[] {
        },
        new System.Type[] {
        },
        new System.Type[] {
        }
    )]
    [Microsoft.XLANGs.BaseTypes.ServiceAttribute(
        Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal,
        Microsoft.XLANGs.BaseTypes.EXLangSServiceInfo.eCallable
    )]
    [System.SerializableAttribute]
    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed internal class CallSalesForceDecline_Withdrawal_Code__c : Microsoft.BizTalk.XLANGs.BTXEngine.BTXService
    {
        public static readonly Microsoft.XLANGs.BaseTypes.EXLangSAccess __access = Microsoft.XLANGs.BaseTypes.EXLangSAccess.eInternal;
        public static readonly bool __execable = false;
        [Microsoft.XLANGs.BaseTypes.CallCompensationAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSCallCompensationInfo.eHasRequestResponse
,
            new System.String[] {
            },
            new System.String[] {
            }
        )]
        public static void __bodyProxy(
            [ Microsoft.XLANGs.BaseTypes.ServiceParameterAttribute(Microsoft.XLANGs.BaseTypes.EXLangSParameter.eMessage, "") ] ref Application_Import_Definition.HomeDisasterLoanApplicationCanonical ApplicationCanonical)
        {
        }
        private static System.Guid _serviceId = Microsoft.XLANGs.Core.HashHelper.HashServiceType(typeof(CallSalesForceDecline_Withdrawal_Code__c));
        private static volatile System.Guid[] _activationSubIds;

        private static new object _lockIdentity = new object();

        public static System.Guid UUID { get { return _serviceId; } }
        public override System.Guid ServiceId { get { return UUID; } }

        protected override System.Guid[] ActivationSubGuids
        {
            get { return _activationSubIds; }
            set { _activationSubIds = value; }
        }

        protected override object StaleStateLock
        {
            get { return _lockIdentity; }
        }

        protected override bool HasActivation { get { return false; } }

        internal bool IsExeced = false;

        static CallSalesForceDecline_Withdrawal_Code__c()
        {
            Microsoft.BizTalk.XLANGs.BTXEngine.BTXService.CacheStaticState( _serviceId );
        }

        private void ConstructorHelper()
        {
            _segments = new Microsoft.XLANGs.Core.Segment[] {
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment0), 0, 0, 0),
                new Microsoft.XLANGs.Core.Segment( new Microsoft.XLANGs.Core.Segment.SegmentCode(this.segment1), 1, 1, 1)
            };

            _Locks = 0;
            _rootContext = new __CallSalesForceDecline_Withdrawal_Code__c_root_0(this);
            _stateMgrs = new Microsoft.XLANGs.Core.IStateManager[2];
            _stateMgrs[0] = _rootContext;
            FinalConstruct();
        }

        public CallSalesForceDecline_Withdrawal_Code__c(System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXSession session, Microsoft.BizTalk.XLANGs.BTXEngine.BTXEvents tracker)
            : base(instanceId, session, "CallSalesForceDecline_Withdrawal_Code__c", tracker)
        {
            ConstructorHelper();
        }

        public CallSalesForceDecline_Withdrawal_Code__c(int callIndex, System.Guid instanceId, Microsoft.BizTalk.XLANGs.BTXEngine.BTXService parent)
            : base(callIndex, instanceId, parent, "CallSalesForceDecline_Withdrawal_Code__c")
        {
            ConstructorHelper();
        }

        private const string _symInfo = @"
<XsymFile>
<ProcessFlow xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>      <shapeType>RootShape</shapeType>      <ShapeID>dbc73188-4214-4384-8490-104615846d15</ShapeID>      
<children>                          
<ShapeInfo>      <shapeType>TaskShape</shapeType>      <ShapeID>aabd2753-546c-4434-a365-4d2f2743ba32</ShapeID>      <ParentLink>ServiceBody_Statement</ParentLink>                <shapeText>Create Request</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>ConstructShape</shapeType>      <ShapeID>50b6015f-ccd1-4809-bb62-ba1b9aa73e9d</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Construct Create Decline Withdrawal Code Message</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>TransformShape</shapeType>      <ShapeID>58949d18-c9dc-42b6-8101-75957e1006f0</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Map to Create Decline Withdrawal Code</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>d15bcf7c-3c0c-4d97-8d0b-627bac5fe2ef</ShapeID>      <ParentLink>Transform_InputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_1</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessagePartRefShape</shapeType>      <ShapeID>2b726ba2-8b3e-4fee-996d-5e8f67829000</ShapeID>      <ParentLink>Transform_OutputMessagePartRef</ParentLink>                <shapeText>MessagePartReference_2</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageRefShape</shapeType>      <ShapeID>f4e188be-a054-434d-81a7-05389d23652d</ShapeID>      <ParentLink>Construct_MessageRef</ParentLink>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>VariableAssignmentShape</shapeType>      <ShapeID>3cfa36ed-648f-4aa0-93e5-a9139df17095</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Count Decline Withdrawal Code</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionShape</shapeType>      <ShapeID>6032f4d5-18e9-4a01-9d07-276d0fa47129</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Summary Decline Code Exists</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>9e7a784a-6cdb-47f2-a07f-88d5b1973c6f</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Summary Decline Code</shapeText>                  
<children>                          
<ShapeInfo>      <shapeType>SendShape</shapeType>      <ShapeID>789c7c33-c210-4c98-aefb-e7a355aa7813</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Send Decline Code Request</shapeText>                  
<children>                </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>ReceiveShape</shapeType>      <ShapeID>a24047e7-8c54-46d0-ab2d-9b60355e48a9</ShapeID>      <ParentLink>ComplexStatement_Statement</ParentLink>                <shapeText>Receive Decline Code Response</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>DecisionBranchShape</shapeType>      <ShapeID>e0b6844d-7277-4e86-a4e7-4448b05cfc29</ShapeID>      <ParentLink>ReallyComplexStatement_Branch</ParentLink>                <shapeText>Else</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                  </children>
  </ShapeInfo>
                            
<ShapeInfo>      <shapeType>MessageDeclarationShape</shapeType>      <ShapeID>7cb130f3-5835-4f95-9886-f1d419cfa802</ShapeID>      <ParentLink>ServiceBody_Declaration</ParentLink>                <shapeText>ApplicationCanonical</shapeText>                  
<children>                </children>
  </ShapeInfo>
                  </children>
  </ProcessFlow><Metadata>

<TrkMetadata>
<ActionName>'CallSalesForceDecline_Withdrawal_Code__c'</ActionName><IsAtomic>0</IsAtomic><Line>215</Line><Position>14</Position><ShapeID>'e211a116-cb8b-44e7-a052-0de295aa0001'</ShapeID>
<Messages>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>225</Line><Position>13</Position><ShapeID>'50b6015f-ccd1-4809-bb62-ba1b9aa73e9d'</ShapeID>
<Messages>
	<MsgInfo><name>CreateDecline_Withdrawal_Code__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c+parameters</schema><direction>Out</direction></MsgInfo>
	<MsgInfo><name>ApplicationCanonical</name><part>part</part><schema>Application_Import_Definition.HomeDisasterLoanApplicationCanonical</schema><direction>In</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>231</Line><Position>42</Position><ShapeID>'3cfa36ed-648f-4aa0-93e5-a9139df17095'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>233</Line><Position>13</Position><ShapeID>'6032f4d5-18e9-4a01-9d07-276d0fa47129'</ShapeID>
<Messages>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>236</Line><Position>17</Position><ShapeID>'789c7c33-c210-4c98-aefb-e7a355aa7813'</ShapeID>
<Messages>
	<MsgInfo><name>CreateDecline_Withdrawal_Code__cMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c+parameters</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>

<TrkMetadata>
<Line>238</Line><Position>17</Position><ShapeID>'a24047e7-8c54-46d0-ab2d-9b60355e48a9'</ShapeID>
<Messages>
	<MsgInfo><name>CreateDecline_Withdrawal_Code__cResponseMsg</name><part>parameters</part><schema>Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c+table</schema><direction>Out</direction></MsgInfo>
</Messages>
</TrkMetadata>
</Metadata>
</XsymFile>";

        public override string odXml { get { return _symODXML; } }

        private const string _symODXML = @"
<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<om:MetaModel MajorVersion='1' MinorVersion='3' Core='2b131234-7959-458d-834f-2dc0769ce683' ScheduleModel='66366196-361d-448d-976f-cab5e87496d2' xmlns:om='http://schemas.microsoft.com/BizTalk/2003/DesignerData'>
    <om:Element Type='Module' OID='9eb3a07f-1d28-448b-b088-a28173f4d9ab' LowerBound='1.1' HigherBound='48.1'>
        <om:Property Name='ReportToAnalyst' Value='True' />
        <om:Property Name='Name' Value='Application_Import_Logic' />
        <om:Property Name='Signal' Value='False' />
        <om:Element Type='MultipartMessageType' OID='52d9227b-b8dc-4ba4-bc3c-a493e0396c2a' ParentLink='Module_MessageType' LowerBound='4.1' HigherBound='8.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementRequestUpdateDecline_Withdrawal_Code__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='136c7054-fe26-4a01-89de-f37838ab2f73' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='6.1' HigherBound='7.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.parameters' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='MultipartMessageType' OID='c5f4e832-8c02-4eba-8a1a-a399c84c4be8' ParentLink='Module_MessageType' LowerBound='8.1' HigherBound='12.1'>
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='StatementResponseUpdateDecline_Withdrawal_Code__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='PartDeclaration' OID='dc5bf93a-e49b-4802-a1b6-e944e9c1dc40' ParentLink='MultipartMessageType_PartDeclaration' LowerBound='10.1' HigherBound='11.1'>
                <om:Property Name='ClassName' Value='Salesforce_Application_Import_Definition_XSD.CDataService_Decline_Withdrawal_Code__c.table' />
                <om:Property Name='IsBodyPart' Value='True' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='parameters' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
        </om:Element>
        <om:Element Type='ServiceDeclaration' OID='5251775f-14f8-4a69-ac2f-fe126cfc632c' ParentLink='Module_ServiceDeclaration' LowerBound='19.1' HigherBound='47.1'>
            <om:Property Name='InitializedTransactionType' Value='False' />
            <om:Property Name='IsInvokable' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CallSalesForceDecline_Withdrawal_Code__c' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='VariableDeclaration' OID='9f00415a-faca-4e1c-81fe-a50a98a05f3f' ParentLink='ServiceDeclaration_VariableDeclaration' LowerBound='26.1' HigherBound='27.1'>
                <om:Property Name='UseDefaultConstructor' Value='False' />
                <om:Property Name='Type' Value='System.Int32' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='AfterSummaryDeclineCodeCount' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='2082b8b9-9a29-441b-a124-1249aeb9ce3a' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='24.1' HigherBound='25.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementRequestUpdateDecline_Withdrawal_Code__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateDecline_Withdrawal_Code__cMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='MessageDeclaration' OID='24e9c45d-62a7-44c1-9e25-6b4a560677d1' ParentLink='ServiceDeclaration_MessageDeclaration' LowerBound='25.1' HigherBound='26.1'>
                <om:Property Name='Type' Value='Application_Import_Logic.StatementResponseUpdateDecline_Withdrawal_Code__c' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='CreateDecline_Withdrawal_Code__cResponseMsg' />
                <om:Property Name='Signal' Value='True' />
            </om:Element>
            <om:Element Type='ServiceBody' OID='dbc73188-4214-4384-8490-104615846d15' ParentLink='ServiceDeclaration_ServiceBody'>
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='Task' OID='aabd2753-546c-4434-a365-4d2f2743ba32' ParentLink='ServiceBody_Statement' LowerBound='29.1' HigherBound='45.1'>
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Create Request' />
                    <om:Property Name='Signal' Value='True' />
                    <om:Element Type='Construct' OID='50b6015f-ccd1-4809-bb62-ba1b9aa73e9d' ParentLink='ComplexStatement_Statement' LowerBound='29.1' HigherBound='35.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Construct Create Decline Withdrawal Code Message' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='Transform' OID='58949d18-c9dc-42b6-8101-75957e1006f0' ParentLink='ComplexStatement_Statement' LowerBound='32.1' HigherBound='34.1'>
                            <om:Property Name='ClassName' Value='Application_Import_Logic.MakeDeclineWithdrawalCodeRequest' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Map to Create Decline Withdrawal Code' />
                            <om:Property Name='Signal' Value='True' />
                            <om:Element Type='MessagePartRef' OID='d15bcf7c-3c0c-4d97-8d0b-627bac5fe2ef' ParentLink='Transform_InputMessagePartRef' LowerBound='33.137' HigherBound='33.157'>
                                <om:Property Name='MessageRef' Value='ApplicationCanonical' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_1' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                            <om:Element Type='MessagePartRef' OID='2b726ba2-8b3e-4fee-996d-5e8f67829000' ParentLink='Transform_OutputMessagePartRef' LowerBound='33.28' HigherBound='33.74'>
                                <om:Property Name='MessageRef' Value='CreateDecline_Withdrawal_Code__cMsg' />
                                <om:Property Name='PartRef' Value='parameters' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='MessagePartReference_2' />
                                <om:Property Name='Signal' Value='False' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='MessageRef' OID='f4e188be-a054-434d-81a7-05389d23652d' ParentLink='Construct_MessageRef' LowerBound='30.23' HigherBound='30.58'>
                            <om:Property Name='Ref' Value='CreateDecline_Withdrawal_Code__cMsg' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                    <om:Element Type='VariableAssignment' OID='3cfa36ed-648f-4aa0-93e5-a9139df17095' ParentLink='ComplexStatement_Statement' LowerBound='35.1' HigherBound='37.1'>
                        <om:Property Name='Expression' Value='AfterSummaryDeclineCodeCount = xpath(CreateDecline_Withdrawal_Code__cMsg.parameters,&quot;count(/*[local-name()=&apos;parameters&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Decline_Withdrawal_Code__c&apos;]/*[local-name()=&apos;sync&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Decline_Withdrawal_Code__c&apos;]/*[local-name()=&apos;after&apos; and namespace-uri()=&apos;http://sba-oda/DLAP/Decline_Withdrawal_Code__c&apos;])&quot;);' />
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Count Decline Withdrawal Code' />
                        <om:Property Name='Signal' Value='True' />
                    </om:Element>
                    <om:Element Type='Decision' OID='6032f4d5-18e9-4a01-9d07-276d0fa47129' ParentLink='ComplexStatement_Statement' LowerBound='37.1' HigherBound='45.1'>
                        <om:Property Name='ReportToAnalyst' Value='True' />
                        <om:Property Name='Name' Value='Summary Decline Code Exists' />
                        <om:Property Name='Signal' Value='True' />
                        <om:Element Type='DecisionBranch' OID='9e7a784a-6cdb-47f2-a07f-88d5b1973c6f' ParentLink='ReallyComplexStatement_Branch' LowerBound='38.13' HigherBound='45.1'>
                            <om:Property Name='Expression' Value='AfterSummaryDeclineCodeCount &gt; 0' />
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Summary Decline Code' />
                            <om:Property Name='Signal' Value='False' />
                            <om:Element Type='Send' OID='789c7c33-c210-4c98-aefb-e7a355aa7813' ParentLink='ComplexStatement_Statement' LowerBound='40.1' HigherBound='42.1'>
                                <om:Property Name='PortName' Value='DeclineWithdrawalCodePort' />
                                <om:Property Name='MessageName' Value='CreateDecline_Withdrawal_Code__cMsg' />
                                <om:Property Name='OperationName' Value='Operation' />
                                <om:Property Name='OperationMessageName' Value='Request' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Send Decline Code Request' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                            <om:Element Type='Receive' OID='a24047e7-8c54-46d0-ab2d-9b60355e48a9' ParentLink='ComplexStatement_Statement' LowerBound='42.1' HigherBound='44.1'>
                                <om:Property Name='Activate' Value='False' />
                                <om:Property Name='PortName' Value='DeclineWithdrawalCodePort' />
                                <om:Property Name='MessageName' Value='CreateDecline_Withdrawal_Code__cResponseMsg' />
                                <om:Property Name='OperationName' Value='Operation' />
                                <om:Property Name='OperationMessageName' Value='Response' />
                                <om:Property Name='ReportToAnalyst' Value='True' />
                                <om:Property Name='Name' Value='Receive Decline Code Response' />
                                <om:Property Name='Signal' Value='True' />
                            </om:Element>
                        </om:Element>
                        <om:Element Type='DecisionBranch' OID='e0b6844d-7277-4e86-a4e7-4448b05cfc29' ParentLink='ReallyComplexStatement_Branch'>
                            <om:Property Name='IsGhostBranch' Value='True' />
                            <om:Property Name='ReportToAnalyst' Value='True' />
                            <om:Property Name='Name' Value='Else' />
                            <om:Property Name='Signal' Value='False' />
                        </om:Element>
                    </om:Element>
                </om:Element>
                <om:Element Type='MessageDeclaration' OID='7cb130f3-5835-4f95-9886-f1d419cfa802' ParentLink='ServiceBody_Declaration' LowerBound='27.15' HigherBound='27.114'>
                    <om:Property Name='Type' Value='Application_Import_Definition.HomeDisasterLoanApplicationCanonical' />
                    <om:Property Name='ParamDirection' Value='Ref' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='ApplicationCanonical' />
                    <om:Property Name='Signal' Value='True' />
                </om:Element>
            </om:Element>
            <om:Element Type='PortDeclaration' OID='a5945ade-8c0b-416d-badf-bd4c3eea7236' ParentLink='ServiceDeclaration_PortDeclaration' LowerBound='22.1' HigherBound='24.1'>
                <om:Property Name='PortModifier' Value='Uses' />
                <om:Property Name='Orientation' Value='Right' />
                <om:Property Name='PortIndex' Value='-1' />
                <om:Property Name='IsWebPort' Value='False' />
                <om:Property Name='OrderedDelivery' Value='False' />
                <om:Property Name='DeliveryNotification' Value='None' />
                <om:Property Name='Type' Value='Application_Import_Logic.CDataServiceDeclineWithdrawalCodePortType' />
                <om:Property Name='ParamDirection' Value='In' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='DeclineWithdrawalCodePort' />
                <om:Property Name='Signal' Value='False' />
                <om:Element Type='LogicalBindingAttribute' OID='2a2f3044-81fc-4edf-a35d-df506b962dcb' ParentLink='PortDeclaration_CLRAttribute' LowerBound='22.1' HigherBound='23.1'>
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
        <om:Element Type='PortType' OID='f4c78b60-5b60-4892-8a7a-60fbc41e896e' ParentLink='Module_PortType' LowerBound='12.1' HigherBound='19.1'>
            <om:Property Name='Synchronous' Value='True' />
            <om:Property Name='TypeModifier' Value='Internal' />
            <om:Property Name='ReportToAnalyst' Value='True' />
            <om:Property Name='Name' Value='CDataServiceDeclineWithdrawalCodePortType' />
            <om:Property Name='Signal' Value='True' />
            <om:Element Type='OperationDeclaration' OID='f0b841f6-c82d-49cb-ac64-d924b3c9d633' ParentLink='PortType_OperationDeclaration' LowerBound='14.1' HigherBound='18.1'>
                <om:Property Name='OperationType' Value='RequestResponse' />
                <om:Property Name='ReportToAnalyst' Value='True' />
                <om:Property Name='Name' Value='Operation' />
                <om:Property Name='Signal' Value='True' />
                <om:Element Type='MessageRef' OID='f895b608-d752-4f62-b2b2-c1eff312e64a' ParentLink='OperationDeclaration_RequestMessageRef' LowerBound='16.13' HigherBound='16.61'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementRequestUpdateDecline_Withdrawal_Code__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Request' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
                <om:Element Type='MessageRef' OID='42badc04-0911-4c8f-b330-1f1d540db9f9' ParentLink='OperationDeclaration_ResponseMessageRef' LowerBound='16.63' HigherBound='16.112'>
                    <om:Property Name='Ref' Value='Application_Import_Logic.StatementResponseUpdateDecline_Withdrawal_Code__c' />
                    <om:Property Name='ReportToAnalyst' Value='True' />
                    <om:Property Name='Name' Value='Response' />
                    <om:Property Name='Signal' Value='False' />
                </om:Element>
            </om:Element>
        </om:Element>
    </om:Element>
</om:MetaModel>
";

        [System.SerializableAttribute]
        public class __CallSalesForceDecline_Withdrawal_Code__c_root_0 : Microsoft.XLANGs.Core.ServiceContext
        {
            public __CallSalesForceDecline_Withdrawal_Code__c_root_0(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceDecline_Withdrawal_Code__c")
            {
            }

            public override int Index { get { return 0; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[0]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[0]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceDecline_Withdrawal_Code__c __svc__ = (CallSalesForceDecline_Withdrawal_Code__c)_service;
                __CallSalesForceDecline_Withdrawal_Code__c_root_0 __ctx0__ = (__CallSalesForceDecline_Withdrawal_Code__c_root_0)(__svc__._stateMgrs[0]);

                if (__svc__.DeclineWithdrawalCodePort != null)
                {
                    __svc__.DeclineWithdrawalCodePort.Close(this, null);
                    __svc__.DeclineWithdrawalCodePort = null;
                }
                base.Finally();
            }

            internal Microsoft.XLANGs.Core.SubscriptionWrapper __subWrapper0;
        }


        [System.SerializableAttribute]
        public class __CallSalesForceDecline_Withdrawal_Code__c_1 : Microsoft.XLANGs.Core.ExceptionHandlingContext
        {
            public __CallSalesForceDecline_Withdrawal_Code__c_1(Microsoft.XLANGs.Core.Service svc)
                : base(svc, "CallSalesForceDecline_Withdrawal_Code__c")
            {
            }

            public override int Index { get { return 1; } }

            public override bool CombineParentCommit { get { return true; } }

            public override Microsoft.XLANGs.Core.Segment InitialSegment
            {
                get { return _service._segments[1]; }
            }
            public override Microsoft.XLANGs.Core.Segment FinalSegment
            {
                get { return _service._segments[1]; }
            }

            public override int CompensationSegment { get { return -1; } }
            public override bool OnError()
            {
                Finally();
                return false;
            }

            public override void Finally()
            {
                CallSalesForceDecline_Withdrawal_Code__c __svc__ = (CallSalesForceDecline_Withdrawal_Code__c)_service;
                __CallSalesForceDecline_Withdrawal_Code__c_root_0 __ctx0__ = (__CallSalesForceDecline_Withdrawal_Code__c_root_0)(__svc__._stateMgrs[0]);
                __CallSalesForceDecline_Withdrawal_Code__c_1 __ctx1__ = (__CallSalesForceDecline_Withdrawal_Code__c_1)(__svc__._stateMgrs[1]);

                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(__svc__, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateDecline_Withdrawal_Code__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg);
                    __ctx1__.__CreateDecline_Withdrawal_Code__cMsg = null;
                }
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if (__ctx1__ != null && __ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg);
                    __ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg = null;
                }
                base.Finally();
            }

            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateDecline_Withdrawal_Code__cMsg")]
            internal StatementRequestUpdateDecline_Withdrawal_Code__c __CreateDecline_Withdrawal_Code__cMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("CreateDecline_Withdrawal_Code__cResponseMsg")]
            internal StatementResponseUpdateDecline_Withdrawal_Code__c __CreateDecline_Withdrawal_Code__cResponseMsg;
            [Microsoft.XLANGs.Core.UserVariableAttribute("ApplicationCanonical")]
            public __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical __ApplicationCanonical;
            [Microsoft.XLANGs.Core.UserVariableAttribute("AfterSummaryDeclineCodeCount")]
            internal System.Int32 __AfterSummaryDeclineCodeCount;
        }

        private static Microsoft.XLANGs.Core.CorrelationType[] _correlationTypes = null;
        public override Microsoft.XLANGs.Core.CorrelationType[] CorrelationTypes { get { return _correlationTypes; } }

        private static System.Guid[] _convoySetIds;

        public override System.Guid[] ConvoySetGuids
        {
            get { return _convoySetIds; }
            set { _convoySetIds = value; }
        }

        public static object[] StaticConvoySetInformation
        {
            get {
                return null;
            }
        }

        [Microsoft.XLANGs.BaseTypes.LogicalBindingAttribute()]
        [Microsoft.XLANGs.BaseTypes.PortAttribute(
            Microsoft.XLANGs.BaseTypes.EXLangSParameter.eUses
        )]
        [Microsoft.XLANGs.Core.UserVariableAttribute("DeclineWithdrawalCodePort")]
        internal CDataServiceDeclineWithdrawalCodePortType DeclineWithdrawalCodePort;

        public static Microsoft.XLANGs.Core.PortInfo[] _portInfo = new Microsoft.XLANGs.Core.PortInfo[] {
            new Microsoft.XLANGs.Core.PortInfo(new Microsoft.XLANGs.Core.OperationInfo[] {CDataServiceDeclineWithdrawalCodePortType.Operation},
                                               typeof(CallSalesForceDecline_Withdrawal_Code__c).GetField("DeclineWithdrawalCodePort", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance),
                                               Microsoft.XLANGs.BaseTypes.Polarity.uses,
                                               false,
                                               Microsoft.XLANGs.Core.HashHelper.HashPort(typeof(CallSalesForceDecline_Withdrawal_Code__c), "DeclineWithdrawalCodePort"),
                                               null)
        };

        public override Microsoft.XLANGs.Core.PortInfo[] PortInformation
        {
            get { return _portInfo; }
        }

        static public System.Collections.Hashtable PortsInformation
        {
            get
            {
                System.Collections.Hashtable h = new System.Collections.Hashtable();
                h[_portInfo[0].Name] = _portInfo[0];
                return h;
            }
        }

        public static System.Type[] InvokedServicesTypes
        {
            get
            {
                return new System.Type[] {
                    // type of each service invoked by this service
                };
            }
        }

        public static System.Type[] CalledServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }

        public static System.Type[] ExecedServicesTypes
        {
            get
            {
                return new System.Type[] {
                };
            }
        }


        public static Microsoft.XLANGs.RuntimeTypes.Location[] __eventLocations = new Microsoft.XLANGs.RuntimeTypes.Location[] {
            new Microsoft.XLANGs.RuntimeTypes.Location(0, "00000000-0000-0000-0000-000000000000", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(1, "00000000-0000-0000-0000-000000000000", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(2, "50b6015f-ccd1-4809-bb62-ba1b9aa73e9d", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(3, "50b6015f-ccd1-4809-bb62-ba1b9aa73e9d", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(4, "3cfa36ed-648f-4aa0-93e5-a9139df17095", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(5, "3cfa36ed-648f-4aa0-93e5-a9139df17095", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(6, "6032f4d5-18e9-4a01-9d07-276d0fa47129", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(7, "789c7c33-c210-4c98-aefb-e7a355aa7813", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(8, "789c7c33-c210-4c98-aefb-e7a355aa7813", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(9, "a24047e7-8c54-46d0-ab2d-9b60355e48a9", 1, true),
            new Microsoft.XLANGs.RuntimeTypes.Location(10, "a24047e7-8c54-46d0-ab2d-9b60355e48a9", 1, false),
            new Microsoft.XLANGs.RuntimeTypes.Location(11, "6032f4d5-18e9-4a01-9d07-276d0fa47129", 1, false)
        };

        public override Microsoft.XLANGs.RuntimeTypes.Location[] EventLocations
        {
            get { return __eventLocations; }
        }

        public static Microsoft.XLANGs.RuntimeTypes.EventData[] __eventData = new Microsoft.XLANGs.RuntimeTypes.EventData[] {
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Body),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Construct),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Expression),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.If),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Send),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.Start | Microsoft.XLANGs.RuntimeTypes.Operation.Receive),
            new Microsoft.XLANGs.RuntimeTypes.EventData( Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.If)
        };

        public static int[] __progressLocation0 = new int[] { 0,0,0,1,1,};
        public static int[] __progressLocation1 = new int[] { 0,0,1,2,2,3,4,4,5,6,6,7,7,7,8,9,9,10,11,1,1,1,1,1,};

        public static int[][] __progressLocations = new int[2] [] {__progressLocation0,__progressLocation1};
        public override int[][] ProgressLocations {get {return __progressLocations;} }

        public Microsoft.XLANGs.Core.StopConditions segment0(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[0];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[0];
            __CallSalesForceDecline_Withdrawal_Code__c_root_0 __ctx0__ = (__CallSalesForceDecline_Withdrawal_Code__c_root_0)_stateMgrs[0];
            __CallSalesForceDecline_Withdrawal_Code__c_1 __ctx1__ = (__CallSalesForceDecline_Withdrawal_Code__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                DeclineWithdrawalCodePort = new CDataServiceDeclineWithdrawalCodePortType(0, this);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.Initialized) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.Initialized;
                goto case 1;
            case 1:
                __ctx1__ = new __CallSalesForceDecline_Withdrawal_Code__c_1(this);
                _stateMgrs[1] = __ctx1__;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                __ctx0__.StartContext(__seg__, __ctx1__);
                if ( !PostProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                return Microsoft.XLANGs.Core.StopConditions.Blocked;
            case 3:
                if (!__ctx0__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 4;
            case 4:
                __ctx1__.Finally();
                ServiceDone(__seg__, (Microsoft.XLANGs.Core.Context)_stateMgrs[0]);
                __ctx0__.OnCommit();
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }

        public Microsoft.XLANGs.Core.StopConditions segment1(Microsoft.XLANGs.Core.StopConditions stopOn)
        {
            Microsoft.XLANGs.Core.Envelope __msgEnv__ = null;
            bool __condition__;
            Microsoft.XLANGs.Core.Segment __seg__ = _segments[1];
            Microsoft.XLANGs.Core.Context __ctx__ = (Microsoft.XLANGs.Core.Context)_stateMgrs[1];
            __CallSalesForceDecline_Withdrawal_Code__c_root_0 __ctx0__ = (__CallSalesForceDecline_Withdrawal_Code__c_root_0)_stateMgrs[0];
            __CallSalesForceDecline_Withdrawal_Code__c_1 __ctx1__ = (__CallSalesForceDecline_Withdrawal_Code__c_1)_stateMgrs[1];

            switch (__seg__.Progress)
            {
            case 0:
                __ctx1__.__ApplicationCanonical = new __messagetype_Application_Import_Definition_HomeDisasterLoanApplicationCanonical("ApplicationCanonical", __ctx1__);
                __ctx1__.__ApplicationCanonical.CopyFrom(((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message);
                __ctx1__.RefMessage(__ctx1__.__ApplicationCanonical);
                __ctx1__.__ApplicationCanonical.ConstructionCompleteEvent();
                if ( !PostProgressInc( __seg__, __ctx__, 1 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 1;
            case 1:
                __ctx1__.__AfterSummaryDeclineCodeCount = default(System.Int32);
                __ctx__.PrologueCompleted = true;
                if ( !PostProgressInc( __seg__, __ctx__, 2 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 2;
            case 2:
                if ( !PreProgressInc( __seg__, __ctx__, 3 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[1],__eventData[1],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 3;
            case 3:
                if ( !PreProgressInc( __seg__, __ctx__, 4 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[2],__eventData[2],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 4;
            case 4:
                {
                    StatementRequestUpdateDecline_Withdrawal_Code__c __CreateDecline_Withdrawal_Code__cMsg = new StatementRequestUpdateDecline_Withdrawal_Code__c("CreateDecline_Withdrawal_Code__cMsg", __ctx1__);

                    ApplyTransform(typeof(Application_Import_Logic.MakeDeclineWithdrawalCodeRequest), new object[] {__CreateDecline_Withdrawal_Code__cMsg.parameters}, new object[] {__ctx1__.__ApplicationCanonical.part});

                    if (__ctx1__.__CreateDecline_Withdrawal_Code__cMsg != null)
                        __ctx1__.UnrefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg);
                    __ctx1__.__CreateDecline_Withdrawal_Code__cMsg = __CreateDecline_Withdrawal_Code__cMsg;
                    __ctx1__.RefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg);
                }
                __ctx1__.__CreateDecline_Withdrawal_Code__cMsg.ConstructionCompleteEvent(true);
                if ( !PostProgressInc( __seg__, __ctx__, 5 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 5;
            case 5:
                if ( !PreProgressInc( __seg__, __ctx__, 6 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Construct);
                    __edata.Messages.Add(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[3],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 6;
            case 6:
                if ( !PreProgressInc( __seg__, __ctx__, 7 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[4],__eventData[3],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 7;
            case 7:
                __ctx1__.__AfterSummaryDeclineCodeCount = (System.Int32)Microsoft.XLANGs.Core.Part.XPathLoad(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg.parameters, "count(/*[local-name()='parameters' and namespace-uri()='http://sba-oda/DLAP/Decline_Withdrawal_Code__c']/*[local-name()='sync' and namespace-uri()='http://sba-oda/DLAP/Decline_Withdrawal_Code__c']/*[local-name()='after' and namespace-uri()='http://sba-oda/DLAP/Decline_Withdrawal_Code__c'])", typeof(System.Int32));
                if ( !PostProgressInc( __seg__, __ctx__, 8 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 8;
            case 8:
                if ( !PreProgressInc( __seg__, __ctx__, 9 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[5],__eventData[4],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 9;
            case 9:
                if ( !PreProgressInc( __seg__, __ctx__, 10 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[6],__eventData[5],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 10;
            case 10:
                __condition__ = __ctx1__.__AfterSummaryDeclineCodeCount > 0;
                if (!__condition__)
                {
                    if ( !PostProgressInc( __seg__, __ctx__, 18 ) )
                        return Microsoft.XLANGs.Core.StopConditions.Paused;
                    goto case 18;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 11 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 11;
            case 11:
                if ( !PreProgressInc( __seg__, __ctx__, 12 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[7],__eventData[6],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 12;
            case 12:
                if (!__ctx1__.PrepareToPendingCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 13 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 13;
            case 13:
                if ( !PreProgressInc( __seg__, __ctx__, 14 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                DeclineWithdrawalCodePort.SendMessage(0, __ctx1__.__CreateDecline_Withdrawal_Code__cMsg, null, null, out __ctx0__.__subWrapper0, __ctx1__, __seg__ );
                if ((stopOn & Microsoft.XLANGs.Core.StopConditions.OutgoingRqst) != 0)
                    return Microsoft.XLANGs.Core.StopConditions.OutgoingRqst;
                goto case 14;
            case 14:
                if ( !PreProgressInc( __seg__, __ctx__, 15 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Send);
                    __edata.Messages.Add(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg);
                    __edata.PortName = @"DeclineWithdrawalCodePort";
                    Tracker.FireEvent(__eventLocations[8],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 15;
            case 15:
                if ( !PreProgressInc( __seg__, __ctx__, 16 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                Tracker.FireEvent(__eventLocations[9],__eventData[7],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 16;
            case 16:
                if (!DeclineWithdrawalCodePort.GetMessageId(__ctx0__.__subWrapper0.getSubscription(this), __seg__, __ctx1__, out __msgEnv__, _locations[0]))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if (__ctx0__ != null && __ctx0__.__subWrapper0 != null)
                {
                    __ctx0__.__subWrapper0.Destroy(this, __ctx0__);
                    __ctx0__.__subWrapper0 = null;
                }
                if (__ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg != null)
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg);
                __ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg = new StatementResponseUpdateDecline_Withdrawal_Code__c("CreateDecline_Withdrawal_Code__cResponseMsg", __ctx1__);
                __ctx1__.RefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg);
                DeclineWithdrawalCodePort.ReceiveMessage(0, __msgEnv__, __ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg, null, (Microsoft.XLANGs.Core.Context)_stateMgrs[1], __seg__);
                if ( !PostProgressInc( __seg__, __ctx__, 17 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 17;
            case 17:
                if ( !PreProgressInc( __seg__, __ctx__, 18 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Receive);
                    __edata.Messages.Add(__ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg);
                    __edata.PortName = @"DeclineWithdrawalCodePort";
                    Tracker.FireEvent(__eventLocations[10],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (__ctx1__ != null && __ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg);
                    __ctx1__.__CreateDecline_Withdrawal_Code__cResponseMsg = null;
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 18;
            case 18:
                if ( !PreProgressInc( __seg__, __ctx__, 19 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                if (__ctx1__ != null && __ctx1__.__CreateDecline_Withdrawal_Code__cMsg != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__CreateDecline_Withdrawal_Code__cMsg);
                    __ctx1__.__CreateDecline_Withdrawal_Code__cMsg = null;
                }
                if (DeclineWithdrawalCodePort != null)
                {
                    DeclineWithdrawalCodePort.Close(__ctx1__, __seg__);
                    DeclineWithdrawalCodePort = null;
                }
                Tracker.FireEvent(__eventLocations[11],__eventData[8],_stateMgrs[1].TrackDataStream );
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 19;
            case 19:
                if ( !PreProgressInc( __seg__, __ctx__, 20 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                {
                    Microsoft.XLANGs.RuntimeTypes.EventData __edata = new Microsoft.XLANGs.RuntimeTypes.EventData(Microsoft.XLANGs.RuntimeTypes.Operation.End | Microsoft.XLANGs.RuntimeTypes.Operation.Body);
                    __edata.Messages.Add(__ctx1__.__ApplicationCanonical);
                    Tracker.FireEvent(__eventLocations[0],__edata,_stateMgrs[1].TrackDataStream );
                }
                if (IsDebugged)
                    return Microsoft.XLANGs.Core.StopConditions.InBreakpoint;
                goto case 20;
            case 20:
                if (!__ctx1__.CleanupAndPrepareToCommit(__seg__))
                    return Microsoft.XLANGs.Core.StopConditions.Blocked;
                if ( !PostProgressInc( __seg__, __ctx__, 21 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 21;
            case 21:
                if ( !PreProgressInc( __seg__, __ctx__, 22 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                __ctx1__.OnCommit();
                goto case 22;
            case 22:
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).message = __ctx1__.__ApplicationCanonical;
                ((Microsoft.XLANGs.Core.MessageTuple)(Args[0])).context.RefMessage(__ctx1__.__ApplicationCanonical);
                if (__ctx1__ != null && __ctx1__.__ApplicationCanonical != null)
                {
                    __ctx1__.UnrefMessage(__ctx1__.__ApplicationCanonical);
                    __ctx1__.__ApplicationCanonical = null;
                }
                if ( !PostProgressInc( __seg__, __ctx__, 23 ) )
                    return Microsoft.XLANGs.Core.StopConditions.Paused;
                goto case 23;
            case 23:
                __seg__.SegmentDone();
                _segments[0].PredecessorDone(this);
                break;
            }
            return Microsoft.XLANGs.Core.StopConditions.Completed;
        }
        private static Microsoft.XLANGs.Core.CachedObject[] _locations = new Microsoft.XLANGs.Core.CachedObject[] {
            new Microsoft.XLANGs.Core.CachedObject(new System.Guid("{2E44B1BF-94D1-40E1-B0D1-E752BC238FD7}"))
        };

    }

    [Microsoft.XLANGs.BaseTypes.BPELExportableAttribute(false)]
    sealed public class _MODULE_PROXY_ { }
}
